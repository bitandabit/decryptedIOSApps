//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UIViewController.h"

#import "SPTNowPlayingContainedViewController.h"
#import "SPTNowPlayingModelObserver.h"
#import "SPTNowPlayingRemoteControlPolicyProvider.h"
#import "SPTNowPlayingRunningHeadUnitViewDelegate.h"
#import "SPTOfflineModeStateObserver.h"
#import "SPTRunningPlaybackManagerObserver.h"

@class NSString, SPTNowPlayingLogger, SPTNowPlayingModel, SPTNowPlayingRunningHeadUnitView, SPTTheme, UIViewController<SPTNowPlayingContainingViewController>;

@interface SPTNowPlayingRunningHeadUnitViewController : UIViewController <SPTNowPlayingModelObserver, SPTNowPlayingRunningHeadUnitViewDelegate, SPTOfflineModeStateObserver, SPTRunningPlaybackManagerObserver, SPTNowPlayingContainedViewController, SPTNowPlayingRemoteControlPolicyProvider>
{
    SPTNowPlayingModel *_nowPlayingModel;
    SPTTheme *_theme;
    id <SPTUpsellManager> _upsellManager;
    id <SPTRunningPlaybackManager> _runningPlaybackManager;
    id <SPTRunningUserInterfaceFactory> _userInterfaceFactory;
    id <SPTOfflineModeState> _offlineModeState;
    SPTNowPlayingLogger *_logger;
    id <SPTRunningLocalisationManager> _localisationManager;
    id <SPTRunningTestManager> _testManager;
}

@property(retain, nonatomic) id <SPTRunningTestManager> testManager; // @synthesize testManager=_testManager;
@property(retain, nonatomic) id <SPTRunningLocalisationManager> localisationManager; // @synthesize localisationManager=_localisationManager;
@property(retain, nonatomic) SPTNowPlayingLogger *logger; // @synthesize logger=_logger;
@property(retain, nonatomic) id <SPTOfflineModeState> offlineModeState; // @synthesize offlineModeState=_offlineModeState;
@property(retain, nonatomic) id <SPTRunningUserInterfaceFactory> userInterfaceFactory; // @synthesize userInterfaceFactory=_userInterfaceFactory;
@property(retain, nonatomic) id <SPTRunningPlaybackManager> runningPlaybackManager; // @synthesize runningPlaybackManager=_runningPlaybackManager;
@property(retain, nonatomic) id <SPTUpsellManager> upsellManager; // @synthesize upsellManager=_upsellManager;
@property(retain, nonatomic) SPTTheme *theme; // @synthesize theme=_theme;
@property(retain, nonatomic) SPTNowPlayingModel *nowPlayingModel; // @synthesize nowPlayingModel=_nowPlayingModel;
- (void).cxx_destruct;
- (id)provideRemoteControlPolicy;
- (void)runningPlaybackManagerDidChangeAutomaticallyChangingTempo:(id)arg1;
- (void)runningPlaybackManagerDidChangeMinimumTempo:(id)arg1;
- (void)runningPlaybackManagerDidChangeMaximumTempo:(id)arg1;
- (void)runningPlaybackManagerDidChangeTempo:(id)arg1;
- (void)syncViewWithPlaybackManager;
- (void)syncViewWithOfflineMode;
- (void)offlineModeState:(id)arg1 updated:(_Bool)arg2;
- (void)nowPlayingModel:(id)arg1 didMoveToRelativeTrack:(id)arg2;
- (void)nowPlayingModelDidUpdateMetadata:(id)arg1;
- (void)headUnitViewHadRecalibrateButtonTapped:(id)arg1;
- (void)headUnitView:(id)arg1 detectionModeChanged:(_Bool)arg2;
- (void)headUnitView:(id)arg1 switchedToTempo:(unsigned long long)arg2 fromTempo:(unsigned long long)arg3;
- (void)headUnitViewHadPlayButtonTapped:(id)arg1;
- (void)enableButtonForTimer:(id)arg1;
- (void)disableButton:(id)arg1 forTimeInterval:(double)arg2;
- (void)temporarilyDisableSkipToPreviousButton;
- (void)temporarilyDisableSkipToNextButton;
- (void)headUnitViewHadPreviousButtonTapped:(id)arg1;
- (void)headUnitViewHadNextButtonTapped:(id)arg1;
- (double)viewControllerPriority;
- (unsigned long long)leadingEdge;
- (struct CGSize)preferredContentSize;
- (void)viewWillAppear:(_Bool)arg1;
- (void)dealloc;
- (id)initWithModel:(id)arg1 theme:(id)arg2 upsellManager:(id)arg3 runningPlaybackManager:(id)arg4 userInterfaceFactory:(id)arg5 offlineModeState:(id)arg6 logger:(id)arg7 localisationManager:(id)arg8 testManager:(id)arg9;

// Remaining properties
@property(nonatomic) __weak UIViewController<SPTNowPlayingContainingViewController> *container;
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;
@property(retain, nonatomic) SPTNowPlayingRunningHeadUnitView *view; // @dynamic view;

@end


//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "SPTSearchViewController.h"

#import "SPTScrollToTopViewController.h"
#import "SPTSearchBarStateObservable.h"
#import "SPTSearchForceKeyboardDismissing.h"
#import "SPTSearchHubViewControllerDelegate.h"
#import "SPTSearchRecentsContextDelegate.h"
#import "SPTSearchVoiceEnabledViewDelegate.h"
#import "SPTViewControllerContainer.h"
#import "UISearchBarDelegate.h"

@class NSArray, NSHashTable, NSString, SPTFloatingVoiceSearchView, SPTProgressView, SPTSearchHeaderView, SPTSearchHubViewController, SPTSearchLegacyResultsViewController, SPTSearchNavigationBarStateTransition, UISearchBar, UIView, UIViewController;

@interface SPTSearchTableViewController : SPTSearchViewController <UISearchBarDelegate, SPTScrollToTopViewController, SPTSearchRecentsContextDelegate, SPTSearchVoiceEnabledViewDelegate, SPTSearchHubViewControllerDelegate, SPTViewControllerContainer, SPTSearchBarStateObservable, SPTSearchForceKeyboardDismissing>
{
    _Bool _searchBarAsNavigationItemTitle;
    _Bool _presentedInPopover;
    _Bool _shouldShowCancelButtonOnSearchBarFocus;
    _Bool _automaticallyAdjustsTopInset;
    _Bool _initialContentVisible;
    _Bool _shouldStartSearchFocused;
    SPTSearchHubViewController *_externalSearchResultsController;
    double _topInset;
    UISearchBar *_searchBar;
    UIView *_bigSearchSpacingView;
    SPTSearchHeaderView *_headerView;
    SPTProgressView *_progressView;
    SPTFloatingVoiceSearchView *_floatingSearchView;
    UIViewController *_searchRecentsViewController;
    UIViewController *_searchResultsViewController;
    UIViewController *_auxiliaryViewController;
    UIViewController *_initialContentViewController;
    SPTSearchLegacyResultsViewController *_legacySearchResultsViewController;
    id <SPTSearchRecentsContext> _searchRecentsContext;
    id <SPTVoiceService> _voiceService;
    NSHashTable *_searchBarStateObservers;
    NSHashTable *_navigationBarStateObservers;
    double _externalBottomContentInset;
    SPTSearchNavigationBarStateTransition *_navigationBarStateTransition;
    NSString *_referrerIdentifier;
    unsigned long long _searchBarStyle;
    struct CGRect _keyboardFrame;
}

@property(readonly, nonatomic) _Bool shouldStartSearchFocused; // @synthesize shouldStartSearchFocused=_shouldStartSearchFocused;
@property(readonly, nonatomic) unsigned long long searchBarStyle; // @synthesize searchBarStyle=_searchBarStyle;
@property(copy, nonatomic, getter=spt_referrerIdentifier) NSString *referrerIdentifier; // @synthesize referrerIdentifier=_referrerIdentifier;
@property(retain, nonatomic) SPTSearchNavigationBarStateTransition *navigationBarStateTransition; // @synthesize navigationBarStateTransition=_navigationBarStateTransition;
@property(nonatomic) double externalBottomContentInset; // @synthesize externalBottomContentInset=_externalBottomContentInset;
@property(nonatomic) struct CGRect keyboardFrame; // @synthesize keyboardFrame=_keyboardFrame;
@property(nonatomic, getter=isInitialContentVisible) _Bool initialContentVisible; // @synthesize initialContentVisible=_initialContentVisible;
@property(readonly, nonatomic) NSHashTable *navigationBarStateObservers; // @synthesize navigationBarStateObservers=_navigationBarStateObservers;
@property(readonly, nonatomic) NSHashTable *searchBarStateObservers; // @synthesize searchBarStateObservers=_searchBarStateObservers;
@property(nonatomic) __weak id <SPTVoiceService> voiceService; // @synthesize voiceService=_voiceService;
@property(retain, nonatomic) id <SPTSearchRecentsContext> searchRecentsContext; // @synthesize searchRecentsContext=_searchRecentsContext;
@property(retain, nonatomic) SPTSearchLegacyResultsViewController *legacySearchResultsViewController; // @synthesize legacySearchResultsViewController=_legacySearchResultsViewController;
@property(retain, nonatomic) UIViewController *initialContentViewController; // @synthesize initialContentViewController=_initialContentViewController;
@property(retain, nonatomic) UIViewController *auxiliaryViewController; // @synthesize auxiliaryViewController=_auxiliaryViewController;
@property(retain, nonatomic) UIViewController *searchResultsViewController; // @synthesize searchResultsViewController=_searchResultsViewController;
@property(retain, nonatomic) UIViewController *searchRecentsViewController; // @synthesize searchRecentsViewController=_searchRecentsViewController;
@property(retain, nonatomic) SPTFloatingVoiceSearchView *floatingSearchView; // @synthesize floatingSearchView=_floatingSearchView;
@property(retain, nonatomic) SPTProgressView *progressView; // @synthesize progressView=_progressView;
@property(retain, nonatomic) SPTSearchHeaderView *headerView; // @synthesize headerView=_headerView;
@property(retain, nonatomic) UIView *bigSearchSpacingView; // @synthesize bigSearchSpacingView=_bigSearchSpacingView;
@property(retain, nonatomic) UISearchBar *searchBar; // @synthesize searchBar=_searchBar;
@property(nonatomic) double topInset; // @synthesize topInset=_topInset;
@property(nonatomic) _Bool automaticallyAdjustsTopInset; // @synthesize automaticallyAdjustsTopInset=_automaticallyAdjustsTopInset;
@property(nonatomic) _Bool shouldShowCancelButtonOnSearchBarFocus; // @synthesize shouldShowCancelButtonOnSearchBarFocus=_shouldShowCancelButtonOnSearchBarFocus;
@property(retain, nonatomic) SPTSearchHubViewController *externalSearchResultsController; // @synthesize externalSearchResultsController=_externalSearchResultsController;
@property(nonatomic, getter=isPresentedInPopover) _Bool presentedInPopover; // @synthesize presentedInPopover=_presentedInPopover;
@property(nonatomic) _Bool searchBarAsNavigationItemTitle; // @synthesize searchBarAsNavigationItemTitle=_searchBarAsNavigationItemTitle;
- (void).cxx_destruct;
- (unsigned long long)searchStatusFromViewModel:(id)arg1;
- (void)updateNavigationBarForSearchStatus:(unsigned long long)arg1 searchText:(id)arg2 viewModel:(id)arg3;
- (void)searchViewController:(id)arg1 didUpdateFromViewModel:(id)arg2 toViewModel:(id)arg3;
- (void)voiceEnabledView:(id)arg1 didSelectElementWithSourceIdentifier:(id)arg2;
- (void)searchNavigationBarDidChangeState:(unsigned long long)arg1;
- (void)updateContentVisibilityForSearchStatus:(unsigned long long)arg1 searchBarText:(id)arg2;
- (void)dismissKeyboard;
- (void)setSearchBarStateObservableFocused:(_Bool)arg1;
- (void)removeSearchBarStateObserver:(id)arg1;
- (void)addSearchBarStateObserver:(id)arg1;
- (void)setFocusedViewController:(id)arg1;
@property(readonly, nonatomic) __weak UIViewController *topViewController;
@property(readonly, copy, nonatomic) NSArray *viewControllers;
- (void)spt_scrollToTop;
- (void)sp_updateBottomContentInset:(double)arg1;
- (_Bool)searchRecentsContextShouldDisplayHeaderView:(id)arg1;
- (void)searchRecentsContextDidStartScrolling:(id)arg1;
- (void)searchRecentsContext:(id)arg1 didSelectSearchQuery:(id)arg2;
- (void)searchRecentsContextDidClearHistory:(id)arg1;
- (void)dismissBarButtonItemTapped;
- (_Bool)showsCancelButton;
- (void)setShowsCancelButton:(_Bool)arg1;
- (void)setPresentationDelegate:(id)arg1;
- (id)presentationDelegate;
- (void)setDelegate:(id)arg1;
- (id)delegate;
- (void)performSearchWithString:(id)arg1 delayed:(_Bool)arg2;
- (void)updateViewWithError:(id)arg1 scrollResultsViewToTop:(_Bool)arg2;
- (id)searchResultsView;
- (void)searchBarCancelButtonClicked:(id)arg1;
- (void)leaveSearchAnimated:(_Bool)arg1 shouldClearSearchQuery:(_Bool)arg2;
- (void)searchBarSearchButtonClicked:(id)arg1;
- (void)searchStringDidChange:(id)arg1 fromSearchHistory:(_Bool)arg2 searchTag:(id)arg3;
- (void)searchBar:(id)arg1 textDidChange:(id)arg2;
- (void)searchBarTextDidEndEditing:(id)arg1;
- (void)searchBarTextDidBeginEditing:(id)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;
- (void)keyboardWillHide:(id)arg1;
- (void)keyboardWillShow:(id)arg1;
- (void)applyThemeLayout;
- (void)enableCancelButton;
- (_Bool)hasSearchResults;
- (void)cancelCurrentSearchAnimated:(_Bool)arg1 clearSearchQuery:(_Bool)arg2;
- (void)configureFloatingMicrophoneForVoiceEnabledSearch;
- (void)configureSearchBarCancelButtonStateState:(_Bool)arg1;
- (void)configureAndAddSearchBarIfNeeded;
- (double)viewContentBottomInset;
- (double)keyboardHeightOveralappingView;
- (_Bool)shouldFocusSearchBarOnStart;
- (void)saveSearchStringToHistory:(id)arg1;
- (void)updateViewModelSettings;
- (_Bool)shouldFocusOnAuxiliaryViewController;
- (_Bool)shouldSwapInitialContentViewController:(id)arg1 withViewController:(id)arg2;
- (void)addSearchResultsControllerToTheContainer;
- (void)updateContentViewController:(id)arg1;
- (void)updateInsets;
- (void)updateLayoutAnimated:(_Bool)arg1 duration:(double)arg2 curve:(long long)arg3;
- (void)updateChildViewsFrames;
- (void)viewDidLayoutSubviews;
- (void)viewWillLayoutSubviews;
- (void)registerNotificationObservers;
- (_Bool)shouldRemoveAllNotificationObserversInViewWillDisappear;
@property(nonatomic, getter=isSearchFocused) _Bool searchFocused;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)loadView;
- (void)dealloc;
- (id)initWithViewModel:(id)arg1 player:(id)arg2 shelves:(id)arg3 productState:(id)arg4 session:(id)arg5 navigationRouter:(id)arg6 contextMenu:(id)arg7 episodeContextMenuProvider:(id)arg8 imageLoader:(id)arg9 barButtonItemManager:(id)arg10 navigationItem:(id)arg11 auxiliaryViewController:(id)arg12 shouldStartSearchFocused:(_Bool)arg13 searchBarStyle:(unsigned long long)arg14 networkConnectivityController:(id)arg15 messageBarController:(id)arg16 searchRecentsContext:(id)arg17 voiceService:(id)arg18 logCenter:(id)arg19 explicitContentAccessManager:(id)arg20 referrerIdentifier:(id)arg21;
@property(readonly, nonatomic) _Bool shouldForceTheUsageOfCustomCancelButton;
@property(readonly, nonatomic) _Bool shouldAddExtraSpaceBetweenSearchBarAndContent;
@property(readonly, nonatomic) _Bool shouldDismissKeyboardWhenScrollingRecents;
@property(readonly, nonatomic) _Bool shouldAdjustViewsForKeyboard;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "SPTFeatureFlagSignalObserver.h"
#import "SPTQuickActionsService.h"
#import "SPTServiceOrchestratorDelegate.h"
#import "SPTSessionServicesLoader.h"
#import "UIApplicationDelegate.h"

@class NSArray, NSMutableDictionary, NSString, SPCore, SPTAppLogModel, SPTApplicationDelegateLogger, SPTCommandLineProcessor, SPTCookieStorageManager, SPTDebugLogService, SPTMediaPlayerDataSource, SPTMediaPlayerDelegate, SPTPlayModeMonitor, SPTPushNotificationController, SPTServiceListImplementation, SPTServiceOrchestrator, SPTStartupTracer, SPTURLCacheManager, StateController, UIWindow;

@interface SpotifyAppDelegate : NSObject <SPTFeatureFlagSignalObserver, SPTServiceOrchestratorDelegate, UIApplicationDelegate, SPTQuickActionsService, SPTSessionServicesLoader>
{
    _Bool _freeTierEnabled;
    _Bool _sessionScopeLoaded;
    UIWindow *_window;
    id <SPTMetaViewController> _mainViewController;
    id <SPTQuickActionsServiceDelegate> quickActionsServiceDelegate;
    SPTDebugLogService *_debugLogService;
    SPTAppLogModel *_appLogModel;
    id <SPTCrashReporter> _crashReporter;
    id <SPTUserActivityController> _userActivityController;
    SPTServiceListImplementation *_serviceList;
    NSMutableDictionary *_deferredBlocks;
    id <SPTFeatureFlagSignal> _freeTierFeatureFlagSignal;
    SPTServiceOrchestrator *_serviceOrchestrator;
    id <SPTLogDispatcher> _logDispatcher;
    SPCore *_core;
    SPTPlayModeMonitor *_playModeMonitor;
    SPTPushNotificationController *_pushNotificationController;
    id <SPTLinkDispatcher> _linkDispatcher;
    StateController *_stateController;
    SPTMediaPlayerDelegate *_mediaPlayerDelegate;
    SPTMediaPlayerDataSource *_mediaPlayerDataSource;
    id <SPTThirdPartyTrackerBroadcaster> _trackerBroadcaster;
    SPTApplicationDelegateLogger *_appDelegateLogger;
    SPTStartupTracer *_startupTracer;
    SPTURLCacheManager *_urlCacheManager;
    SPTCookieStorageManager *_cookieStorageManager;
    SPTCommandLineProcessor *_commandLineProcessor;
    id <SPTPageRegistry> _pageRegistry;
}

+ (id)appDelegate;
@property(retain, nonatomic) id <SPTPageRegistry> pageRegistry; // @synthesize pageRegistry=_pageRegistry;
@property(retain, nonatomic) SPTCommandLineProcessor *commandLineProcessor; // @synthesize commandLineProcessor=_commandLineProcessor;
@property(retain, nonatomic) SPTCookieStorageManager *cookieStorageManager; // @synthesize cookieStorageManager=_cookieStorageManager;
@property(retain, nonatomic) SPTURLCacheManager *urlCacheManager; // @synthesize urlCacheManager=_urlCacheManager;
@property(retain, nonatomic) SPTStartupTracer *startupTracer; // @synthesize startupTracer=_startupTracer;
@property(retain, nonatomic) SPTApplicationDelegateLogger *appDelegateLogger; // @synthesize appDelegateLogger=_appDelegateLogger;
@property(retain, nonatomic) id <SPTThirdPartyTrackerBroadcaster> trackerBroadcaster; // @synthesize trackerBroadcaster=_trackerBroadcaster;
@property(retain, nonatomic) SPTMediaPlayerDataSource *mediaPlayerDataSource; // @synthesize mediaPlayerDataSource=_mediaPlayerDataSource;
@property(retain, nonatomic) SPTMediaPlayerDelegate *mediaPlayerDelegate; // @synthesize mediaPlayerDelegate=_mediaPlayerDelegate;
@property(retain, nonatomic) StateController *stateController; // @synthesize stateController=_stateController;
@property(retain, nonatomic) id <SPTLinkDispatcher> linkDispatcher; // @synthesize linkDispatcher=_linkDispatcher;
@property(retain, nonatomic) SPTPushNotificationController *pushNotificationController; // @synthesize pushNotificationController=_pushNotificationController;
@property(retain, nonatomic) SPTPlayModeMonitor *playModeMonitor; // @synthesize playModeMonitor=_playModeMonitor;
@property(nonatomic) __weak SPCore *core; // @synthesize core=_core;
@property(retain, nonatomic) id <SPTLogDispatcher> logDispatcher; // @synthesize logDispatcher=_logDispatcher;
@property(retain, nonatomic) SPTServiceOrchestrator *serviceOrchestrator; // @synthesize serviceOrchestrator=_serviceOrchestrator;
@property(nonatomic) _Bool sessionScopeLoaded; // @synthesize sessionScopeLoaded=_sessionScopeLoaded;
@property(nonatomic) _Bool freeTierEnabled; // @synthesize freeTierEnabled=_freeTierEnabled;
@property(retain, nonatomic) id <SPTFeatureFlagSignal> freeTierFeatureFlagSignal; // @synthesize freeTierFeatureFlagSignal=_freeTierFeatureFlagSignal;
@property(retain, nonatomic) NSMutableDictionary *deferredBlocks; // @synthesize deferredBlocks=_deferredBlocks;
@property(retain, nonatomic) SPTServiceListImplementation *serviceList; // @synthesize serviceList=_serviceList;
@property(retain, nonatomic) id <SPTUserActivityController> userActivityController; // @synthesize userActivityController=_userActivityController;
@property(retain, nonatomic) id <SPTCrashReporter> crashReporter; // @synthesize crashReporter=_crashReporter;
@property(readonly, nonatomic) SPTAppLogModel *appLogModel; // @synthesize appLogModel=_appLogModel;
@property(retain, nonatomic) SPTDebugLogService *debugLogService; // @synthesize debugLogService=_debugLogService;
@property(nonatomic) __weak id <SPTQuickActionsServiceDelegate> quickActionsServiceDelegate; // @synthesize quickActionsServiceDelegate;
@property(readonly, nonatomic) id <SPTMetaViewController> main; // @synthesize main=_mainViewController;
@property(retain, nonatomic) UIWindow *window; // @synthesize window=_window;
- (void).cxx_destruct;
- (void)featureFlagSignal:(id)arg1 hasAssumedState:(long long)arg2;
- (void)refreshSessionServiceList;
- (void)loadSessionScopesWithCompletion:(CDUnknownBlockType)arg1;
- (void)serviceOrchestrator:(id)arg1 didUnloadServicesForScope:(long long)arg2;
- (void)serviceOrchestrator:(id)arg1 willUnloadServicesForScope:(long long)arg2;
- (void)serviceOrchestrator:(id)arg1 didLoadServicesForScope:(long long)arg2;
- (void)serviceOrchestrator:(id)arg1 willLoadServicesForScope:(long long)arg2;
@property(nonatomic) __weak id <MPPlayableContentDataSource> playableContentDataSource;
@property(nonatomic) __weak id <SPTPlaybackQueueInitializer> playbackQueueInitializer;
@property(nonatomic) __weak id <MPPlayableContentDelegate> playableContentSubDelegate;
@property(copy, nonatomic) NSArray *quickActionItems;
- (void)withLoadedScope:(long long)arg1 do:(CDUnknownBlockType)arg2;
- (void)runDeferredBlocksForScope:(long long)arg1;
- (void)applyThemeAppearance;
- (void)stateRestored;
- (void)save;
- (id)debugSessionStateHandler;
- (id)debugController;
- (void)dealloc;
- (void)userWillLogOut;
- (void)setupTheme;
- (void)removePlainTextFBToken;
- (void)performVersionMigrations;
- (void)setupAndShowMainWindow;
- (void)showLaunchScreen;
- (void)startReceivingRemoteControlEvents;
- (_Bool)handleLaunchOptions:(id)arg1;
- (void)addCrashReporterHooks;
- (void)setupMediaPlayer;
- (void)setupInstanceVariablesWithZeroScopeServiceManager:(id)arg1;
- (void)setupColdStartTracking;
- (void)setupLoggingServicesWithLogDispatcher:(id)arg1;
- (unsigned long long)application:(id)arg1 supportedInterfaceOrientationsForWindow:(id)arg2;
- (void)application:(id)arg1 handleEventsForBackgroundURLSession:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)application:(id)arg1 performActionForShortcutItem:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)application:(id)arg1 didRegisterUserNotificationSettings:(id)arg2;
- (void)application:(id)arg1 handleActionWithIdentifier:(id)arg2 forLocalNotification:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)application:(id)arg1 handleActionWithIdentifier:(id)arg2 forRemoteNotification:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)application:(id)arg1 willChangeStatusBarOrientation:(long long)arg2 duration:(double)arg3;
- (void)application:(id)arg1 didReceiveLocalNotification:(id)arg2;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)applicationWillTerminate:(id)arg1;
- (void)application:(id)arg1 didUpdateUserActivity:(id)arg2;
- (_Bool)application:(id)arg1 continueUserActivity:(id)arg2 restorationHandler:(CDUnknownBlockType)arg3;
- (_Bool)application:(id)arg1 openURL:(id)arg2 options:(id)arg3;
- (void)application:(id)arg1 didFailToRegisterForRemoteNotificationsWithError:(id)arg2;
- (void)application:(id)arg1 didRegisterForRemoteNotificationsWithDeviceToken:(id)arg2;
- (void)application:(id)arg1 didReceiveRemoteNotification:(id)arg2;
- (_Bool)application:(id)arg1 didFinishLaunchingWithOptions:(id)arg2;
- (_Bool)application:(id)arg1 willFinishLaunchingWithOptions:(id)arg2;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


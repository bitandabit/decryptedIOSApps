//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "AVAudioPlayerDelegate.h"
#import "SPTNowPlayingRemoteControlPolicyUpdateOserver.h"

@class AVAudioPlayer, MPRemoteCommandCenter, NSMapTable, NSString, NSTimer, SPTNowPlayingModel;

@interface SPTNowPlayingRemoteControlEventController : NSObject <AVAudioPlayerDelegate, SPTNowPlayingRemoteControlPolicyUpdateOserver>
{
    NSTimer *_seekTimer;
    AVAudioPlayer *play;
    AVAudioPlayer *pause;
    AVAudioPlayer *next;
    AVAudioPlayer *prev;
    AVAudioPlayer *toBeginning;
    AVAudioPlayer *fastprev_start;
    AVAudioPlayer *fastprev_end;
    AVAudioPlayer *ffwd_start;
    AVAudioPlayer *ffwd_end;
    _Bool _enabled;
    _Bool _playersLoaded;
    id <SPTNowPlayingRemoteControlPolicy> _remoteControlPolicy;
    id <SPTAudioSessionController> _audioSessionController;
    SPTNowPlayingModel *_nowPlayingModel;
    NSMapTable *_audioSessionActivators;
    MPRemoteCommandCenter *_remoteCommandCenter;
    CDUnknownBlockType _avAudioPlayerFactory;
}

+ (id)soundsBundle;
+ (void)initialize;
@property(nonatomic) _Bool playersLoaded; // @synthesize playersLoaded=_playersLoaded;
@property(copy, nonatomic) CDUnknownBlockType avAudioPlayerFactory; // @synthesize avAudioPlayerFactory=_avAudioPlayerFactory;
@property(retain, nonatomic) MPRemoteCommandCenter *remoteCommandCenter; // @synthesize remoteCommandCenter=_remoteCommandCenter;
@property(retain, nonatomic) NSMapTable *audioSessionActivators; // @synthesize audioSessionActivators=_audioSessionActivators;
@property(retain, nonatomic) SPTNowPlayingModel *nowPlayingModel; // @synthesize nowPlayingModel=_nowPlayingModel;
@property(retain, nonatomic) id <SPTAudioSessionController> audioSessionController; // @synthesize audioSessionController=_audioSessionController;
@property(retain, nonatomic) id <SPTNowPlayingRemoteControlPolicy> remoteControlPolicy; // @synthesize remoteControlPolicy=_remoteControlPolicy;
@property(nonatomic, getter=isEnabled) _Bool enabled; // @synthesize enabled=_enabled;
- (void).cxx_destruct;
- (void)audioPlayerDecodeErrorDidOccur:(id)arg1 error:(id)arg2;
- (void)audioPlayerDidFinishPlaying:(id)arg1 successfully:(_Bool)arg2;
- (void)playFeedbackSoundIfEnabled:(id)arg1;
- (id)playerForSoundNamed:(id)arg1;
- (void)seekForward;
- (void)seekBackward;
- (void)dislikeButtonPressed;
- (void)likeButtonPressed;
- (void)handleChangePlaybackPosition:(id)arg1;
- (void)handleSkipForward:(id)arg1;
- (void)handleSkipBackward:(id)arg1;
- (void)doNothing;
- (void)remoteControlPolicyDidChange:(id)arg1;
- (long long)shuffleTypeFollowingCurrentShuffleType:(long long)arg1;
- (void)shuffleButtonPressed:(id)arg1;
- (long long)repeatTypeFollowingCurrentRepeatType:(long long)arg1;
- (void)repeatButtonPressed:(id)arg1;
- (void)applyRemoteControlPolicy:(id)arg1;
- (void)applyPolicyToCommand:(id)arg1 shouldBeAvailable:(_Bool)arg2 shouldBeEnabled:(_Bool)arg3 action:(SEL)arg4;
- (_Bool)handleRemoteEventSubType:(long long)arg1;
- (void)dealloc;
- (void)lazyLoadPlayers;
- (id)initWithNowPlayingModel:(id)arg1 audioSessionController:(id)arg2 remoteCommandCenter:(id)arg3 avAudioPlayerFactory:(CDUnknownBlockType)arg4;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


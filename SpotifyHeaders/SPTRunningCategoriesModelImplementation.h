//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

#import "SPTDataLoaderDelegate.h"
#import "SPTPlayerObserver.h"
#import "SPTRunningCategoriesModel.h"
#import "SPTRunningPlaybackManagerObserver.h"

@class NSDictionary, NSString, NSURL, SPSession, SPTDataLoader, SPTPlayerState, SPTRunningAudioUXManager, SPTRunningLocalisationManagerImplementation, SPTRunningPlaybackManagerListImplementation, SPTRunningStepManager;

@interface SPTRunningCategoriesModelImplementation : NSObject <SPTDataLoaderDelegate, SPTRunningPlaybackManagerObserver, SPTPlayerObserver, SPTRunningCategoriesModel>
{
    _Bool _loaded;
    _Bool _playbackImminent;
    NSURL *_partnerURI;
    NSString *_partnerApplication;
    id _annotation;
    id <SPTCeramicRequestDelegate> _ceramicDelegate;
    id <SPTCeramicSpace> _space;
    NSURL *_URI;
    id <SPTRunningCategoriesModelDelegate> _delegate;
    NSURL *_headerImageURL;
    SPTDataLoader *_dataLoader;
    id <SPTCeramicSpaceFactory> _ceramicSpaceFactory;
    SPTRunningLocalisationManagerImplementation *_localisationManager;
    SPTRunningPlaybackManagerListImplementation *_playbackManager;
    SPSession *_session;
    id <SPTPlayer> _player;
    SPTRunningAudioUXManager *_audioUXManager;
    SPTRunningStepManager *_stepManager;
    id <SPTGaiaDeviceStateManager> _deviceStateManager;
    id <SPTDataLoaderCancellationToken> _currentRequestToken;
    SPTPlayerState *_playerState;
    NSDictionary *_defaultVideoTrackDictionary;
    id <SPTPlayerQueue> _playerQueue;
    NSString *_contextSnapshot;
    NSDictionary *_responseDictionary;
}

@property(retain, nonatomic) NSDictionary *responseDictionary; // @synthesize responseDictionary=_responseDictionary;
@property(retain, nonatomic) NSString *contextSnapshot; // @synthesize contextSnapshot=_contextSnapshot;
@property(retain, nonatomic) id <SPTPlayerQueue> playerQueue; // @synthesize playerQueue=_playerQueue;
@property(readonly, nonatomic) NSDictionary *defaultVideoTrackDictionary; // @synthesize defaultVideoTrackDictionary=_defaultVideoTrackDictionary;
@property(retain, nonatomic) SPTPlayerState *playerState; // @synthesize playerState=_playerState;
@property(nonatomic) _Bool playbackImminent; // @synthesize playbackImminent=_playbackImminent;
@property(retain, nonatomic) id <SPTDataLoaderCancellationToken> currentRequestToken; // @synthesize currentRequestToken=_currentRequestToken;
@property(retain, nonatomic) id <SPTGaiaDeviceStateManager> deviceStateManager; // @synthesize deviceStateManager=_deviceStateManager;
@property(retain, nonatomic) SPTRunningStepManager *stepManager; // @synthesize stepManager=_stepManager;
@property(retain, nonatomic) SPTRunningAudioUXManager *audioUXManager; // @synthesize audioUXManager=_audioUXManager;
@property(retain, nonatomic) id <SPTPlayer> player; // @synthesize player=_player;
@property(nonatomic) __weak SPSession *session; // @synthesize session=_session;
@property(retain, nonatomic) SPTRunningPlaybackManagerListImplementation *playbackManager; // @synthesize playbackManager=_playbackManager;
@property(retain, nonatomic) SPTRunningLocalisationManagerImplementation *localisationManager; // @synthesize localisationManager=_localisationManager;
@property(retain, nonatomic) id <SPTCeramicSpaceFactory> ceramicSpaceFactory; // @synthesize ceramicSpaceFactory=_ceramicSpaceFactory;
@property(retain, nonatomic) SPTDataLoader *dataLoader; // @synthesize dataLoader=_dataLoader;
@property(retain, nonatomic) NSURL *headerImageURL; // @synthesize headerImageURL=_headerImageURL;
@property(nonatomic) __weak id <SPTRunningCategoriesModelDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) NSURL *URI; // @synthesize URI=_URI;
@property(readonly, nonatomic, getter=isLoaded) _Bool loaded; // @synthesize loaded=_loaded;
@property(retain, nonatomic) id <SPTCeramicSpace> space; // @synthesize space=_space;
@property(nonatomic) __weak id <SPTCeramicRequestDelegate> ceramicDelegate; // @synthesize ceramicDelegate=_ceramicDelegate;
@property(retain, nonatomic) id annotation; // @synthesize annotation=_annotation;
@property(retain, nonatomic) NSString *partnerApplication; // @synthesize partnerApplication=_partnerApplication;
@property(retain, nonatomic) NSURL *partnerURI; // @synthesize partnerURI=_partnerURI;
- (void).cxx_destruct;
@property(readonly, nonatomic) _Bool shouldReloadWhenOnlineStateChanges;
- (void)incrementVisitsCounter;
- (unsigned long long)numberOfVisits;
- (void)runningPlaybackManagerDidStartPlayingCurrentTempo:(id)arg1;
- (void)player:(id)arg1 stateDidChange:(id)arg2 fromState:(id)arg3;
- (id)categoryImageURLAtIndex:(unsigned long long)arg1 inBlockIndex:(unsigned long long)arg2;
- (id)categoryNameAtIndex:(unsigned long long)arg1 inBlockIndex:(unsigned long long)arg2;
- (id)presetDictionaryForURL:(id)arg1;
- (id)uriAtIndex:(unsigned long long)arg1 inBlockIndex:(unsigned long long)arg2;
- (_Bool)playCategoryAtIndex:(unsigned long long)arg1 inBlockIndex:(unsigned long long)arg2;
@property(readonly, nonatomic, getter=isSessionOffline) _Bool sessionOffline;
@property(readonly, nonatomic) _Bool ownsCurrentContext;
- (void)dataLoader:(id)arg1 didCancelRequest:(id)arg2;
- (void)dataLoader:(id)arg1 didReceiveErrorResponse:(id)arg2;
- (void)dataLoader:(id)arg1 didReceiveSuccessfulResponse:(id)arg2;
- (void)load;
- (void)setLoaded:(_Bool)arg1;
- (void)loadWithError:(id)arg1;
- (void)dealloc;
- (id)initWithDataLoader:(id)arg1 ceramicSpaceFactory:(id)arg2 localisationManager:(id)arg3 playbackManager:(id)arg4 session:(id)arg5 player:(id)arg6 audioUXManager:(id)arg7 stepManager:(id)arg8 playerQueue:(id)arg9 deviceStateManager:(id)arg10;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


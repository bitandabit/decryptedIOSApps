//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UIViewController.h"

#import "SPTImageLoaderDelegate.h"
#import "SPTNowPlayingContainerIdleMonitorObserver.h"

@class NSString, NSURL, SPTCanvasAttributionView, SPTCanvasBackendService, SPTCanvasLoggingService, SPTCanvasModel, SPTCanvasTrackCheckerImplementation, SPTCanvasVideoView, UIImageView;

@interface SPTCanvasViewController : UIViewController <SPTImageLoaderDelegate, SPTNowPlayingContainerIdleMonitorObserver>
{
    _Bool _canvasContentAvailable;
    _Bool _shouldShowAttribution;
    SPTCanvasTrackCheckerImplementation *_trackChecker;
    id <SPTImageLoaderFactory> _imageLoaderFactory;
    id <SPTVideoURLAssetLoader> _videoManager;
    SPTCanvasVideoView *_videoView;
    UIImageView *_imageView;
    id <SPTImageLoader> _imageLoader;
    NSURL *_currentTrackURI;
    NSURL *_currentImageURL;
    NSURL *_currentArtistURI;
    NSURL *_currentCanvasURL;
    NSString *_currentArtistName;
    SPTCanvasLoggingService *_loggingService;
    SPTCanvasAttributionView *_attributionView;
    SPTCanvasBackendService *_backendService;
    id <SPTCanvasIdleMonitorObserverDelegate> _delegate;
    SPTCanvasModel *_canvasModel;
}

@property(nonatomic) __weak SPTCanvasModel *canvasModel; // @synthesize canvasModel=_canvasModel;
@property(nonatomic) __weak id <SPTCanvasIdleMonitorObserverDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) SPTCanvasBackendService *backendService; // @synthesize backendService=_backendService;
@property(retain, nonatomic) SPTCanvasAttributionView *attributionView; // @synthesize attributionView=_attributionView;
@property(nonatomic) _Bool shouldShowAttribution; // @synthesize shouldShowAttribution=_shouldShowAttribution;
@property(retain, nonatomic) SPTCanvasLoggingService *loggingService; // @synthesize loggingService=_loggingService;
@property(retain, nonatomic) NSString *currentArtistName; // @synthesize currentArtistName=_currentArtistName;
@property(retain, nonatomic) NSURL *currentCanvasURL; // @synthesize currentCanvasURL=_currentCanvasURL;
@property(retain, nonatomic) NSURL *currentArtistURI; // @synthesize currentArtistURI=_currentArtistURI;
@property(retain, nonatomic) NSURL *currentImageURL; // @synthesize currentImageURL=_currentImageURL;
@property(retain, nonatomic) NSURL *currentTrackURI; // @synthesize currentTrackURI=_currentTrackURI;
@property(retain, nonatomic) id <SPTImageLoader> imageLoader; // @synthesize imageLoader=_imageLoader;
@property(retain, nonatomic) UIImageView *imageView; // @synthesize imageView=_imageView;
@property(readonly, nonatomic) SPTCanvasVideoView *videoView; // @synthesize videoView=_videoView;
@property(retain, nonatomic) id <SPTVideoURLAssetLoader> videoManager; // @synthesize videoManager=_videoManager;
@property(readonly, nonatomic) id <SPTImageLoaderFactory> imageLoaderFactory; // @synthesize imageLoaderFactory=_imageLoaderFactory;
@property(readonly, nonatomic) SPTCanvasTrackCheckerImplementation *trackChecker; // @synthesize trackChecker=_trackChecker;
@property(nonatomic, getter=isCanvasContentAvailable) _Bool canvasContentAvailable; // @synthesize canvasContentAvailable=_canvasContentAvailable;
- (void).cxx_destruct;
- (void)imageLoader:(id)arg1 didLoadImage:(id)arg2 forURL:(id)arg3 loadTime:(double)arg4 context:(id)arg5;
- (void)idlePeriodDidEnd;
- (void)idlePeriodDidBegin;
- (_Bool)isVideoContent:(id)arg1;
- (long long)playbackOption:(id)arg1;
- (void)updateAccessoryWithArtistURI:(id)arg1;
- (void)resetWithTrackURI:(id)arg1 imageURL:(id)arg2 artistURI:(id)arg3 artistName:(id)arg4;
- (void)setVisible:(_Bool)arg1;
- (void)resetCanvasVideoOnReturnToForeground;
- (void)pauseCanvasOnBackground;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (void)viewWillLayoutSubviews;
- (id)initWithCanvasTrackChecker:(id)arg1 imageLoaderFactory:(id)arg2 videoManager:(id)arg3 loggingService:(id)arg4 idleMonitorDelegate:(id)arg5 backendService:(id)arg6;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


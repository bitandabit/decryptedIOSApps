//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "SCContextCardsTask.h"

@class NSArray, NSDate, NSNumber, NSString, SCCache, SCContextCardsRequest, SCUserSession, SCWeakTimer;

@interface SCContextCardsAPIRequestTask : SCContextCardsTask
{
    NSString *_requestId;
    NSString *_sessionId;
    NSString *_appengineRequestId;
    _Bool _completed;
    CDUnknownBlockType _onComplete;
    SCWeakTimer *_timeoutEnforcer;
    NSDate *_startTime;
    double _requestCreateTime;
    _Bool _canceled;
    SCContextCardsRequest *_request;
    SCCache *_preloadCache;
    SCUserSession *_userSession;
    SCContextCardsRequest *_existingRequest;
    NSString *_strategy;
    double _timeout;
    NSArray *_builtQueries;
    NSNumber *_serverLatencyMs;
    NSNumber *_queueLatencyMs;
    NSNumber *_transmitLatencyMs;
    NSNumber *_responseLatencyMs;
    NSNumber *_executionTimeMs;
}

+ (id)_appListGroupPreferences:(id)arg1;
+ (id)buildRequestFromSessionParams:(id)arg1 userSession:(id)arg2 requestId:(id)arg3 sessionId:(id)arg4;
@property(readonly, nonatomic) NSNumber *executionTimeMs; // @synthesize executionTimeMs=_executionTimeMs;
@property(readonly, nonatomic) NSNumber *responseLatencyMs; // @synthesize responseLatencyMs=_responseLatencyMs;
@property(readonly, nonatomic) NSNumber *transmitLatencyMs; // @synthesize transmitLatencyMs=_transmitLatencyMs;
@property(readonly, nonatomic) NSNumber *queueLatencyMs; // @synthesize queueLatencyMs=_queueLatencyMs;
@property(readonly, nonatomic) NSNumber *serverLatencyMs; // @synthesize serverLatencyMs=_serverLatencyMs;
- (void).cxx_destruct;
- (id)_clientDebugQueryCard:(id)arg1;
- (id)_clientDebugTimingCard:(id)arg1 response:(id)arg2 protoDecodeTime:(double)arg3 requestTime:(double)arg4;
- (void)_reportSuccess:(CDUnknownBlockType)arg1 response:(id)arg2;
- (void)_reportError:(CDUnknownBlockType)arg1 error:(id)arg2;
- (id)appengineRequestId;
- (void)cancel;
- (void)_recordLatencies:(id)arg1 response:(id)arg2;
- (CDUnknownBlockType)_getSuccessBlock;
- (void)_enforceTimeout;
- (void)_fetchResponseFromCache:(CDUnknownBlockType)arg1;
- (void)_executeRequest:(CDUnknownBlockType)arg1;
- (void)executeWithCompletion:(CDUnknownBlockType)arg1;
- (id)initWithContextSessionParams:(id)arg1 userSession:(id)arg2 sessionId:(id)arg3 existingRequest:(id)arg4 strategy:(id)arg5 timeout:(double)arg6;

@end


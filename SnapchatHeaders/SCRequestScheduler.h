//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSArray, NSMutableDictionary, NSSet, NSString, SCAPIClient, SCDownloadConsumptionRecorder, SCNetworkRequestRankingHandler, SCNetworkRequestRankingLogger, SCRequestManagerLogger, SCRequestManagerRunningTaskState, SCRequestTaskPool;
@protocol SCNetworkInterceptor, SCPerforming, SCRequestSchedulerDelegate, SCRequestTaskRunDelegate;

@interface SCRequestScheduler : NSObject
{
    NSArray *_contexts;
    NSString *_URLSessionHighPriorityContext;
    _Bool _isInHighPriorityContext;
    struct SCNetworkTraceFileStruct *_traceFile;
    id <SCRequestTaskRunDelegate> _taskRunDelegate;
    _Bool _isBackgroundDownloadPaused;
    _Bool _isAllDownloadPaused;
    _Bool _isCriticalMode;
    _Bool _isContextOnlyModeForCurrentContextSession;
    NSArray<SCNetworkInterceptor> *_networkInterceptors;
    id <SCRequestSchedulerDelegate> _delegate;
    SCRequestTaskPool *_allTasks;
    NSSet *_allTaskPools;
    SCRequestManagerRunningTaskState *_runningTaskState;
    NSMutableDictionary *_runningTasks;
    SCRequestTaskPool *_wwanTasks;
    SCAPIClient *_httpClient;
    SCRequestManagerLogger *_networkManagerLogger;
    SCDownloadConsumptionRecorder *_downloadConsumptionRecorder;
    SCNetworkRequestRankingLogger *_networkRequestRankingLogger;
    SCNetworkRequestRankingHandler *_networkRequestRankingHandler;
    id <SCPerforming> _queuePerformer;
}

+ (long long)_numberOfTasksInArray:(id)arg1 thatMatch:(CDUnknownBlockType)arg2;
@property(nonatomic) _Bool isContextOnlyModeForCurrentContextSession; // @synthesize isContextOnlyModeForCurrentContextSession=_isContextOnlyModeForCurrentContextSession;
@property(nonatomic) _Bool isCriticalMode; // @synthesize isCriticalMode=_isCriticalMode;
@property(copy, nonatomic) id <SCPerforming> queuePerformer; // @synthesize queuePerformer=_queuePerformer;
@property(nonatomic) _Bool isAllDownloadPaused; // @synthesize isAllDownloadPaused=_isAllDownloadPaused;
@property(nonatomic) _Bool isBackgroundDownloadPaused; // @synthesize isBackgroundDownloadPaused=_isBackgroundDownloadPaused;
@property(copy, nonatomic) SCNetworkRequestRankingHandler *networkRequestRankingHandler; // @synthesize networkRequestRankingHandler=_networkRequestRankingHandler;
@property(copy, nonatomic) SCNetworkRequestRankingLogger *networkRequestRankingLogger; // @synthesize networkRequestRankingLogger=_networkRequestRankingLogger;
@property(retain, nonatomic) SCDownloadConsumptionRecorder *downloadConsumptionRecorder; // @synthesize downloadConsumptionRecorder=_downloadConsumptionRecorder;
@property(copy, nonatomic) SCRequestManagerLogger *networkManagerLogger; // @synthesize networkManagerLogger=_networkManagerLogger;
@property(retain, nonatomic) SCAPIClient *httpClient; // @synthesize httpClient=_httpClient;
@property(retain, nonatomic) SCRequestTaskPool *wwanTasks; // @synthesize wwanTasks=_wwanTasks;
@property(retain, nonatomic) NSMutableDictionary *runningTasks; // @synthesize runningTasks=_runningTasks;
@property(retain, nonatomic) SCRequestManagerRunningTaskState *runningTaskState; // @synthesize runningTaskState=_runningTaskState;
@property(retain, nonatomic) NSSet *allTaskPools; // @synthesize allTaskPools=_allTaskPools;
@property(retain, nonatomic) SCRequestTaskPool *allTasks; // @synthesize allTasks=_allTasks;
@property(nonatomic) __weak id <SCRequestSchedulerDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy) NSArray<SCNetworkInterceptor> *networkInterceptors; // @synthesize networkInterceptors=_networkInterceptors;
- (void).cxx_destruct;
- (unsigned long long)numOfUploadTasks;
- (unsigned long long)numOfLargeDLTasks;
- (_Bool)criticalModeEnabled;
- (long long)_numberOfRunningTasksThatMatch:(CDUnknownBlockType)arg1;
- (long long)_numberOfRunningDownloadTasks;
- (long long)_numberOfQueuedTasksThatMatch:(CDUnknownBlockType)arg1;
- (id)_loggerParameter;
- (void)_logSchedulingInfoForTask:(id)arg1;
- (void)downloadStateForRequestWithKey:(id)arg1 completionQueue:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_logRequestRetriedForRequest:(id)arg1 error:(id)arg2;
- (unsigned long long)_numberOfRunningCriticalStreamingTasks;
- (unsigned long long)_numberOfRunningLargeCriticalDownloadTasks;
- (unsigned long long)_numberOfRunningSmallOutOfContextDownloadTasks;
- (unsigned long long)_numberOfRunningLargeInContextDownloadTasks;
- (unsigned long long)_numberOfRunningInContextDownloadTasks;
- (unsigned long long)_numberOfRunningLargeOutOfContextDownloadTasks;
- (_Bool)_shouldLeaveContextOnlyMode:(long long)arg1 withContexts:(id)arg2;
- (_Bool)_shouldEnterContextOnlyMode:(long long)arg1 withContexts:(id)arg2;
- (_Bool)_hasIntersetContext:(id)arg1;
- (_Bool)_isInContextTask:(id)arg1;
- (_Bool)_isHighPriorityLargeMessagesTask:(id)arg1;
- (_Bool)_isCriticalTask:(id)arg1;
- (_Bool)_isAnyCriticalTaskRunning;
- (id)_removeTaskForKey:(id)arg1;
- (void)networkReachabilityStatusDidChangeWithNotification:(id)arg1;
- (void)reset;
- (void)resumeDownloads;
- (void)pauseBackgroundDownloads;
- (void)removeContext:(id)arg1 disableContextOnlyModeIfRemoved:(_Bool)arg2;
- (void)removeContexts:(id)arg1;
- (void)removeContext:(id)arg1;
- (void)addContext:(id)arg1;
- (void)_setCurrentContextsForRunningTasks;
- (void)_setContexts:(id)arg1 withQueuePerformer:(_Bool)arg2 withRequestManagerMode:(long long)arg3;
- (void)_setContexts:(id)arg1 withQueuePerformer:(_Bool)arg2;
- (void)setContexts:(id)arg1 withRequestManagerMode:(long long)arg2;
- (void)setContexts:(id)arg1;
- (void)contextsWithBlock:(CDUnknownBlockType)arg1;
- (void)_removeRunningTaskWithKey:(id)arg1;
- (_Bool)_shouldCreateConsumptionRecordWithTask:(id)arg1 data:(id)arg2;
- (void)_didRunTaskWithKey:(id)arg1 data:(id)arg2;
- (void)_willRunTask:(id)arg1 withRunnableStatus:(long long)arg2;
- (void)_calculateSessionPriorityForTask:(id)arg1;
- (_Bool)_willExceedSingleContextLargeDownloadConcurrencyWithTask:(id)arg1;
- (long long)_shouldRunLargeDownloadTask:(id)arg1;
- (long long)_shouldRunLargeDownloadtaskInURLSessionHighPriorityContext:(id)arg1;
- (long long)_shouldRunDownloadTask:(id)arg1;
- (long long)_shouldRunStreamingTask:(id)arg1;
- (long long)_shouldRunMetadataTask:(id)arg1;
- (long long)_shouldRunAnalyticsV2Task:(id)arg1;
- (long long)_shouldRunUploadOrAnalyticTask:(id)arg1;
- (long long)_shouldRunTask:(id)arg1;
- (id)_rankedTasksByRankingModel:(id)arg1;
- (void)_checkConcurrencyControlAndRunTasks:(id)arg1;
- (_Bool)_shouldUseRankingModelWithAllRunnableTasks:(id)arg1;
- (void)_run;
- (_Bool)_isInContextIdleState;
- (void)disableCriticalMode;
- (void)enableCriticalMode;
- (void)_updateTask:(id)arg1 withContexts:(id)arg2;
- (void)_addContext:(id)arg1 toRequestWithKey:(id)arg2;
- (void)addContext:(id)arg1 toRequestWithKey:(id)arg2;
- (void)allowRequestRunOnWwanWithKey:(id)arg1;
- (void)handleUserInitiatedRequestWithKey:(id)arg1;
- (void)_cancelRequestsWithContext:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)cancelRequestsOnWWANWithContext:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)cancelRequestsWithContext:(id)arg1;
- (void)_cancelRequestWithKey:(id)arg1 queue:(id)arg2 byProducingResumeData:(CDUnknownBlockType)arg3;
- (void)_cancelRequestWithkey:(id)arg1;
- (void)cancelRequestWithKey:(id)arg1 queue:(id)arg2 byProducingResumeData:(CDUnknownBlockType)arg3;
- (void)cancelQueuedRequestWithKey:(id)arg1;
- (void)cancelRequestWithKey:(id)arg1;
- (void)_enqueueTask:(id)arg1 andRun:(_Bool)arg2;
- (void)_enqueueTask:(id)arg1;
- (void)_addTask:(id)arg1;
- (void)submitRequest:(id)arg1 authenticator:(id)arg2 progressiveUpdateQueue:(id)arg3 progressiveUpdateBlock:(CDUnknownBlockType)arg4;
- (void)submitRequest:(id)arg1 authenticator:(id)arg2 successQueue:(id)arg3 failureQueue:(id)arg4 successBlock:(CDUnknownBlockType)arg5 failureBlock:(CDUnknownBlockType)arg6;
- (void)submitRequest:(id)arg1 authenticator:(id)arg2 completionQueue:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)_resetTasks;
- (unsigned long long)_maxHighPriorityInContextMsgRequests;
- (unsigned long long)_maxSmallOutOfContextRequests;
- (unsigned long long)_maxLargeOutOfContextRequests;
- (unsigned long long)_maxSmallRequests;
- (unsigned long long)_maxLargeRequestsFromSingleContext;
- (unsigned long long)_maxLargeRequests;
- (void)_setupNetworkTracing;
- (id)initWithQueuePerformer:(id)arg1 taskRunDelegate:(id)arg2 networkManagerLogger:(id)arg3 networkRequestRankingLogger:(id)arg4;

@end


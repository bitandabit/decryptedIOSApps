//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "SCMapBaseViewController.h"

#import "SCDelegatedPresentingDelegate-Protocol.h"
#import "SCDoodleMiniProfileViewControllerDelegate-Protocol.h"
#import "SCFriendLocationsListener-Protocol.h"
#import "SCMapDestinationVisitor-Protocol.h"
#import "SCMapDoodleCarouselViewDelegate-Protocol.h"
#import "SCMapDoodleSpriteManagerDelegate-Protocol.h"
#import "SCMapErrorViewManagerDelegate-Protocol.h"
#import "SCMapExploreDataStoreListener-Protocol.h"
#import "SCMapExploreViewControllerDelegate-Protocol.h"
#import "SCMapFriendStoriesPresenterDelegate-Protocol.h"
#import "SCMapGroupCarouselViewDelegate-Protocol.h"
#import "SCMapLocationSharingSettingsViewControllerDelegate-Protocol.h"
#import "SCMapLoggerSessionUserLocationProviding-Protocol.h"
#import "SCMapLongPressShareOverlaysProvider-Protocol.h"
#import "SCMapMarkerControllerDelegate-Protocol.h"
#import "SCMapMatchaViewControllerDelegate-Protocol.h"
#import "SCMapOnboardingViewControllerDelegate-Protocol.h"
#import "SCMapPeopleCarouselViewDelegate-Protocol.h"
#import "SCMapPoiPresenterDelegate-Protocol.h"
#import "SCMapSearchIntentHandlerDelegate-Protocol.h"
#import "SCMapSearchTileSetIdProviding-Protocol.h"
#import "SCMapSearchViewControllerDelegate-Protocol.h"
#import "SCMapStandingPersonSpriteManagerDelegate-Protocol.h"
#import "SCMapSwipeToDismissViewDelegate-Protocol.h"
#import "SCMapTouchResponderPresentationDelegate-Protocol.h"
#import "SCMiniProfileViewControllerDelegate-Protocol.h"
#import "SCSearchResultsViewControllerDelegate-Protocol.h"
#import "SCTimeProfilable-Protocol.h"
#import "SCXRenderLayerDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"

@class NSArray, NSString, NSTimer, SCContextSession, SCDelegatedTransitioningDelegate, SCDoubleTapZoomGestureRecognizer, SCGrowingButton, SCMTFriendLocation, SCMTMapAnnouncement, SCMapAltitudeScrubberController, SCMapAnnouncementView, SCMapDoodleCarouselView, SCMapDoodleSpriteManager, SCMapErrorViewManager, SCMapExploreViewController, SCMapExplorerButton, SCMapFriendStoriesPresenter, SCMapGameScoreView, SCMapGroupCarouselView, SCMapLoadingTracker, SCMapLoggerSession, SCMapLongPressShareController, SCMapMarkerController, SCMapMatchaViewController, SCMapOnboardingViewController, SCMapPeopleCarouselView, SCMapPinSpriteManager, SCMapPoiPresenter, SCMapSearchViewController, SCMapStandingPersonSpriteManager, SCMapSupplementaryInfoController, SCMapSwipeToDismissView, SCMapTapToPlayAnywhere, SCMapTapToPlayDiscoverPOI, SCMapTapToPlayLogger, SCMapTapToPlayPOI, SCMapUnlockablePOIController, SCMapViewLogger, SCPreviewTooltipBalloon, SCShareLocationButton, SCThrottleTimer, SCXRenderLayer, SCXRenderLock, UILongPressGestureRecognizer, UIView;
@protocol NavigationDelegate, SCMapDestination, SCMapViewControllerDelegate;

@interface SCMapViewController : SCMapBaseViewController <SCDelegatedPresentingDelegate, SCFriendLocationsListener, SCMapPeopleCarouselViewDelegate, SCMapExploreDataStoreListener, SCMapSearchViewControllerDelegate, UIGestureRecognizerDelegate, SCMapOnboardingViewControllerDelegate, SCTimeProfilable, SCMapErrorViewManagerDelegate, SCMapStandingPersonSpriteManagerDelegate, SCSearchResultsViewControllerDelegate, SCMapSearchIntentHandlerDelegate, SCXRenderLayerDelegate, SCMapTouchResponderPresentationDelegate, SCMapSearchTileSetIdProviding, SCMapLoggerSessionUserLocationProviding, SCMapMatchaViewControllerDelegate, SCMiniProfileViewControllerDelegate, SCDoodleMiniProfileViewControllerDelegate, SCMapDoodleSpriteManagerDelegate, SCMapFriendStoriesPresenterDelegate, SCMapDoodleCarouselViewDelegate, SCMapExploreViewControllerDelegate, SCMapGroupCarouselViewDelegate, SCMapMarkerControllerDelegate, SCMapSwipeToDismissViewDelegate, SCMapLongPressShareOverlaysProvider, SCMapLocationSharingSettingsViewControllerDelegate, SCMapPoiPresenterDelegate, SCMapDestinationVisitor>
{
    SCShareLocationButton *_shareLocationButton;
    SCMapAltitudeScrubberController *_altitudeScrubberController;
    SCMapPeopleCarouselView *_peopleCarouselView;
    SCMapDoodleCarouselView *_doodleCarouselView;
    SCMapGroupCarouselView *_groupCarouselView;
    SCMapAnnouncementView *_announcementView;
    SCMapSupplementaryInfoController *_supplementaryInfoController;
    SCMapExplorerButton *_explorerButton;
    NSTimer *_exploreButtonCollapseTimer;
    SCMapExploreViewController *_exploreViewController;
    SCGrowingButton *_doodleButton;
    SCMapErrorViewManager *_errorViewManager;
    UIView *_errorViewManagerBaseView;
    SCMapGameScoreView *_mapGameScoreView;
    SCMapSwipeToDismissView *_mapCardsView;
    UILongPressGestureRecognizer *_longPressGestureRecognizer;
    UILongPressGestureRecognizer *_touchDownGestureRecognizer;
    SCDoubleTapZoomGestureRecognizer *_doubleTapZoomGestureRecognizer;
    struct CGPoint _startedDepressionPoint;
    SCMapFriendStoriesPresenter *_friendStoriesPresenter;
    SCMapStandingPersonSpriteManager *_spriteManager;
    SCMapSearchViewController *_presentedSearchViewController;
    _Bool _shouldContinueCenterMapOnUserRegion;
    CDStruct_b7cb895d _searchRegion;
    NSString *_searchPoi;
    _Bool _didAttachGestureRecognizers;
    _Bool _mapIsCurrentlyFullyVisible;
    double _startingDoubleTapZoom;
    struct CLLocationCoordinate2D _startingDoubleTapZoomCoordinate;
    _Bool _preparedForDismissal;
    _Bool _hasUpdatedInitialUserLocation;
    SCMTMapAnnouncement *_activeAnnouncement;
    SCXRenderLock *_renderLock;
    SCThrottleTimer *_regionChangeThrottleTimer;
    SCDelegatedTransitioningDelegate *_onboardingTransitioningDelegate;
    SCMapOnboardingViewController *_onboardingViewControllerToPresent;
    SCPreviewTooltipBalloon *_visibleLocationSettingsTooltip;
    NSTimer *_contentLoadCheckTimer;
    int _lastHandledLocationSharingPreferencesUpdateCounter;
    SCMTFriendLocation *_lastSeenFriendLocationForCurrentUser;
    SCMapMatchaViewController *_matchaViewController;
    SCMapPoiPresenter *_poiPresenter;
    _Bool _shouldCenterMapOnUserRegion;
    _Bool _isEngagedInBackgroundActivity;
    id <SCMapViewControllerDelegate> _delegate;
    id <NavigationDelegate> _navigationDelegate;
    id <SCMapDestination> _destination;
    long long _openType;
    long long _openSource;
    long long _closeType;
    SCMapTapToPlayPOI *_ttpPoiController;
    SCMapTapToPlayDiscoverPOI *_ttpDiscoverPoiController;
    SCMapUnlockablePOIController *_unlockablePoiController;
    SCMapTapToPlayAnywhere *_ttpAnywhereController;
    SCMapLoggerSession *_loggerSession;
    SCMapViewLogger *_logger;
    SCMapLoadingTracker *_loadingTracker;
    SCMapTapToPlayLogger *_tapToPlayLogger;
    SCXRenderLayer *_mapRenderLayer;
    SCMapPinSpriteManager *_pinSpriteManager;
    SCMapDoodleSpriteManager *_doodleSpriteManager;
    SCMapMarkerController *_mapMarkerController;
    SCMapLongPressShareController *_longPressShareController;
    NSArray *_touchResponders;
}

+ (int)context;
@property(copy, nonatomic) NSArray *touchResponders; // @synthesize touchResponders=_touchResponders;
@property(retain, nonatomic) SCMapLongPressShareController *longPressShareController; // @synthesize longPressShareController=_longPressShareController;
@property(retain, nonatomic) SCMapMarkerController *mapMarkerController; // @synthesize mapMarkerController=_mapMarkerController;
@property(retain, nonatomic) SCMapDoodleSpriteManager *doodleSpriteManager; // @synthesize doodleSpriteManager=_doodleSpriteManager;
@property(retain, nonatomic) SCMapPinSpriteManager *pinSpriteManager; // @synthesize pinSpriteManager=_pinSpriteManager;
@property(retain, nonatomic) SCXRenderLayer *mapRenderLayer; // @synthesize mapRenderLayer=_mapRenderLayer;
@property(retain, nonatomic) SCMapTapToPlayLogger *tapToPlayLogger; // @synthesize tapToPlayLogger=_tapToPlayLogger;
@property(retain, nonatomic) SCMapLoadingTracker *loadingTracker; // @synthesize loadingTracker=_loadingTracker;
@property(retain, nonatomic) SCMapViewLogger *logger; // @synthesize logger=_logger;
@property(retain, nonatomic) SCMapLoggerSession *loggerSession; // @synthesize loggerSession=_loggerSession;
@property(retain, nonatomic) SCMapTapToPlayAnywhere *ttpAnywhereController; // @synthesize ttpAnywhereController=_ttpAnywhereController;
@property(retain, nonatomic) SCMapUnlockablePOIController *unlockablePoiController; // @synthesize unlockablePoiController=_unlockablePoiController;
@property(retain, nonatomic) SCMapTapToPlayDiscoverPOI *ttpDiscoverPoiController; // @synthesize ttpDiscoverPoiController=_ttpDiscoverPoiController;
@property(retain, nonatomic) SCMapTapToPlayPOI *ttpPoiController; // @synthesize ttpPoiController=_ttpPoiController;
@property(nonatomic) long long closeType; // @synthesize closeType=_closeType;
@property(nonatomic) long long openSource; // @synthesize openSource=_openSource;
@property(nonatomic) long long openType; // @synthesize openType=_openType;
@property(readonly, nonatomic) _Bool isEngagedInBackgroundActivity; // @synthesize isEngagedInBackgroundActivity=_isEngagedInBackgroundActivity;
@property(retain, nonatomic) id <SCMapDestination> destination; // @synthesize destination=_destination;
@property(nonatomic) __weak id <NavigationDelegate> navigationDelegate; // @synthesize navigationDelegate=_navigationDelegate;
@property(nonatomic) __weak id <SCMapViewControllerDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) _Bool shouldCenterMapOnUserRegion; // @synthesize shouldCenterMapOnUserRegion=_shouldCenterMapOnUserRegion;
- (void).cxx_destruct;
- (id)presentingViewControllerForPoiPresenter:(id)arg1;
- (void)didDismissPoiPresenter:(id)arg1;
- (void)_hideMapCardsView;
- (void)_presentLeaderboard;
- (void)didSwipeToDismissView:(id)arg1;
- (void)mapMarkerControllerHideCardsView:(id)arg1;
- (void)mapMarkerController:(id)arg1 showCardsView:(id)arg2;
- (void)mapExploreViewController:(id)arg1 wantsToPlayMapStoryWithPoiId:(id)arg2 fromSourceView:(id)arg3;
- (void)mapExploreViewController:(id)arg1 wantsToPresentFriendStories:(id)arg2 fromBaseView:(id)arg3;
- (void)mapExploreViewController:(id)arg1 wantsToShowMiniProfileForPerson:(id)arg2;
- (void)mapExploreViewController:(id)arg1 wantsToDisplayChatForPeople:(id)arg2;
- (void)mapExploreViewController:(id)arg1 wantsToShowAllSprites:(_Bool)arg2 animated:(_Bool)arg3;
- (void)mapExploreViewControllerWantsToPresentLocationSettings:(id)arg1;
- (void)mapExploreViewControllerWantsToBeDismissed:(id)arg1;
- (void)mapExploreDataStoreDidLoadMyStatus:(id)arg1;
- (void)mapExploreDataStoreDidLoadStatuses:(id)arg1;
- (void)_dismissExploreWithCompletion:(CDUnknownBlockType)arg1;
- (void)_presentExploreIfNecessaryWithMode:(long long)arg1;
- (void)_updateExploreButtonIfNecessaryExpanded:(_Bool)arg1 hidden:(_Bool)arg2;
- (_Bool)_canShowExploreButton;
- (void)_initializeExplore;
- (void)_showAllDoodles;
- (void)matchaViewController:(id)arg1 finishedWithDoodle:(id)arg2;
- (void)setUIVisible:(_Bool)arg1 includingStatusBar:(_Bool)arg2 animated:(_Bool)arg3;
- (void)enterMatchaMode;
- (void)mapDoodleCarouselViewWantsToBeDismissed:(id)arg1;
- (void)mapDoodleCarouselView:(id)arg1 didLongPressOnDoodle:(id)arg2;
- (void)mapDoodleCarouselView:(id)arg1 didTapDoodle:(id)arg2;
- (void)mapDoodleCarouselView:(id)arg1 didShowDoodle:(id)arg2;
- (void)doodleSpriteManagerWantsToHideCarousel:(id)arg1;
- (void)doodleSpriteManager:(id)arg1 didLongPressDoodle:(id)arg2;
- (void)doodleSpriteManager:(id)arg1 didTapDoodle:(id)arg2;
- (void)personSpriteManager:(id)arg1 showMiniProfileForPerson:(id)arg2;
- (_Bool)personSpriteManagerIsCarouselHidden:(id)arg1;
- (void)personSpriteManagerHideCarousel:(id)arg1;
- (void)personSpriteManager:(id)arg1 showCarouselForPerson:(id)arg2;
- (void)personSpriteManager:(id)arg1 logPersonSelected:(id)arg2 source:(long long)arg3 actionType:(long long)arg4;
- (void)_updateCarouselForced:(_Bool)arg1;
- (void)doodleMiniProfileViewControllerDidPressDeleteButton:(id)arg1;
- (void)doodleMiniProfileViewControllerDidPressSaveButton:(id)arg1;
- (void)miniProfileViewControllerDidPressMapButton:(id)arg1;
- (void)miniProfileController:(id)arg1 wantsToNavigateToChatWithDeepLinkURL:(id)arg2;
- (void)_onboardingViewControllerDidDismiss;
- (void)onboardingViewControllerDidCancel:(id)arg1;
- (void)onboardingViewControllerDidGetLocationAccess:(id)arg1;
- (void)onboardingViewControllerDidComplete:(id)arg1 ghostMode:(_Bool)arg2;
- (void)onboardingViewController:(id)arg1 onTouchDownAction:(id)arg2;
- (id)_currentUserFriendLocationForSpriteManager;
- (void)_friendLocationsDidUpdate;
- (void)friendLocationsDataStore:(id)arg1 didFailToLoadWithError:(id)arg2;
- (void)friendLocationsDataStoreDidUpdateCurrentUserFriendLocation:(id)arg1;
- (void)friendLocationsDidChange:(id)arg1 affectedUserIds:(id)arg2;
- (void)dismissingAnimationForTransitionDelegate:(id)arg1;
- (void)presentingAnimationForTransitionDelegate:(id)arg1;
- (void)_updateTimeAndWeatherViewForced:(_Bool)arg1;
- (void)renderLayer:(id)arg1 didLoadTileMetadataForTileIds:(id)arg2;
- (void)mapViewDidFinishRenderingFrame:(id)arg1 fullyRendered:(_Bool)arg2;
- (void)mapView:(id)arg1 didChangeUserTrackingMode:(unsigned long long)arg2 animated:(_Bool)arg3;
- (id)mapView:(id)arg1 viewForAnnotation:(id)arg2;
- (void)mapView:(id)arg1 didFailToLocateUserWithError:(id)arg2;
- (void)mapView:(id)arg1 didUpdateUserLocation:(id)arg2;
- (void)mapView:(id)arg1 didFinishLoadingStyle:(id)arg2;
- (void)mapViewDidFailLoadingMap:(id)arg1 withError:(id)arg2;
- (void)mapViewDidFinishLoadingMap:(id)arg1;
- (void)mapViewWillStartLoadingMap:(id)arg1;
- (void)mapView:(id)arg1 regionDidChangeAnimated:(_Bool)arg2;
- (void)mapViewRegionIsChanging:(id)arg1;
- (void)mapView:(id)arg1 regionWillChangeAnimated:(_Bool)arg2;
- (void)_updateAltitudeZoom;
- (void)mapSearchIntentHandler:(id)arg1 wantsToShowMiniProfileForPerson:(id)arg2;
- (void)mapSearchIntentHandler:(id)arg1 wantsToGoToCoordinate:(struct CLLocationCoordinate2D)arg2 atZoomLevel:(double)arg3 coordinateBounds:(struct MGLCoordinateBounds)arg4 useCoordinateBounds:(_Bool)arg5 withTitle:(id)arg6 dropPin:(_Bool)arg7;
- (void)mapSearchIntentHandler:(id)arg1 wantsToChatWithPerson:(id)arg2;
- (void)mapSearchIntentHandler:(id)arg1 didSelectFriendLocation:(id)arg2;
- (id)poiTileSetId;
- (void)mapSearchViewController:(id)arg1 willCloseWithQueryText:(id)arg2;
- (void)searchResultsViewController:(id)arg1 didOverscrollWithOffset:(double)arg2;
- (void)searchResultsViewController:(id)arg1 didCancelWithDismissActionType:(long long)arg2;
- (_Bool)searchViewShouldBeginEditing:(id)arg1;
- (void)friendStoryPresenterDidDisappear:(id)arg1;
- (void)friendStoryPresenterDidAppear:(id)arg1;
- (id)overlayViewsForShareController:(id)arg1;
- (id)navigationDelegateForTouchResponder:(id)arg1;
- (void)presentationStateDidChangeForTouchResponder:(id)arg1;
- (_Bool)isInOnboardingForTouchResponder:(id)arg1;
- (id)presentingViewControllerForTouchResponder:(id)arg1;
- (unsigned long long)preferredScreenEdgesDeferringSystemGestures;
- (void)_sendDidZoomMapToResponders;
- (void)_sendDidPanMapToResponders;
- (void)_sendTouchCanceledOnMapToRespondersWithReason:(id)arg1;
- (void)_sendLongPressOnMapAtPointToResponders:(struct CGPoint)arg1;
- (void)_sendTouchUpOnMapAtPointToResponders:(struct CGPoint)arg1;
- (void)_sendTouchDownOnMapAtPointToResponders:(struct CGPoint)arg1;
- (_Bool)_sendToTouchRepondersWithBlock:(CDUnknownBlockType)arg1;
- (_Bool)_responderShouldReceiveEvents:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)_cancelAllMapViewGestures;
- (void)_onTouchDownAction:(id)arg1;
- (void)_onZoom:(id)arg1;
- (void)_onPan:(id)arg1;
- (void)_cancelTouchDown:(id)arg1;
- (void)_onLongPress:(id)arg1;
- (void)_onDoubleTapZoomRecognized:(id)arg1;
- (void)setVisibleCoordinateRegion:(CDStruct_b7cb895d)arg1 animated:(_Bool)arg2;
@property(nonatomic) CDStruct_b7cb895d visibleCoordinateRegion;
@property(readonly, nonatomic) struct CLLocationCoordinate2D centerCoordinate;
@property(readonly, nonatomic) double zoomLevel;
- (_Bool)ghostMode;
- (id)activeTTPController;
- (void)_showLocationSettingsTooltipWithDuration:(double)arg1 delay:(double)arg2 text:(id)arg3 textColor:(id)arg4 backgroundColor:(id)arg5;
- (id)_sortedPoisUsingS2CellId:(id)arg1;
- (void)_clearSearch;
- (void)_maybeClearSearch;
- (void)_flyToSearchCoordinateBounds:(struct MGLCoordinateBounds)arg1 pinDescriptor:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_flyToSearchCoordinate:(struct CLLocationCoordinate2D)arg1 zoomLevel:(double)arg2 pinDescriptor:(id)arg3 nonCollidingPoiId:(id)arg4 completion:(CDUnknownBlockType)arg5;
- (void)_updateIdleTimerDisabled;
- (void)_updateMapboxViewShowsUserLocation;
- (void)_centerMapOnUserRegionAnimated:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_setToolbarVisible:(_Bool)arg1 animated:(_Bool)arg2;
- (struct CGRect)_desiredCarouselViewFrame;
- (void)_hideDoodleCarouselView;
- (void)_hidePeopleCarouselView;
- (void)_clearRenderLock;
- (void)_acquireRenderLockWithType:(long long)arg1;
- (void)_showMiniProfileForDoodle:(id)arg1;
- (void)_showMiniProfileForPerson:(id)arg1 fromMap:(_Bool)arg2;
- (void)_showMiniProfileForPerson:(id)arg1;
- (void)_flyToCurrentUserLocationIfInViewport;
- (void)_handleCurrentLocationSharingPreferences;
- (void)travelToDefaultViewport:(id)arg1;
- (void)travelToDoodle:(id)arg1;
- (void)travelToPoi:(id)arg1;
- (void)travelToGroup:(id)arg1;
- (void)travelToFriend:(id)arg1;
- (void)travelToAddress:(id)arg1;
- (void)travelToCoordinate:(id)arg1;
- (void)_updateErrorViewVisibility;
- (void)errorViewManagerWantsToExitToCamera:(id)arg1;
- (void)errorViewManagerDidStopShowingError:(id)arg1;
- (void)errorViewManagerDidStartShowingError:(id)arg1;
- (void)_hideGroupCarouselViewWithCompletion:(CDUnknownBlockType)arg1;
- (void)mapGroupCarouselViewWantsToBeDismissed:(id)arg1;
- (void)mapGroupCarouselView:(id)arg1 didLongPressProfileForPerson:(id)arg2;
- (void)mapGroupCarouselView:(id)arg1 didTapProfileForPerson:(id)arg2;
- (void)mapGroupCarouselView:(id)arg1 wantsChatForGroup:(id)arg2;
- (void)mapGroupCarouselView:(id)arg1 didTapStoryForGroup:(id)arg2 sourceView:(id)arg3;
- (void)mapGroupCarouselView:(id)arg1 didTapStoryForPerson:(id)arg2 sourceView:(id)arg3;
- (void)_presentBitmojiSettingsViewController;
- (void)mapPeopleCarouselViewWantsToLinkBitmoji:(id)arg1;
- (void)mapPeopleCarouselView:(id)arg1 wantsChatForPeople:(id)arg2;
- (void)mapPeopleCarouselViewWantsToBeDismissed:(id)arg1;
- (void)mapPeopleCarouselView:(id)arg1 didLongPressProfileForPerson:(id)arg2;
- (void)mapPeopleCarouselView:(id)arg1 didTapProfileForPerson:(id)arg2;
- (void)mapPeopleCarouselView:(id)arg1 didTapStoryForPerson:(id)arg2 sourceView:(id)arg3;
- (void)mapPeopleCarouselView:(id)arg1 didShowPerson:(id)arg2 actionType:(long long)arg3;
- (void)locationSharingSettingsViewControllerWantsToDismissToMyExploreStatus:(id)arg1;
- (void)_dismissPresentedElements;
- (void)_systemClockMinuteDidChange;
- (void)_scheduleRepeatingSystemClockMinuteChangeUpdates;
- (void)_regionChangeThrottleTimerDidFire;
- (void)_presentFriendStories:(id)arg1 withBaseView:(id)arg2;
- (void)_displayChatForPeople:(id)arg1;
- (void)_displayChatForPerson:(id)arg1 deepLinkURL:(id)arg2 source:(long long)arg3;
- (void)_displayChatForPerson:(id)arg1 source:(long long)arg2;
- (id)_visibleViewController;
- (id)_topMostPresentedViewController;
- (void)_didTapOnExplorerButton;
- (void)_didTapOnCompassButton;
- (void)_requestDismissalWithDestination:(long long)arg1;
- (void)_didTouchCameraButton;
- (void)_didTapOnBackButton;
- (void)_presentLocationSettings;
- (void)_didTapShareLocation;
- (void)_didTapAnnouncement;
- (void)_didTapDoodleButton;
- (id)presentedChatViewController;
- (void)displayChatForGroupConversation:(id)arg1 fromNotification:(id)arg2;
- (void)displayChatForGroupConversation:(id)arg1;
- (void)displayChatForUsername:(id)arg1 fromNotification:(id)arg2;
@property(readonly, nonatomic) _Bool isPresentingStory;
- (_Bool)engagedInBackgroundActivity;
- (void)prepareViewForDismissal;
- (void)prepareViewForPresentation;
- (void)_gameStateDidChangeNotification:(id)arg1;
- (void)_bitmojiAvatarIdDidChangeNotification:(id)arg1;
- (void)_locationSharingServicePreferencesUpdatedNotification:(id)arg1;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)_updateScoreViewVisibility;
- (void)_deregisterForNotificationCenter;
- (void)_registerForNotificationCenter;
- (void)_attachGestureRecognizersIfNecessary;
- (struct CGRect)_desiredFrameForAnnouncement:(id)arg1;
- (double)arrowAngleForAnnouncement:(id)arg1;
- (void)_dismissAnnouncementView;
- (void)_updateAnnouncementScreenLocation;
- (void)_maybeShowAnnouncement:(id)arg1;
- (void)_showManageMyExploreUpdatesTooltipIfNecessary;
- (void)_showNotSharingLocationTooltipIfNecessary;
- (void)_maybeDisplayGameStartDialogIfNeeded;
- (void)_maybeDisplayContentLoadError;
- (void)_maybeFlyToDestination;
- (void)_mapStoppedBeingFullyVisible;
- (void)_mapBecameFullyVisible;
- (void)_checkIfMapIsFullyVisible;
- (_Bool)_isMapFullyVisible;
- (void)_presentOnboardingIfNecessary;
- (_Bool)_prepareOnboardingIfNecessary;
- (id)_presentedOnboardingViewController;
- (void)viewWillLayoutSubviews;
- (void)viewDidDisappear:(_Bool)arg1;
- (void)viewWillDisappear:(_Bool)arg1;
- (void)viewDidAppear:(_Bool)arg1;
- (void)viewWillAppear:(_Bool)arg1;
- (void)viewDidLoad;
- (id)getPageViewName;
- (void)dealloc;
- (id)initWithUserSession:(id)arg1;
@property(retain, nonatomic) SCContextSession *contextSession;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


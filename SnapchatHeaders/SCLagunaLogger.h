//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "SCLagunaAppLogger-Protocol.h"
#import "SCLagunaLibraryLogger-Protocol.h"

@class NSDate, NSString, SCLagunaRealTimeEventLogger;

@interface SCLagunaLogger : NSObject <SCLagunaLibraryLogger, SCLagunaAppLogger>
{
    SCLagunaRealTimeEventLogger *_realTimeLogger;
    NSDate *_deviceStatusAnalyticsLastUpdatedTime;
}

+ (double)_roundToNearestTenth:(double)arg1;
+ (long long)_convertPairingTypeFromSource:(unsigned long long)arg1 isBackup:(_Bool)arg2;
+ (long long)_convertFirmwareErrorType:(id)arg1;
+ (long long)_convertFirmwareCrashType:(id)arg1;
+ (long long)_convertNrfUnexpectedResponseReason:(unsigned long long)arg1;
+ (long long)_convertBtcState:(unsigned long long)arg1;
+ (long long)_convertBleState:(unsigned long long)arg1;
+ (long long)_convertGetHdCancelSource:(unsigned long long)arg1;
+ (long long)_convertGetHdStartSource:(unsigned long long)arg1;
+ (long long)_convertPairingFailureReason:(unsigned long long)arg1;
+ (long long)_convertPairingCancellationSource:(unsigned long long)arg1;
+ (long long)_convertPairingSource:(unsigned long long)arg1;
+ (long long)_convertUpdateFailureReason:(unsigned long long)arg1;
+ (long long)_convertOnboardingExitSource:(unsigned long long)arg1;
+ (long long)_convertOnboardingPage:(unsigned long long)arg1;
+ (long long)_convertOnboardingSource:(unsigned long long)arg1;
+ (long long)_convertContentComponent:(unsigned long long)arg1;
+ (long long)_convertInterruptReason:(unsigned long long)arg1;
+ (long long)_convertButtonPressType:(unsigned long long)arg1;
+ (long long)_convertTransferType:(unsigned long long)arg1;
+ (long long)_convertTransferChannel:(long long)arg1;
+ (long long)_convertWifiStatus:(unsigned long long)arg1;
+ (id)_stringForButtonPressType:(unsigned long long)arg1;
+ (id)_transferTypeToString:(unsigned long long)arg1;
+ (id)_wifiConnectionStatus:(unsigned long long)arg1;
+ (id)_getHDCancelSourceDescription:(unsigned long long)arg1;
+ (id)_getHDWifiPopupActionDescription:(unsigned long long)arg1;
@property(retain, nonatomic) NSDate *deviceStatusAnalyticsLastUpdatedTime; // @synthesize deviceStatusAnalyticsLastUpdatedTime=_deviceStatusAnalyticsLastUpdatedTime;
@property(retain, nonatomic) SCLagunaRealTimeEventLogger *realTimeLogger; // @synthesize realTimeLogger=_realTimeLogger;
- (void).cxx_destruct;
- (void)logSuccessfullPairingWithDeviceID:(id)arg1 pairingSessionId:(id)arg2;
- (void)logViewTosWithPairingSessionId:(id)arg1;
- (void)logPairingConnecting:(id)arg1 pairingSessionId:(id)arg2 isProfile:(_Bool)arg3 isBackupPairing:(_Bool)arg4 numOtherPairedDevices:(long long)arg5;
- (void)logPairingAnalyticsEvent:(unsigned long long)arg1 pairingStartTime:(id)arg2 pairingSessionId:(id)arg3 pairingLocation:(id)arg4;
- (void)logPairingSpecificPageStart:(id)arg1 pairingSessionId:(id)arg2 bluetoothEnabled:(_Bool)arg3;
- (void)logPairingNeedHelpPressed:(id)arg1;
- (void)_logPairingBackupDetectedNotificationPressed;
- (void)_logPairingBackupDetectedNotificationShown;
- (void)logPairingInactiveAlertSupportSiteLinkPressed:(id)arg1;
- (void)logPairingInactiveAlertKeepPairingPressed:(id)arg1;
- (void)logPairingInactiveAlertShown:(id)arg1;
- (void)logPairingCancel:(id)arg1 cancellationSource:(unsigned long long)arg2;
- (void)logPairingRetry:(id)arg1;
- (void)logPairingFailure:(id)arg1 failureReason:(unsigned long long)arg2;
- (void)logPairingSuccessful:(id)arg1;
- (void)logPairingBleSynced:(id)arg1;
- (void)logPairingTermsOfServiceClosed:(id)arg1;
- (void)logPairingTermsOfServiceOpened:(id)arg1;
- (void)logPairingNameChanged:(id)arg1;
- (void)logPairingNameDialogDisplayed:(id)arg1;
- (void)logPairingBleConnected:(id)arg1;
- (void)logPairingBackupConfirmed:(id)arg1;
- (void)logPairingBackupDetected:(id)arg1;
- (void)logPairingBackupStart:(id)arg1 failureReason:(unsigned long long)arg2;
- (void)logPairingSnapcodeRecognized:(id)arg1;
- (void)logPairingBleDetected:(id)arg1;
- (void)logPairingStarted:(id)arg1;
- (void)_populatePairingEventWithDeviceParameters:(id)arg1 pairingSessionInfo:(id)arg2;
- (void)_populatePairingEventParameters:(id)arg1 pairingSessionInfo:(id)arg2;
- (void)logButtonPress:(long long)arg1;
- (void)logHdFlowStartedWithBatchId:(id)arg1;
- (void)logLagunaHdFlowFinished;
- (void)logLagunaHdFlowCancelled:(id)arg1 fromSource:(unsigned long long)arg2;
- (void)logLagunaHdFlowStarted:(id)arg1 fromSource:(unsigned long long)arg2;
- (void)logLagunaHdWifiPopupButtonPressedWithAction:(unsigned long long)arg1;
- (void)logLagunaHdWifiPopupDisplayedWithActionDisplayed:(unsigned long long)arg1;
- (void)logLagunaHdStartingWifi;
- (void)logLagunaGetHdButtonPressed:(id)arg1 fromSource:(unsigned long long)arg2;
- (void)_populateGetHdEventFlowParameters:(id)arg1 getHdSessionInfo:(id)arg2;
- (void)_populateGetHdEventParameters:(id)arg1 getHdSessionInfo:(id)arg2;
- (void)logFirmwareUpdateScheduledWithDeviceID:(id)arg1 updateSessionID:(id)arg2 previousFirmwareVersion:(id)arg3 newFirmwareVersion:(id)arg4;
- (void)logFirmwareUpdateFailureWithDeviceID:(id)arg1 updateSessionID:(id)arg2 firmwareVersion:(id)arg3 failureReason:(id)arg4 updateIsActive:(_Bool)arg5;
- (void)logFirmwareUpdateSuccessWithDeviceID:(id)arg1 updateSessionID:(id)arg2 newFirmwareVersion:(id)arg3 downloadDurationInMs:(long long)arg4 transferDurationInMs:(long long)arg5 updateDurationInMs:(long long)arg6 updateIsActive:(_Bool)arg7;
- (id)_updateTypeForActive:(_Bool)arg1;
- (void)logFirmwareUpdateFailed:(id)arg1 reason:(unsigned long long)arg2;
- (void)logFirmwareUpdateSucceeded:(id)arg1;
- (void)logFirmwareUpdateFlashStarted:(id)arg1;
- (void)logFirmwareUpdateScheduled:(id)arg1;
- (void)logFirmwareUpdatePatchApplyFinished:(id)arg1;
- (void)logFirmwareUpdatePatchApplyStarted:(id)arg1;
- (void)logFirmwareUpdatePatchTransferFinished:(id)arg1;
- (void)logFirmwareUpdatePatchTransferStarted:(id)arg1;
- (void)logFirmwareUpdatePatchDownloadFinished:(id)arg1;
- (void)logFirmwareUpdatePatchDownloadStarted:(id)arg1;
- (void)logFirmwareUpdateBinaryRevertFinished:(id)arg1;
- (void)logFirmwareUpdateBinaryRevertStarted:(id)arg1;
- (void)logFirmwareUpdateStarted:(id)arg1;
- (void)_populateAndLogFirmwareUpdateSessionEvent:(id)arg1 info:(id)arg2;
- (void)logFirmwareUpdatePromptDismissed:(id)arg1 promptAccepted:(_Bool)arg2;
- (void)logFirmwareUpdatePromptShown:(id)arg1;
- (void)logFirmwareUpdateSeen:(id)arg1;
- (void)logFirmwareUpdateChecked:(id)arg1;
- (void)_populateAndLogFirmwareUpdateEvent:(id)arg1 device:(id)arg2;
- (void)logNotificationExpanded:(id)arg1;
- (void)logNotificationOpened:(id)arg1 inApp:(_Bool)arg2;
- (void)logNotificationDisplayed:(id)arg1 withSystem:(_Bool)arg2;
- (void)_populateTransferEventParameters:(id)arg1 notification:(id)arg2;
- (id)_stringFromPushType:(long long)arg1;
- (void)logDeleteContent:(id)arg1;
- (void)logUserEnterSettingsWithDeviceId:(id)arg1;
- (void)logRestartDeviceWithDeviceId:(id)arg1;
- (void)logClearContentWithDeviceId:(id)arg1;
- (void)logForgetDeviceWithDeviceId:(id)arg1;
- (void)logDeviceConnectionWithDeviceId:(id)arg1;
- (void)logRenameDeviceWithDeviceId:(id)arg1 oldName:(id)arg2 newName:(id)arg3;
- (void)logUserVisitedCommerceWebsiteWithNumDevices:(long long)arg1 deviceState:(long long)arg2;
- (void)logSettingsUserPressedCheckUpdate:(id)arg1;
- (void)logSettingsUserPressedRestartDevice:(id)arg1;
- (void)logSettingsUserPressedForgetDevice:(id)arg1;
- (void)logSettingsUserPressedClearContent:(id)arg1;
- (void)logSettingsUserRenamedDeviceCancel:(id)arg1;
- (void)logSettingsUserRenamedDeviceSuccess:(id)arg1;
- (void)logSettingsUserRenamedDeviceOpen:(id)arg1;
- (void)logSettingsUserPressedManageDevice:(id)arg1;
- (void)logSettingsUserAddedSpectacles;
- (void)logSettingsUserVisitedGettingStartedPage;
- (void)logSettingsUserVisitedNeedHelpPage;
- (void)logUserExitSettingsPageWithNumDevices:(long long)arg1 deviceState:(long long)arg2;
- (void)logUserEnterSettingsPageWithNumDevices:(long long)arg1 deviceState:(long long)arg2;
- (void)logOnboardingExit:(id)arg1 exitSource:(unsigned long long)arg2;
- (void)logOnboardingPageChange:(id)arg1;
- (void)logOnboardingStart:(id)arg1;
- (void)_populateOnboardingEventParameters:(id)arg1 onboardingSessionInfo:(id)arg2;
- (void)logDeviceStatusUpdate:(id)arg1 videoCount:(long long)arg2;
- (void)logDeviceInfoUpdated:(id)arg1;
- (void)logDebugReport:(id)arg1 deviceId:(id)arg2 firmwareErrorType:(id)arg3 firmwareCrashType:(id)arg4 transferSessionId:(id)arg5 pairingSessionId:(id)arg6 updateSessionId:(id)arg7 firmwareVersion:(id)arg8 hardwareVersion:(id)arg9;
- (void)logNrfUnexpectedResponse:(id)arg1 reason:(unsigned long long)arg2;
- (void)logMetadataWithoutUtcWithContentName:(id)arg1 firmwareVersion:(id)arg2;
- (void)logMissingMetadataForContentName:(id)arg1 firmwareVersion:(id)arg2;
- (void)logBleDisconnected:(id)arg1 deviceConnectionState:(long long)arg2 disconnectReason:(long long)arg3;
- (void)logDeviceWifiThrottled:(id)arg1 transferBatchId:(id)arg2;
- (void)logBluetoothOverloadWithDevice:(id)arg1;
- (void)logProgressMonitorTripped:(long long)arg1 device:(id)arg2;
- (void)logDeviceUnpaired:(id)arg1 reason:(unsigned long long)arg2;
- (void)logCorruptContent:(id)arg1 corruptionSource:(unsigned long long)arg2;
- (void)logSingleTransferWithTransferBatchId:(id)arg1 contentName:(id)arg2 transferChannel:(id)arg3 deviceBatteryAtEnd:(id)arg4 timeOfTransferEndUtc:(id)arg5 deviceID:(id)arg6 isCharging:(_Bool)arg7 deviceStorage:(id)arg8 firmwareVersion:(id)arg9 wifiConnectionStatus:(unsigned long long)arg10;
- (void)logTransferFailureWithTransferChannel:(long long)arg1 transferBatchID:(id)arg2;
- (void)logTransferInterruptedWithBatchId:(id)arg1 transferChannel:(id)arg2 firmwareVersion:(id)arg3 deviceID:(id)arg4 isCharging:(_Bool)arg5 isBurstRequest:(_Bool)arg6 isUsingDataPacket:(_Bool)arg7;
- (void)logTransferChunkWithTransferBatchId:(id)arg1 contentName:(id)arg2 transferChannel:(id)arg3 transferSpeedInKBs:(id)arg4 firmwareVersion:(id)arg5 deviceId:(id)arg6 isCharging:(_Bool)arg7 wifiConnectionStatus:(unsigned long long)arg8 isBurstRequest:(_Bool)arg9 isUsingDataPacket:(_Bool)arg10;
- (void)logBatchTransferWithBatchId:(id)arg1 deviceStorage:(id)arg2 numberOfSdVideoBeingTransferred:(id)arg3 numberOfHdVideoBeingTransferred:(id)arg4 firmwareVersion:(id)arg5 transferChannel:(id)arg6 deviceBatteryAtStart:(id)arg7 deviceBatteryAtEnd:(id)arg8 timeOfTransferStartUtc:(id)arg9 timeOfTransferEndUtc:(id)arg10 deviceID:(id)arg11 isCharging:(_Bool)arg12 bluetoothBootTimeInMs:(id)arg13 wifiBootTimeInMs:(id)arg14 nordicTemperature:(id)arg15 coulombControlTemperature:(id)arg16 ambaTemperature:(id)arg17 wifiTemperature:(id)arg18 temperatureReportUpdateUtc:(id)arg19 wifiConnectionStatus:(unsigned long long)arg20 transferType:(unsigned long long)arg21 isAutomaticTransfer:(_Bool)arg22;
- (void)logCaptureEventBatch;
- (void)logCaptureEventForContent:(id)arg1 name:(id)arg2 metadata:(id)arg3;
- (void)logContentCaptureForSession:(id)arg1 metadata:(id)arg2 contentId:(id)arg3;
- (void)logMetadataTransferForSession:(id)arg1 timeSinceTransferBegan:(id)arg2 fileSize:(long long)arg3 contentId:(id)arg4;
- (void)logFileTransferForSession:(id)arg1 timeSinceTransferBegan:(id)arg2;
- (void)logTransferSessionInterrupted:(id)arg1 reason:(unsigned long long)arg2 sdVideos:(long long)arg3 hdVideos:(long long)arg4 wifiConnectionStatus:(unsigned long long)arg5;
- (void)logTransferSessionFinished:(id)arg1 sdVideos:(long long)arg2 hdVideos:(long long)arg3 wifiConnectionStatus:(unsigned long long)arg4;
- (void)logTransferSessionStart:(id)arg1 bluetoothBootTimeInMs:(id)arg2 wifiBootTimeInMs:(id)arg3 wifiConnectionStatus:(unsigned long long)arg4;
- (void)_populateTransferSessionParameters:(id)arg1 transferSession:(id)arg2;
- (void)_populateTransferEventParameters:(id)arg1 transferSession:(id)arg2;
- (void)_populateTransferEventParameters:(id)arg1 info:(id)arg2;
- (void)_logSpectaclesSettingsDeviceActionWithType:(long long)arg1 device:(id)arg2;
- (void)_logSpectaclesSettingsActionWithType:(long long)arg1;
- (id)initWithRequestManager:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "SCStrokeDrawerDelegate-Protocol.h"

@class NSMutableArray, NSString, UIColor;
@protocol SCStrokeDrawer;

@interface SCSingleStrokeDrawingView : UIView <SCStrokeDrawerDelegate>
{
    NSMutableArray *_points;
    double _lineWidth;
    UIColor *_lineColor;
    NSString *_emoji;
    id <SCStrokeDrawer> _solidStrokeDrawer;
    id <SCStrokeDrawer> _emojiStrokeDrawer;
    id <SCStrokeDrawer> _currentActivateDrawer;
    long long _drawerType;
    id <SCStrokeDrawer> _pixelationMaskStrokeDrawer;
    long long _currentStrokeUniqueId;
}

@property(nonatomic) long long currentStrokeUniqueId; // @synthesize currentStrokeUniqueId=_currentStrokeUniqueId;
@property(retain, nonatomic) id <SCStrokeDrawer> pixelationMaskStrokeDrawer; // @synthesize pixelationMaskStrokeDrawer=_pixelationMaskStrokeDrawer;
@property(readonly, nonatomic) long long drawerType; // @synthesize drawerType=_drawerType;
- (void).cxx_destruct;
- (void)strokeDrawer:(id)arg1 requestDrawInRect:(struct CGRect)arg2;
- (void)strokeDrawerRequestRedraw:(id)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (double)_mapScaleValuefromDrawer:(id)arg1 toDrawer:(id)arg2 scale:(double)arg3;
- (double)changeDrawerType:(long long)arg1 mapScale:(double)arg2;
- (_Bool)isPointEligibleForAdding:(id)arg1 previousPoint:(id)arg2 scale:(double)arg3;
- (double)clampedScale:(double)arg1;
- (void)updateDrawingData:(id)arg1 emoji:(id)arg2 pixelationMaskStrokeDrawer:(id)arg3 lineWidth:(double)arg4 drawerType:(long long)arg5;
- (double)lineWidth;
- (id)lineColor;
- (id)stroke;
- (void)updateWithStroke:(id)arg1;
- (void)clearDrawingView;
- (_Bool)hasDrawing;
- (void)addPoint:(id)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


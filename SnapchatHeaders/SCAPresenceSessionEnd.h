//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "SCAUserTrackedEvent.h"

#import "MapSerializable-Protocol.h"
#import "NSCopying-Protocol.h"

@class NSNumber, NSString;

@interface SCAPresenceSessionEnd : SCAUserTrackedEvent <MapSerializable, NSCopying>
{
    NSNumber *groupParticipantCount;
    NSNumber *userWithBitmojiCount;
    NSNumber *presenceMaxCount;
    NSNumber *withGroup;
    NSNumber *durationSec;
    NSNumber *presenceDuration2OrMoreUsers;
    NSNumber *presenceDuration3OrMoreUsers;
    NSNumber *presenceDuration4OrMoreUsers;
    NSNumber *presenceDuration5OrMoreUsers;
    NSNumber *presenceDuration6OrMoreUsers;
    NSNumber *presenceDuration7OrMoreUsers;
    NSNumber *presenceDuration8OrMoreUsers;
    NSNumber *presenceDuration9OrMoreUsers;
    NSNumber *presenceDuration10OrMoreUsers;
    NSNumber *presenceDuration11OrMoreUsers;
    NSNumber *presenceDuration12OrMoreUsers;
    NSNumber *presenceDuration13OrMoreUsers;
    NSNumber *presenceDuration14OrMoreUsers;
    NSNumber *presenceDuration15OrMoreUsers;
    NSNumber *cellViewPosition;
    long long friendshipStatus;
    long long correspondentType;
    NSString *subpageName;
    NSString *conversationId;
    NSString *mischiefId;
    NSString *correspondentId;
    NSString *rankingModelId;
    NSString *rankingId;
    NSString *serverRankingId;
    NSString *ghost_correspondent_id;
}

- (void).cxx_destruct;
- (id)asDictionary;
- (id)getGhost_correspondent_id;
- (void)setGhost_correspondent_id:(id)arg1;
- (id)getServerRankingId;
- (void)setServerRankingId:(id)arg1;
- (id)getRankingId;
- (void)setRankingId:(id)arg1;
- (id)getRankingModelId;
- (void)setRankingModelId:(id)arg1;
- (id)getCorrespondentId;
- (void)setCorrespondentId:(id)arg1;
- (id)getMischiefId;
- (void)setMischiefId:(id)arg1;
- (id)getConversationId;
- (void)setConversationId:(id)arg1;
- (id)getSubpageName;
- (void)setSubpageName:(id)arg1;
- (long long)getCorrespondentType;
- (void)setCorrespondentType:(long long)arg1;
- (long long)getFriendshipStatus;
- (void)setFriendshipStatus:(long long)arg1;
- (long long)getCellViewPosition;
- (void)setCellViewPosition:(long long)arg1;
- (double)getPresenceDuration15OrMoreUsers;
- (void)setPresenceDuration15OrMoreUsers:(double)arg1;
- (double)getPresenceDuration14OrMoreUsers;
- (void)setPresenceDuration14OrMoreUsers:(double)arg1;
- (double)getPresenceDuration13OrMoreUsers;
- (void)setPresenceDuration13OrMoreUsers:(double)arg1;
- (double)getPresenceDuration12OrMoreUsers;
- (void)setPresenceDuration12OrMoreUsers:(double)arg1;
- (double)getPresenceDuration11OrMoreUsers;
- (void)setPresenceDuration11OrMoreUsers:(double)arg1;
- (double)getPresenceDuration10OrMoreUsers;
- (void)setPresenceDuration10OrMoreUsers:(double)arg1;
- (double)getPresenceDuration9OrMoreUsers;
- (void)setPresenceDuration9OrMoreUsers:(double)arg1;
- (double)getPresenceDuration8OrMoreUsers;
- (void)setPresenceDuration8OrMoreUsers:(double)arg1;
- (double)getPresenceDuration7OrMoreUsers;
- (void)setPresenceDuration7OrMoreUsers:(double)arg1;
- (double)getPresenceDuration6OrMoreUsers;
- (void)setPresenceDuration6OrMoreUsers:(double)arg1;
- (double)getPresenceDuration5OrMoreUsers;
- (void)setPresenceDuration5OrMoreUsers:(double)arg1;
- (double)getPresenceDuration4OrMoreUsers;
- (void)setPresenceDuration4OrMoreUsers:(double)arg1;
- (double)getPresenceDuration3OrMoreUsers;
- (void)setPresenceDuration3OrMoreUsers:(double)arg1;
- (double)getPresenceDuration2OrMoreUsers;
- (void)setPresenceDuration2OrMoreUsers:(double)arg1;
- (double)getDurationSec;
- (void)setDurationSec:(double)arg1;
- (_Bool)getWithGroup;
- (void)setWithGroup:(_Bool)arg1;
- (long long)getPresenceMaxCount;
- (void)setPresenceMaxCount:(long long)arg1;
- (long long)getUserWithBitmojiCount;
- (void)setUserWithBitmojiCount:(long long)arg1;
- (long long)getGroupParticipantCount;
- (void)setGroupParticipantCount:(long long)arg1;
- (double)getSamplingRate;
- (long long)getEventQoS;
- (id)getEventName;
- (id)init;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithUsersPresentAtLeastOnce:(id)arg1 parameters:(id)arg2 correspondentId:(id)arg3;

@end


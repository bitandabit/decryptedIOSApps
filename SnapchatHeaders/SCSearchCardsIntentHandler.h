//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "MFMessageComposeViewControllerDelegate-Protocol.h"
#import "SCAlertGearDelegate-Protocol.h"
#import "SCBrowserViewControllerDelegate-Protocol.h"
#import "SCGroupMiniProfileViewControllerDelegate-Protocol.h"
#import "SCMapViewControllerDelegate-Protocol.h"
#import "SCMiniProfileViewControllerDelegate-Protocol.h"
#import "SCReplyDelegate-Protocol.h"
#import "SCSearchDiscoverStoriesPresenterDelegate-Protocol.h"
#import "SCSearchEventListener-Protocol.h"
#import "SCSearchIntentHandler-Protocol.h"
#import "SCSearchMiniProfilePresenterDelegate-Protocol.h"
#import "SCSearchModalPresenting-Protocol.h"
#import "SCSearchModerationHandlerDelegate-Protocol.h"
#import "SCSearchMomentsOperaPresenterDelegate-Protocol.h"
#import "SCSearchReplyCameraPresenterDelegate-Protocol.h"
#import "SCSearchStoriesPresenterDelegate-Protocol.h"
#import "SCSearchStorySharePopupPresenterDelegate-Protocol.h"
#import "SCSearchStoryShareSessionDelegate-Protocol.h"
#import "SCStartChatDelegate-Protocol.h"
#import "SCStoryMiniProfileViewControllerDelegate-Protocol.h"
#import "UIViewControllerTransitioningDelegate-Protocol.h"

@class AddFriendsDelegateObject, NSArray, NSDictionary, NSString, SCAlertGear, SCLazy, SCMiniProfileActionHandler, SCMiniProfileViewController, SCOperaPlaylistEditionsPlugin, SCOperaPresenter, SCSearchCachedRequestManager, SCSearchEventListenerAnnouncer, SCSearchGCardFullScreenViewController, SCSearchModerationHandler, SCSearchNavigationCoordinator, SCSearchReplyCameraPresenter, SCSearchSession, SCSearchStoriesEverywhereService, SCSearchStorySharePopupPresenter, SCSearchStoryShareSession, UINavigationController, UIViewController;
@protocol NavigationDelegate, SCSearchCardsIntentHandlerDelegate, SCSearchIntent, SCSearchResultsViewControllerDelegate, SCStartChatDelegate, SendSnapNavigationControllerDelegate;

@interface SCSearchCardsIntentHandler : NSObject <SCBrowserViewControllerDelegate, SCAlertGearDelegate, MFMessageComposeViewControllerDelegate, SCSearchReplyCameraPresenterDelegate, SCSearchModalPresenting, SCStartChatDelegate, SCReplyDelegate, SCSearchStoryShareSessionDelegate, SCSearchStorySharePopupPresenterDelegate, SCSearchStoriesPresenterDelegate, SCSearchEventListener, UIViewControllerTransitioningDelegate, SCMapViewControllerDelegate, SCSearchMiniProfilePresenterDelegate, SCSearchModerationHandlerDelegate, SCSearchDiscoverStoriesPresenterDelegate, SCMiniProfileViewControllerDelegate, SCGroupMiniProfileViewControllerDelegate, SCSearchMomentsOperaPresenterDelegate, SCStoryMiniProfileViewControllerDelegate, SCSearchIntentHandler>
{
    SCSearchSession *_searchSession;
    SCSearchStoryShareSession *_storyShareSession;
    SCSearchStorySharePopupPresenter *_storySharePopupPresenter;
    SCSearchReplyCameraPresenter *_replyCameraPresenter;
    SCSearchGCardFullScreenViewController *_gCardFullScreenViewController;
    SCLazy *_publicContentMiniProfilePresenterCreator;
    id <SCSearchIntent> _currentIntent;
    CDUnknownBlockType _friendMiniProfileCallbackBlock;
    CDUnknownBlockType _groupProfileCallbackBlock;
    CDUnknownBlockType _discoverEditionDismissCallbackBlock;
    CDUnknownBlockType _storyDismissCallbackBlock;
    CDUnknownBlockType _subscribePublisherCallbackBlock;
    CDUnknownBlockType _leaveGroupStoryCallbackBlock;
    SCSearchEventListenerAnnouncer *_eventAnnouncer;
    NSDictionary *_extraLoggingData;
    NSArray *_subIntentHandlers;
    SCOperaPresenter *_operaPresenter;
    SCOperaPlaylistEditionsPlugin *_editionsPlugin;
    SCSearchModerationHandler *_moderationHandler;
    SCLazy *_gallerySearchActionHandlerCreator;
    SCSearchCachedRequestManager *_cachedRequestManager;
    SCSearchStoriesEverywhereService *_storiesEverywhereService;
    SCMiniProfileActionHandler *_miniProfileActionHandler;
    id <SCSearchCardsIntentHandlerDelegate> _delegate;
    id <SCStartChatDelegate> _startChatDelegate;
    id <NavigationDelegate> _navigationDelegate;
    id <SendSnapNavigationControllerDelegate> _sendSnapNavigationControllerDelegate;
    id <SCSearchResultsViewControllerDelegate> _searchResultsViewControllerDelegate;
    UIViewController *_parentController;
    UINavigationController *_navigationController;
    SCSearchNavigationCoordinator *_searchNavigationCoordinator;
    SCMiniProfileViewController *_miniProfileViewController;
    SCAlertGear *_alertGear;
    AddFriendsDelegateObject *_addFriendsDelegate;
}

+ (id)requestsContext;
+ (id)announcerIdentifier;
@property(retain, nonatomic) AddFriendsDelegateObject *addFriendsDelegate; // @synthesize addFriendsDelegate=_addFriendsDelegate;
@property(retain, nonatomic) SCAlertGear *alertGear; // @synthesize alertGear=_alertGear;
@property(nonatomic) __weak SCMiniProfileViewController *miniProfileViewController; // @synthesize miniProfileViewController=_miniProfileViewController;
@property(nonatomic) __weak SCSearchNavigationCoordinator *searchNavigationCoordinator; // @synthesize searchNavigationCoordinator=_searchNavigationCoordinator;
@property(nonatomic) __weak UINavigationController *navigationController; // @synthesize navigationController=_navigationController;
@property(nonatomic) __weak UIViewController *parentController; // @synthesize parentController=_parentController;
@property(nonatomic) __weak id <SCSearchResultsViewControllerDelegate> searchResultsViewControllerDelegate; // @synthesize searchResultsViewControllerDelegate=_searchResultsViewControllerDelegate;
@property(nonatomic) __weak id <SendSnapNavigationControllerDelegate> sendSnapNavigationControllerDelegate; // @synthesize sendSnapNavigationControllerDelegate=_sendSnapNavigationControllerDelegate;
@property(nonatomic) __weak id <NavigationDelegate> navigationDelegate; // @synthesize navigationDelegate=_navigationDelegate;
@property(nonatomic) __weak id <SCStartChatDelegate> startChatDelegate; // @synthesize startChatDelegate=_startChatDelegate;
@property(nonatomic) __weak id <SCSearchCardsIntentHandlerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)moderationHandler:(id)arg1 dismissViewController:(id)arg2;
- (void)moderationHandler:(id)arg1 presentViewController:(id)arg2;
- (void)_updateExtraLoggingDataWithDict:(id)arg1;
- (id)fullScreenDummyPresentingViewController;
- (id)animationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;
- (id)animationControllerForDismissedController:(id)arg1;
- (id)_loggingInfoAction:(long long)arg1;
- (void)didTriggerEventWithEventName:(id)arg1 announcerIdentifier:(id)arg2 extraData:(id)arg3;
- (_Bool)replyingToStoryWithChat;
- (void)didFollowThrough;
- (void)replyWithParameter:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)setGroupConversationById:(id)arg1 shouldDisplayChatCards:(_Bool)arg2 navigationAction:(long long)arg3;
- (void)removeFeedToChatTapDectionView;
- (void)navigateToChatViewAnimated:(_Bool)arg1;
- (void)navigateToChatView;
- (void)setChatUsername:(id)arg1 deepLinkURL:(id)arg2 chatPageSource:(long long)arg3 shouldDisplayChatCards:(_Bool)arg4 navigationAction:(long long)arg5;
- (void)setChatUsername:(id)arg1 chatPageSource:(long long)arg2 shouldDisplayChatCards:(_Bool)arg3 navigationAction:(long long)arg4;
- (void)messageComposeViewController:(id)arg1 didFinishWithResult:(long long)arg2;
- (void)searchMomentsOperaPresenterDidDismissStory:(id)arg1;
- (void)searchDiscoverStoriesPresenterDidDismissStory:(id)arg1;
- (id)presentingViewControllerForSearchDiscoverStoriesPresenter:(id)arg1;
- (void)_callStoryDismissCallbackBlock;
- (_Bool)isCustomPresentationForSearchStoriesPresenter:(id)arg1;
- (id)presentingViewControllerForSearchStoriesPresenter:(id)arg1;
- (void)searchStoryPresenterDidFinishDismissingStory:(id)arg1;
- (void)searchStoryPresenterWillBeginPresentingStory:(id)arg1;
- (void)didTapWatchButtonWithPublication:(id)arg1 withSourceView:(id)arg2;
- (void)didTapWatchButtonWithFriendStories:(id)arg1 withSourceView:(id)arg2;
- (void)didTapDiscoverSubscribeButtonWithChannel:(id)arg1;
- (id)presentingViewControllerForMiniProfilePresenter:(id)arg1;
- (id)_getDownloadContextFor:(id)arg1;
- (_Bool)alertGear:(id)arg1 notificationStatusForFriend:(id)arg2;
- (void)alertGear:(id)arg1 didNotificationStatusChangeForFriend:(id)arg2;
- (void)customOperationForReport:(id)arg1;
- (void)customOperationForBlock:(id)arg1 blockReasonId:(id)arg2;
- (void)customOperationForDeleteorIgnore:(id)arg1;
- (void)alertGear:(id)arg1 didSetDisplay:(id)arg2 friend:(id)arg3 shouldScroll:(_Bool)arg4;
- (void)miniProfileViewControllerDidSelectOptionShowInsights:(id)arg1;
- (void)miniProfileViewControllerDidAddFriend:(id)arg1 friend:(id)arg2;
- (void)miniProfileViewController:(id)arg1 didSendSnap:(id)arg2;
- (void)miniProfileViewControllerDidOpenSendView:(id)arg1;
- (void)miniProfileViewControllerNeedsToLogPressSnapButton:(id)arg1;
- (void)miniProfileViewControllerDidPressSettingsButton:(id)arg1;
- (void)miniProfileController:(id)arg1 wantsToNavigateToChatWithDeepLinkURL:(id)arg2;
- (void)miniProfileViewControllerDidSelectOptionShareStoryURL:(id)arg1;
- (void)_performSendStory:(id)arg1 image:(id)arg2;
- (void)storyMiniProfileViewControllerDidSelectOptionSendStory:(id)arg1;
- (void)storyMiniProfileViewControllerDidSelectOptionShareStoryURL:(id)arg1;
- (id)storyMiniProfileViewControllerOperaDataModelToPresent:(id)arg1;
- (void)storyMiniProfileViewControllerDidTapActionButton:(id)arg1;
- (void)_logSubscribeState:(unsigned long long)arg1 forChannel:(id)arg2;
- (void)_miniProfileActionHandler:(id)arg1 didUpdateSubscribeState:(unsigned long long)arg2;
- (id)userSession;
- (void)_leaveGroupStoryCallback;
- (void)_leaveGroupStoryForPublication:(id)arg1;
- (void)groupMiniProfileController:(id)arg1 requestsAction:(long long)arg2;
- (void)groupMiniProfileControllerDidUpdateGroup:(id)arg1;
- (void)groupMiniProfileController:(id)arg1 wantsToNavigateToChatForFriend:(id)arg2 deepLinkURL:(id)arg3;
- (void)groupMiniProfileControllerDidPressSnapButton:(id)arg1;
- (void)groupMiniProfileControllerDidPressChatButton:(id)arg1;
- (void)browserViewIsClosing;
- (void)searchModalPresenterDismissViewController:(id)arg1 animated:(_Bool)arg2;
- (void)searchModalPresenterPresentViewController:(id)arg1 animated:(_Bool)arg2;
- (id)presentingViewControllerForPopupPresenter:(id)arg1;
- (void)searchStorySharePopupPresenter:(id)arg1 didPressWatchNowButtonWithDynamicStory:(id)arg2 dynamicStorySourceView:(id)arg3;
- (void)searchStorySharePopupPresenter:(id)arg1 didPressSendButtonWithDynamicStory:(id)arg2 coverImage:(id)arg3;
- (void)_logSearchAction:(long long)arg1 forActionDestination:(id)arg2;
- (void)_fetchAndPlayDynamicStoryWithSuggestionQuery:(id)arg1;
- (void)_presentNewSearchViewControllerWithSearchQuery:(id)arg1;
- (void)_handleBrowserIntentWithHtml:(id)arg1 url:(id)arg2 sourceView:(id)arg3;
- (void)_playPublisherStory:(id)arg1 withUrl:(id)arg2 withSourceView:(id)arg3 isTile:(_Bool)arg4 viewLocation:(long long)arg5;
- (void)_playFriendStory:(id)arg1 withSourceView:(id)arg2 viewLocation:(unsigned long long)arg3 isCircleTransition:(_Bool)arg4;
- (void)_playDynamicStories:(id)arg1 startIndex:(unsigned long long)arg2 withSourceView:(id)arg3 isCircleTransition:(_Bool)arg4;
- (void)_playDynamicStory:(id)arg1 withSourceView:(id)arg2 isCircleTransition:(_Bool)arg3;
- (void)_subscribeDiscoverChannel:(id)arg1;
- (void)_presentGroupStorySettingsForPublication:(id)arg1;
- (void)_presentMiniProfileWithPublication:(id)arg1;
- (void)_presentGroupMiniProfileWithGroupId:(id)arg1;
- (void)_presentMiniProfileWithFriend:(id)arg1;
- (void)_chatWithFriend:(id)arg1 notification:(id)arg2 deepLinkURL:(id)arg3;
- (void)_chatWithFriend:(id)arg1 deepLinkURL:(id)arg2;
- (void)_chatWithFriend:(id)arg1;
- (void)_chatWithGroupId:(id)arg1;
- (void)_showMyContactsVC:(_Bool)arg1 skipPhoneVerification:(_Bool)arg2;
- (void)_presentStorySharePopupForDynamicStory:(id)arg1 withThumbnailSize:(struct CGSize)arg2 dynamicStorySourceView:(id)arg3 actionModel:(id)arg4;
- (void)_sendStoryWithDynamicStory:(id)arg1 coverImage:(id)arg2;
- (void)navigateToDeeplink:(id)arg1 withSourceView:(id)arg2;
- (_Bool)handleIntent:(id)arg1 notification:(id)arg2;
- (_Bool)handleIntent:(id)arg1;
- (void)tearDown;
- (id)initWithSession:(id)arg1;
- (void)removeListener:(id)arg1;
- (void)addListener:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


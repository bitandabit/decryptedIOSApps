//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class CIContext;
@protocol MTLDevice, MTLTexture;

@interface SCMetalTextureResource : NSObject
{
    struct RenderData _renderData;
    struct __CVBuffer *_imageBuffer;
    CIContext *_context;
    float _depthRange;
    float _depthOffset;
    id <MTLTexture> _sourceYTexture;
    id <MTLTexture> _sourceUVTexture;
    id <MTLTexture> _destinationYTexture;
    id <MTLTexture> _destinationUVTexture;
    id <MTLTexture> _sourceBlurredYTexture;
    id <MTLTexture> _sourceDepthTexture;
    double _depthBlurForegroundThreshold;
    id <MTLDevice> _device;
    struct __CVMetalTextureCache *_textureCache;
    struct SampleBufferMetadata _sampleBufferMetadata;
}

@property(readonly, nonatomic) struct __CVMetalTextureCache *textureCache; // @synthesize textureCache=_textureCache;
@property(readonly, nonatomic) id <MTLDevice> device; // @synthesize device=_device;
- (void).cxx_destruct;
@property(readonly, nonatomic) struct SampleBufferMetadata sampleBufferMetadata; // @synthesize sampleBufferMetadata=_sampleBufferMetadata;
@property(readonly, nonatomic) double depthBlurForegroundThreshold; // @synthesize depthBlurForegroundThreshold=_depthBlurForegroundThreshold;
@property(readonly, nonatomic) float depthOffset; // @synthesize depthOffset=_depthOffset;
@property(readonly, nonatomic) float depthRange; // @synthesize depthRange=_depthRange;
@property(readonly, nonatomic) id <MTLTexture> sourceDepthTexture; // @synthesize sourceDepthTexture=_sourceDepthTexture;
@property(readonly, nonatomic) id <MTLTexture> sourceBlurredYTexture; // @synthesize sourceBlurredYTexture=_sourceBlurredYTexture;
@property(readonly, nonatomic) id <MTLTexture> destinationUVTexture; // @synthesize destinationUVTexture=_destinationUVTexture;
@property(readonly, nonatomic) id <MTLTexture> destinationYTexture; // @synthesize destinationYTexture=_destinationYTexture;
@property(readonly, nonatomic) id <MTLTexture> sourceUVTexture; // @synthesize sourceUVTexture=_sourceUVTexture;
@property(readonly, nonatomic) id <MTLTexture> sourceYTexture; // @synthesize sourceYTexture=_sourceYTexture;
- (id)initWithRenderData:(struct RenderData)arg1 textureCache:(struct __CVMetalTextureCache *)arg2 device:(id)arg3;

@end


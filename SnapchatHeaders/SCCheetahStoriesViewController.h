//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <UIKit/UIViewController.h>

#import "SCCheetahDebugViewControllerDelegate-Protocol.h"
#import "SCCheetahStoriesAccessoryLoadingViewDelegate-Protocol.h"
#import "SCCheetahStoriesActionHandlerDelegate-Protocol.h"
#import "SCCheetahStoriesDataStoreDelegate-Protocol.h"
#import "SCCheetahStoriesScrollToBottomDetectorDelegate-Protocol.h"
#import "SCCheetahStoriesTabActionHandler-Protocol.h"
#import "SCDeepLinkableView-Protocol.h"
#import "SCOperaPresenterDelegate-Protocol.h"
#import "SCSearchCardContainerContentViewControlling-Protocol.h"
#import "SCSearchContentScrollViewProviding-Protocol.h"
#import "SCSearchEventListener-Protocol.h"
#import "SCSearchQueryResultControllerDelegate-Protocol.h"
#import "SCSearchUpdateListener-Protocol.h"
#import "SCShakeToReportDelegate-Protocol.h"
#import "SCStoriesContentViewControlling-Protocol.h"
#import "SCTimeProfilable-Protocol.h"
#import "SwipeView-Protocol.h"
#import "UICollectionViewDelegate-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"

@class NSArray, NSDate, NSString, SCCheetahStoriesActionHandler, SCCheetahStoriesDeeplinkHandler, SCCheetahStoriesQueryCoordinator, SCCheetahStoriesScrollToBottomDetector, SCCheetahStoriesTabActionHandler, SCCheetahStoriesView, SCHovaTabBarView, SCOperaPresenter, SCSearchCardContainerContentViewControllerContext, SCSearchEventListenerAnnouncer, SCSearchFriendProvider, SCSearchNetworkLogger, SCSearchQueryResultController, SCUserSession, UICollectionViewTransitionLayout, UIScrollView;
@protocol NavigationDelegate, SCHovaOverscrollDelegate, SCReplyDelegate, SCStartChatDelegate, SCStoriesContentViewControllingDelegate, UIScrollViewDelegate;

@interface SCCheetahStoriesViewController : UIViewController <UICollectionViewDelegate, SCSearchQueryResultControllerDelegate, SCCheetahStoriesScrollToBottomDetectorDelegate, SCCheetahStoriesActionHandlerDelegate, SCCheetahStoriesTabActionHandler, SCSearchEventListener, SCCheetahStoriesDataStoreDelegate, SCCheetahStoriesAccessoryLoadingViewDelegate, SCCheetahDebugViewControllerDelegate, SCTimeProfilable, UIGestureRecognizerDelegate, SCShakeToReportDelegate, SCOperaPresenterDelegate, SCSearchUpdateListener, SwipeView, SCDeepLinkableView, SCSearchCardContainerContentViewControlling, SCSearchContentScrollViewProviding, SCStoriesContentViewControlling>
{
    SCCheetahStoriesView *_cheetahStoriesView;
    SCOperaPresenter *_operaPresenter;
    SCUserSession *_userSession;
    SCSearchQueryResultController *_queryResultController;
    SCCheetahStoriesQueryCoordinator *_queryCoordinator;
    SCSearchEventListenerAnnouncer *_eventAnnouncer;
    SCCheetahStoriesActionHandler *_actionHandler;
    SCCheetahStoriesTabActionHandler *_tabActionHandler;
    SCCheetahStoriesDeeplinkHandler *_deeplinkHandler;
    SCSearchFriendProvider *_friendProvider;
    SCCheetahStoriesScrollToBottomDetector *_scrollToBottomDetector;
    _Bool _shouldReloadFreshData;
    _Bool _userInteractionInitiatedReloadInProgress;
    _Bool _isVisible;
    _Bool _isPresenting;
    NSArray *_displayedTabs;
    NSDate *_showedMoreViewTimestamp;
    CDUnknownBlockType _triggerReorderAfterThreshold;
    CDUnknownBlockType _blockUpdateAfterDataFetchThreshold;
    SCSearchNetworkLogger *_networkLogger;
    double _yOffsetBeforeScrolling;
    struct CGPoint _lastScrollOffset;
    double _lastScrollOffsetCapturedTime;
    UICollectionViewTransitionLayout *_transitionLayout;
    double _fromSelectedIndex;
    _Bool _isUpdatingLayout;
    long long _transitionDirection;
    long long _pendingLayoutUpdateState;
    unsigned long long _pendingFromTabIndexForTransition;
    unsigned long long _pendingToTabIndexForTransition;
    NSArray *_layoutForTabs;
    _Bool _isSubscribedStateDirty;
    _Bool _isFirstViewDidFullyAppear;
    _Bool _shouldSendQueryForNotification;
    SCSearchCardContainerContentViewControllerContext *_cardContainerContext;
    id <SCHovaOverscrollDelegate> _hovaOverscrollDelegate;
    id <UIScrollViewDelegate> _scrollingDelegate;
    id <SCStoriesContentViewControllingDelegate> _storiesContentViewControllerDelegate;
    id <NavigationDelegate> _navigationDelegate;
    id <SCReplyDelegate> _replyDelegate;
    id <SCStartChatDelegate> _startChatDelegate;
    UIViewController *_parentController;
}

+ (int)context;
+ (id)announcerIdentifier;
@property(nonatomic) __weak UIViewController *parentController; // @synthesize parentController=_parentController;
@property(nonatomic) __weak id <SCStartChatDelegate> startChatDelegate; // @synthesize startChatDelegate=_startChatDelegate;
@property(nonatomic) __weak id <SCReplyDelegate> replyDelegate; // @synthesize replyDelegate=_replyDelegate;
@property(nonatomic) __weak id <NavigationDelegate> navigationDelegate; // @synthesize navigationDelegate=_navigationDelegate;
@property(nonatomic) _Bool shouldSendQueryForNotification; // @synthesize shouldSendQueryForNotification=_shouldSendQueryForNotification;
@property(nonatomic) __weak id <SCStoriesContentViewControllingDelegate> storiesContentViewControllerDelegate; // @synthesize storiesContentViewControllerDelegate=_storiesContentViewControllerDelegate;
@property(nonatomic) __weak id <UIScrollViewDelegate> scrollingDelegate; // @synthesize scrollingDelegate=_scrollingDelegate;
@property(nonatomic) __weak id <SCHovaOverscrollDelegate> hovaOverscrollDelegate; // @synthesize hovaOverscrollDelegate=_hovaOverscrollDelegate;
@property(retain, nonatomic) SCSearchCardContainerContentViewControllerContext *cardContainerContext; // @synthesize cardContainerContext=_cardContainerContext;
- (void).cxx_destruct;
- (id)_tabViewModelForIndex:(unsigned long long)arg1;
- (void)_preparePlayableViewModels;
- (void)_prefetchFirstSnapMediaForVisibleCheetahStoriesIfNeccesary;
- (void)_resumeAllVideoPlaybackIfNeccesary;
- (void)_pauseAllVideoPlaybackIfNeccesary;
- (void)_twerk:(id)arg1;
- (void)_setUpdatingLayout:(_Bool)arg1;
- (void)_updatePendingLayoutIfNeeded;
- (void)_updatePendingLayoutIfPossible;
- (void)didSwipeUpOnLoadingView:(id)arg1 gestureRecognizer:(id)arg2;
- (void)didSelectLoadingView:(id)arg1;
- (_Bool)cheetahStoriesDataStoreShouldSetFreshStories:(id)arg1;
- (id)_eventsConfiguration;
- (void)_updateImpressionItems;
@property(readonly, nonatomic) UIScrollView *contentScrollView;
- (void)_startPageView;
- (void)cheetahStoriesTabActionHandler:(id)arg1 switchToTabIfPossible:(unsigned long long)arg2;
- (void)cheetahStoriesActionHandlerDidDismissStory:(id)arg1;
- (void)_handleBeginToDismissStoryWithIndexPath:(id)arg1 actionHandler:(id)arg2;
- (void)_handleDidStartToDisplayStoryWithIndexPath:(id)arg1;
- (void)cheetahStoriesActionHandler:(id)arg1 didChangeSubscribeState:(_Bool)arg2 forStory:(id)arg3;
- (unsigned long long)currentActiveTabForCheetahStoriesActionHandler:(id)arg1;
- (void)cheetahStoriesActionHandler:(id)arg1 willHideStory:(id)arg2;
- (void)cheetahStoriesActionHandler:(id)arg1 didBeginToDismissStoryWithIndexPath:(id)arg2;
- (void)cheetahStoriesActionHandler:(id)arg1 didStartToDisplayStoryWithIndexPath:(id)arg2;
- (void)viewDidAppearWithURL:(id)arg1 additionalInfo:(id)arg2;
- (void)_didTapStoriesRankingDebugButton;
- (void)_performUpdatesForNoReOrderThresholdTimer;
- (void)_setNoReOrderThresholdTimer;
- (void)_setDataFetchThresholdTimer;
- (void)_clearDataFetchThresholdTimer;
- (void)_clearHovaStoryBadge;
@property(readonly, nonatomic) SCHovaTabBarView *hovaTabBarView;
- (void)_stopPullToRefresh;
- (void)_didFinishLoading;
@property(readonly, nonatomic) float tabBarPercentDarkMode;
- (void)_releasePendingStories;
- (void)_fetchHeadStories;
- (void)_fetchTailStories;
- (void)_fetchFreshStoriesIfNeeded;
- (void)_fetchStoriesOnNotification;
- (void)_fetchStoriesForAllTabs;
- (void)_resetMoreStoriesWithAnimation:(_Bool)arg1;
- (void)_enableLoadFreshContentIfNeeded;
- (void)_disableLoadFreshContentIfNeeded;
- (void)_hideMoreStoriesButtonIfNeededWithAnimation:(_Bool)arg1;
- (void)_updateForMoreStoriesScreentimeMax;
- (void)_showMoreStoriesButtonWithAnimation:(_Bool)arg1;
- (void)_scrollToTopWithAnimation:(_Bool)arg1;
- (void)_showMoreStoriesButtonIfScrolledToTop:(id)arg1 animated:(_Bool)arg2;
- (void)_updateLayouts;
- (void)_updateTabsIfNeeded;
- (void)_handleScrollViewDidScrollWithScrollView:(id)arg1;
- (void)didTriggerEventWithEventName:(id)arg1 announcerIdentifier:(id)arg2 extraData:(id)arg3;
- (void)didUpdateWithAnnouncerIdentifier:(id)arg1;
- (void)removeListener:(id)arg1;
- (void)addListener:(id)arg1;
- (void)searchQueryResultControllerDidSkipUpdateQueryResult:(id)arg1;
- (id)presentingViewControllerForSearchQueryResultController:(id)arg1;
- (void)searchQueryResultController:(id)arg1 willUpdateResultForQuery:(id)arg2 fromQuery:(id)arg3;
- (_Bool)searchQueryResultControllerShouldReloadFreshResult:(id)arg1;
- (void)searchQueryResultControllerDidUpdateQueryResult:(id)arg1;
- (void)scrollToBottomDetector:(id)arg1 scrollViewWillReachBottom:(id)arg2;
- (void)_updatePreferredScreenEdgesDeferringSystemGestures;
- (void)statusBarTapped;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (id)collectionView:(id)arg1 transitionLayoutForOldLayout:(id)arg2 newLayout:(id)arg3;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (void)didTap:(id)arg1;
- (void)cheetahDebugViewControllerNeedsToDismiss:(id)arg1 animated:(_Bool)arg2;
- (void)operaPresenter:(id)arg1 didFinishViewingPlaylistGroupDataModel:(id)arg2 nextGroupDataModel:(id)arg3;
- (void)operaPresenter:(id)arg1 didBeginPlayingPlaylistGroupDataModel:(id)arg2;
- (void)operaPresenterDidTearDown:(id)arg1;
- (void)operaPresenterDidFinishDismissing:(id)arg1;
- (void)operaPresenterDidFailToPresent:(id)arg1;
- (void)operaPresenterWillBeginAnimatingToDismiss:(id)arg1;
- (void)operaPresenterDidCancelDismissing:(id)arg1;
- (void)operaPresenterWillBeginDismissing:(id)arg1 transitionAnimator:(id)arg2;
- (void)operaPresenterDidFinishPresenting:(id)arg1 transitionAnimator:(id)arg2;
- (void)operaPresenterWillBeginPresenting:(id)arg1 transitionAnimator:(id)arg2;
- (void)_showOrangeViewer;
- (id)navigationBarButtonItems;
- (void)refreshStateDidChange:(long long)arg1;
@property(readonly, nonatomic) _Bool isViewingStory;
- (_Bool)isLoading;
- (void)refreshByPullToRefresh;
- (_Bool)shouldEnableTabSwitchGesture;
- (void)_refreshTabByForceRefresh;
- (void)cardContainerTabDidSwitchFromIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2 gesture:(long long)arg3;
- (void)cardContainerTabDidUpdateInteractiveChangeProgress:(double)arg1;
- (void)cardContainerTabDidCancelInteractiveChange;
- (void)cardContainerTabDidFinishInteractiveChange;
- (void)cardContainerTabWillStartInteractiveChangeFromSelectedIndex:(unsigned long long)arg1 toIndex:(unsigned long long)arg2;
- (double)timeBeforeReturningToCamera;
- (_Bool)shouldPopToRootViewController;
- (unsigned long long)preferredScreenEdgesDeferringSystemGestures;
- (_Bool)prefersStatusBarHidden;
- (long long)preferredStatusBarStyle;
- (void)viewWillLayoutSubviews;
- (void)viewDidLoad;
- (void)loadView;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillResignActive:(id)arg1;
- (void)dealloc;
- (void)resumePlayback;
- (void)pausePlayback;
- (void)tabBarTriggeredWithAction:(long long)arg1;
- (void)viewDidSwipeOut;
- (void)viewDidSwipeIn;
- (void)viewDidPartiallyDisappear;
- (void)viewDidFullyAppear;
- (id)initWithUserSession:(id)arg1 navigationDelegate:(id)arg2 replyDelegate:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


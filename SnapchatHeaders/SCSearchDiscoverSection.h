//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "SCSearchCarouselContainerCollectionViewCellDelegate-Protocol.h"
#import "SCSearchCollectionViewSection-Protocol.h"
#import "SCSearchEventAnnouncing-Protocol.h"
#import "SCSearchEventListener-Protocol.h"
#import "SCTilesFilterDelegate-Protocol.h"

@class FBKVOController, NSArray, NSDictionary, NSString, SCDiscoverTilesFilter, SCSearchCollectionViewSectionUpdateModel, SCSearchEventListenerAnnouncer, SCSearchQuery, SCSearchQueryStateAwareSupplementaryViewProvider, SCTilesOrganizer;
@protocol OS_dispatch_queue, SCSearchCollectionViewSectionDelegate, SCSearchIntentHandler;

@interface SCSearchDiscoverSection : NSObject <SCSearchCarouselContainerCollectionViewCellDelegate, SCTilesFilterDelegate, SCSearchEventListener, SCSearchCollectionViewSection, SCSearchEventAnnouncing>
{
    NSDictionary *_tilesByIds;
    NSArray *_carouselContainerCellModels;
    SCSearchEventListenerAnnouncer *_eventAnnouncer;
    SCDiscoverTilesFilter *_discoverTilesFilter;
    SCSearchQuery *_currentQuery;
    SCTilesOrganizer *_tilesOrganizer;
    FBKVOController *_kvoController;
    NSObject<OS_dispatch_queue> *_viewModelUpdateQueue;
    SCSearchQueryStateAwareSupplementaryViewProvider *_queryStateAwareSupplementaryProvider;
    SCSearchCollectionViewSectionUpdateModel *_sectionUpdateModel;
    id <SCSearchCollectionViewSectionDelegate> _delegate;
    id <SCSearchIntentHandler> _intentHandler;
    long long _dataLoadingStatus;
}

+ (id)announcerIdentifier;
@property(nonatomic) long long dataLoadingStatus; // @synthesize dataLoadingStatus=_dataLoadingStatus;
@property(nonatomic) __weak id <SCSearchIntentHandler> intentHandler; // @synthesize intentHandler=_intentHandler;
@property(nonatomic) __weak id <SCSearchCollectionViewSectionDelegate> delegate; // @synthesize delegate=_delegate;
@property(copy, nonatomic) SCSearchCollectionViewSectionUpdateModel *sectionUpdateModel; // @synthesize sectionUpdateModel=_sectionUpdateModel;
- (void).cxx_destruct;
- (void)_announceUpdateWithIndexPaths:(id)arg1 viewModels:(id)arg2;
- (void)_announceVisibleCellForIndexPaths:(id)arg1 viewModels:(id)arg2;
- (void)_announceSearchResultForSection;
- (id)_loggingInfoForViewModel:(id)arg1 action:(long long)arg2 indexPath:(id)arg3;
- (void)_updateSection;
- (void)_reloadCarouselWithViewModels:(id)arg1;
- (void)_updateSectionWithViewModels:(id)arg1;
- (void)_handlePublisherProfileWithViewModel:(id)arg1 tileStory:(id)arg2 atIndexPath:(id)arg3;
- (void)_handlePlayMediaActionWithViewModel:(id)arg1 tileStory:(id)arg2 sourceView:(id)arg3 atIndexPath:(id)arg4;
- (void)_refreshViewModelForObservation;
- (void)_observeTiles;
- (void)_refreshViewModelsShouldResetObservation:(_Bool)arg1;
- (void)tilesFilter:(id)arg1 didUpdateFilteredTiles:(id)arg2 fromTilesUpdateOnly:(_Bool)arg3;
- (void)searchCarouselContainerCollectionViewCell:(id)arg1 willDisplayAtIndexPath:(id)arg2 scrolled:(_Bool)arg3;
- (void)searchCarouselContainerCollectionViewCell:(id)arg1 didTriggerActionOnItemAtIndexPath:(id)arg2 withActionModel:(id)arg3 fromSourceView:(id)arg4;
- (void)searchCarouselContainerCollectionViewCell:(id)arg1 didTapItemAtIndexPath:(id)arg2;
- (id)sectionInfo;
- (void)collectionViewWillDisplayCell:(id)arg1 atIndexInSection:(unsigned long long)arg2;
- (struct CGSize)sizeForItemAtIndexInSection:(unsigned long long)arg1 withWidth:(double)arg2;
- (id)cellForItemAtIndexInSection:(unsigned long long)arg1;
- (unsigned long long)numberOfCellsInSection;
- (id)reuseCellClassesByIdentifiers;
- (void)applyConfiguration:(id)arg1;
- (void)tearDown;
- (void)setUp;
- (id)supplementaryViewProvider;
- (id)init;
- (void)didTriggerEventWithEventName:(id)arg1 announcerIdentifier:(id)arg2 extraData:(id)arg3;
- (void)removeListener:(id)arg1;
- (void)addListener:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSNumber, SCLagunaCBCentralManager, SCLagunaCache, SCLagunaDeviceManager, SCLagunaDeviceNamer, SCLagunaDeviceStore, SCLagunaEventListenerAnnouncer, SCLagunaPairingManager, SCLagunaWifiSyncMonitor;
@protocol SCLagunaCBCentralManagerEventListener, SCLagunaCrashLogger, SCLagunaLibraryLogger, SCLagunaProfile;

@interface SCLagunaManager : NSObject
{
    NSNumber *_overrideBluetoothOn;
    id <SCLagunaProfile> _lagunaProfile;
    SCLagunaDeviceManager *_deviceManager;
    SCLagunaEventListenerAnnouncer *_announcer;
    SCLagunaCache *_cache;
    SCLagunaPairingManager *_pairingManager;
    id <SCLagunaCrashLogger> _crashLogger;
    id <SCLagunaLibraryLogger> _analyticsLogger;
    id <SCLagunaCBCentralManagerEventListener> _centralManagerLogger;
    SCLagunaCBCentralManager *_centralManager;
    SCLagunaDeviceStore *_deviceStore;
    SCLagunaDeviceNamer *_namer;
    SCLagunaWifiSyncMonitor *_wifiSyncMonitor;
    unsigned long long _adaptiveBrightnessConfig;
}

+ (void)clearCacheExceptUserId:(id)arg1;
@property(nonatomic) unsigned long long adaptiveBrightnessConfig; // @synthesize adaptiveBrightnessConfig=_adaptiveBrightnessConfig;
@property(retain, nonatomic) SCLagunaWifiSyncMonitor *wifiSyncMonitor; // @synthesize wifiSyncMonitor=_wifiSyncMonitor;
@property(retain, nonatomic) SCLagunaDeviceNamer *namer; // @synthesize namer=_namer;
@property(retain, nonatomic) SCLagunaDeviceStore *deviceStore; // @synthesize deviceStore=_deviceStore;
@property(retain, nonatomic) SCLagunaCBCentralManager *centralManager; // @synthesize centralManager=_centralManager;
@property(retain, nonatomic) id <SCLagunaCBCentralManagerEventListener> centralManagerLogger; // @synthesize centralManagerLogger=_centralManagerLogger;
@property(retain, nonatomic) id <SCLagunaLibraryLogger> analyticsLogger; // @synthesize analyticsLogger=_analyticsLogger;
@property(retain, nonatomic) id <SCLagunaCrashLogger> crashLogger; // @synthesize crashLogger=_crashLogger;
@property(retain, nonatomic) SCLagunaPairingManager *pairingManager; // @synthesize pairingManager=_pairingManager;
@property(retain, nonatomic) SCLagunaCache *cache; // @synthesize cache=_cache;
@property(retain, nonatomic) SCLagunaEventListenerAnnouncer *announcer; // @synthesize announcer=_announcer;
@property(retain, nonatomic) SCLagunaDeviceManager *deviceManager; // @synthesize deviceManager=_deviceManager;
@property(retain, nonatomic) id <SCLagunaProfile> lagunaProfile; // @synthesize lagunaProfile=_lagunaProfile;
@property(retain, nonatomic) NSNumber *overrideBluetoothOn; // @synthesize overrideBluetoothOn=_overrideBluetoothOn;
- (void).cxx_destruct;
- (void)removeListener:(id)arg1;
- (void)addListener:(id)arg1;
- (double)ambientData;
- (double)adaptiveBrightnessValue:(double)arg1 ambientBrightnessFromLaguna:(double)arg2;
- (_Bool)isContentPartOfCurrentTransferBatch:(id)arg1 component:(unsigned long long)arg2;
- (void)deleteContentWithUUIDs:(id)arg1;
- (void)setTransferPriorityContext:(unsigned long long)arg1 contentUUIDs:(id)arg2;
- (id)currentTransferSession;
- (id)untransferredContentForContentComponent:(unsigned long long)arg1 device:(id)arg2;
- (id)transferringContentForContentComponent:(unsigned long long)arg1;
- (id)content;
- (void)cancelWifiConnection;
- (void)startConnectingWifiForHDFlow:(id)arg1 ssidPassword:(id)arg2 hdContentUUIDs:(id)arg3;
- (void)setMinimumRequiredFirmwareVersion:(id)arg1 forHardwareWithMajorNumber:(unsigned long long)arg2;
- (void)cancelFirmwareUpdate:(id)arg1;
- (void)requestFirmwareUpdate:(id)arg1 version:(id)arg2 targetDigest:(id)arg3 windowStart:(id)arg4 windowLength:(double)arg5 userInfo:(id)arg6;
- (void)requestFirmwareUpdate:(id)arg1 version:(id)arg2 digest:(id)arg3;
- (void)revertFirmwareBinary:(id)arg1;
- (void)applyFirmwareUpdatePatch:(id)arg1 filepath:(id)arg2;
- (void)startFirmwareUpdate:(id)arg1 updateIsActive:(_Bool)arg2;
- (void)requestLastCloudUploadTime:(id)arg1;
- (void)setWifiAPList:(id)arg1 forDevice:(id)arg2 successBlock:(CDUnknownBlockType)arg3 failureBlock:(CDUnknownBlockType)arg4;
- (void)requestWifiAPList:(id)arg1;
- (void)sendAuthzCodeForDevice:(id)arg1 authzCode:(id)arg2 codeVerifier:(id)arg3 redirectUri:(id)arg4;
- (void)requestClientId:(id)arg1;
- (void)cancelShareWifiCredentials:(id)arg1;
- (void)shareWifiCredentials:(id)arg1;
- (long long)bluetoothState;
- (void)clearAllContentOnDevice:(id)arg1 successBlock:(CDUnknownBlockType)arg2 failureBlock:(CDUnknownBlockType)arg3;
- (void)resetDevice:(id)arg1;
- (void)forgetDevice:(id)arg1;
- (id)pairingDeviceEmoji;
- (id)pairingDeviceNameWithoutEmoji;
- (void)setPairingDeviceName:(id)arg1;
- (id)devices;
- (id)reconcileDevicesFromServer:(id)arg1;
- (void)cancelSearchForNewDevices;
- (void)startFallbackSearchWithUserDisplayName:(id)arg1;
- (void)startSearchForNewDevicesWithUserDisplayName:(id)arg1 filterRSSI:(_Bool)arg2;
- (void)confirmUnpairPreviousDevice;
- (void)setCandidateCode:(id)arg1;
- (void)renameDevice:(id)arg1 newName:(id)arg2;
- (void)dealloc;
- (id)initWithLagunaProfile:(id)arg1 crashLogger:(id)arg2 analyticsLogger:(id)arg3;
- (void)unpairDevicesWithError;
- (void)addRefreshContentTasks;
@property(retain, nonatomic) NSNumber *customAdaptiveBrightnessConfig; // @dynamic customAdaptiveBrightnessConfig;
@property(nonatomic) long long mockCoulombCounterTemperature; // @dynamic mockCoulombCounterTemperature;
@property(nonatomic) long long mockDeviceBatteryLevel; // @dynamic mockDeviceBatteryLevel;
- (void)requestCurrentDeviceLogs:(CDUnknownBlockType)arg1;
- (void)setStartBtVideoRecording:(_Bool)arg1;
- (_Bool)disableBluetooth;
- (void)setSavePictureToCameraRoll:(_Bool)arg1;
@property(nonatomic) _Bool hevcEnabled;
@property(nonatomic) _Bool hdOnlyEnabled;
@property(nonatomic) _Bool malibuEnabled;
- (void)setAutoStartSpecsWifi:(_Bool)arg1;
- (void)setEnableProdAuthentication:(_Bool)arg1;
- (void)setDisableEncryption:(_Bool)arg1;
- (void)setDisableBluetooth:(_Bool)arg1;
- (void)setEnableMultipleDevices:(_Bool)arg1;
- (void)setRestrictRSSIWhenScanning:(_Bool)arg1;
- (id)currentTransferBatchID;
- (double)lastTransferSpeed;
- (id)deviceManagerStateShortCode;
- (id)deviceStateShortCode:(id)arg1;
- (id)device0StateShortCode;
- (id)pairingStateShortCode;
- (void)mockSpectaclesTransferInterrupted;
- (void)mockFoundSpectaclesBackupPairing;
- (void)mockSpectaclesContentDownloading;
- (void)mockSpectaclesTransferSessionCompleteSdVideo;
- (void)mockSpectaclesTransferSessionCompleteHdVideo;
- (void)mockSpectaclesPairingComplete;
- (void)mockFoundSpectaclesRecording;
- (void)startFactoryFallbackSearchWithUserDisplayName:(id)arg1;
- (void)setTransferDisabled:(_Bool)arg1 forDevice:(id)arg2;
- (void)prepShippingStateForDevice:(id)arg1 successBlock:(CDUnknownBlockType)arg2 failureBlock:(CDUnknownBlockType)arg3;

@end


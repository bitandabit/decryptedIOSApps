//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "SCChatBaseViewController.h"

#import "SCActionMenuViewControllerDelegate-Protocol.h"
#import "SCAddToGroupViewControllerDelegate-Protocol.h"
#import "SCBlockedExceptionAlertControllerDelegate-Protocol.h"
#import "SCChatCallingAccessoryListener-Protocol.h"
#import "SCChatCellGestureDelegate-Protocol.h"
#import "SCChatConversationUpdaterListener-Protocol.h"
#import "SCChatDrawerSender-Protocol.h"
#import "SCChatFullscreenMediaChatTableCellDelegate-Protocol.h"
#import "SCChatHamburgerTableSectionFriendsDelegate-Protocol.h"
#import "SCChatHamburgerTableSectionGroupSettingDataSource-Protocol.h"
#import "SCChatHamburgerTableSectionGroupSettingDelegate-Protocol.h"
#import "SCChatHamburgerTableSectionGroupStoryDelegate-Protocol.h"
#import "SCChatHamburgerTableSectionOneOnOneSettingDataSource-Protocol.h"
#import "SCChatHamburgerTableSectionOneOnOneSettingDelegate-Protocol.h"
#import "SCChatInputControllerDelegate-Protocol.h"
#import "SCChatStoryDelegate-Protocol.h"
#import "SCChatTableViewV3PresenterDelegate-Protocol.h"
#import "SCChatViewControllerV3Protocol-Protocol.h"
#import "SCChatViewHeaderDataSource-Protocol.h"
#import "SCFriendEventListener-Protocol.h"
#import "SCGroupManagerListener-Protocol.h"
#import "SCHeaderDelegate-Protocol.h"
#import "SCOperaPresenterDelegate-Protocol.h"
#import "SCReplyDelegate-Protocol.h"
#import "SCS2RStackDebuggable-Protocol.h"
#import "SCSnapCashControllerDelegate-Protocol.h"
#import "SCSnapPlayContainer-Protocol.h"
#import "SCSnapReplayControllerV3Delegate-Protocol.h"
#import "SCSnapReplayControllerV3Provider-Protocol.h"
#import "SCTPresencePillTapListener-Protocol.h"
#import "SCTimeProfilable-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"
#import "UINavigationControllerDelegate-Protocol.h"
#import "UIScrollViewDelegate-Protocol.h"

@class NSMutableArray, NSString, SCActionMenuViewController, SCActionSheetCoordinator, SCAppNotification, SCBaseMediaFullScreenView, SCBaseMediaOperaPresenter, SCBitmojiAvatarPickerViewController, SCBlockedExceptionAlertViewController, SCChatBaseTableView, SCChatHamburgerTableSectionFriends, SCChatHamburgerTableSectionGroupStory, SCChatTableViewV3Delegate, SCChatTableViewV3Presenter, SCChatV3MessageReleaser, SCChatViewHeaderV3, SCChatViewLifeCycleListenerAnnouncer, SCContextOperaPlaylistPlugin, SCCustomVolumeController, SCFeedVerticalPresenter, SCMaxGroupSizeAlertView, SCModalHamburgerRootViewController, SCOperaPerformanceTrackingPlugin, SCOperaPlaylistCameraPlugin, SCOperaPlaylistNotificationOptInPlugin, SCOperaPlaylistStoriesPlugin, SCOperaPresenter, SCSearchStoriesPresenter, SCSnapCashController, SCSnapReplayControllerV3, SCStoriesReplayManager, SCUserSession, UILongPressGestureRecognizer, UIPanGestureRecognizer, UITapGestureRecognizer, UIView, UIViewController, UIWindow;
@protocol NavigationDelegate, SCAddToGroupViewControllerProtocol, SCChatConversationManager, SCChatConversationViewModel, SCChatStoryIconUpdater, SCReplyDelegate, SCStartChatDelegate, SCV3BubbleChatController;

@interface SCChatViewControllerV3 : SCChatBaseViewController <SCActionMenuViewControllerDelegate, SCChatViewHeaderDataSource, SCGroupManagerListener, SCChatCallingAccessoryListener, SCSnapCashControllerDelegate, SCSnapReplayControllerV3Delegate, SCChatFullscreenMediaChatTableCellDelegate, SCChatInputControllerDelegate, SCChatCellGestureDelegate, SCSnapReplayControllerV3Provider, UIScrollViewDelegate, SCHeaderDelegate, SCSnapPlayContainer, SCTimeProfilable, UIGestureRecognizerDelegate, SCChatDrawerSender, SCBlockedExceptionAlertControllerDelegate, SCAddToGroupViewControllerDelegate, UINavigationControllerDelegate, SCChatTableViewV3PresenterDelegate, SCTPresencePillTapListener, SCChatStoryDelegate, SCOperaPresenterDelegate, SCChatHamburgerTableSectionGroupSettingDataSource, SCChatHamburgerTableSectionGroupSettingDelegate, SCChatHamburgerTableSectionOneOnOneSettingDelegate, SCChatHamburgerTableSectionOneOnOneSettingDataSource, SCChatHamburgerTableSectionFriendsDelegate, SCChatHamburgerTableSectionGroupStoryDelegate, SCFriendEventListener, SCReplyDelegate, SCChatViewControllerV3Protocol, SCChatConversationUpdaterListener, SCS2RStackDebuggable>
{
    double _lastYOffset;
    SCUserSession *_userSession;
    id <SCChatConversationViewModel> _conversationViewModel;
    id <SCChatConversationManager> _conversationManager;
    SCSnapCashController *_cashController;
    SCChatV3MessageReleaser *_releaser;
    SCChatTableViewV3Presenter *_tableViewPresenter;
    SCActionSheetCoordinator *_actionSheetCoordinator;
    SCActionMenuViewController *_actionMenuVC;
    _Bool _actionMenuShown;
    _Bool _actionMenuOpening;
    SCBitmojiAvatarPickerViewController *_avatarPickerVC;
    UIView *_backgroundTintView;
    UIViewController<SCAddToGroupViewControllerProtocol> *_addToGroupVC;
    SCFeedVerticalPresenter *_verticalPresenter;
    UITapGestureRecognizer *_tapGestureRecognizer;
    SCBlockedExceptionAlertViewController *_blockedExceptionAlertVC;
    SCMaxGroupSizeAlertView *_maxGroupSizeAlertView;
    _Bool _refreshBitmojisOnAccessoryChange;
    NSString *_lastOneOnOneRecipient;
    SCBaseMediaOperaPresenter *_operaPresenter;
    NSMutableArray *_conversationUpdateListeners;
    SCSearchStoriesPresenter *_searchStoriesPresenter;
    id <SCChatStoryIconUpdater> _chatStoryIconUpdater;
    SCOperaPresenter *_storiesOperaPresenter;
    SCOperaPlaylistStoriesPlugin *_storiesPlugin;
    SCOperaPlaylistNotificationOptInPlugin *_optInPlugin;
    SCOperaPlaylistCameraPlugin *_cameraPlugin;
    SCOperaPerformanceTrackingPlugin *_performanceTrackingPlugin;
    SCContextOperaPlaylistPlugin *_contextPlugin;
    SCStoriesReplayManager *_storiesReplayManager;
    SCChatHamburgerTableSectionFriends *_friendsSection;
    SCChatHamburgerTableSectionGroupStory *_groupStorySection;
    long long _cameraPageSource;
    unsigned long long _deeplinkType;
    _Bool _pendingOpenHamburger;
    SCSnapReplayControllerV3 *_replayController;
    SCChatViewLifeCycleListenerAnnouncer *_lifeCycleAnnouncer;
    id <SCV3BubbleChatController> _bubbleChatController;
    NSString *_activeConversationId;
    SCModalHamburgerRootViewController *_modalHamburgerViewController;
    SCBaseMediaFullScreenView *_baseMediaFullScreenView;
    UIWindow *_mediaFullScreenWindow;
    SCCustomVolumeController *_customVolumeController;
    UILongPressGestureRecognizer *_longPressGestureRecognizer;
    UIPanGestureRecognizer *_panGestureRecognizer;
    double _snapViewingChatOffset;
    SCChatTableViewV3Delegate *_tableDelegate;
    SCChatBaseTableView *_tableView;
}

+ (int)context;
+ (id)pageViewName;
@property(retain, nonatomic) SCChatBaseTableView *tableView; // @synthesize tableView=_tableView;
@property(retain, nonatomic) SCChatTableViewV3Delegate *tableDelegate; // @synthesize tableDelegate=_tableDelegate;
@property(nonatomic) double snapViewingChatOffset; // @synthesize snapViewingChatOffset=_snapViewingChatOffset;
@property(retain, nonatomic) UIPanGestureRecognizer *panGestureRecognizer; // @synthesize panGestureRecognizer=_panGestureRecognizer;
@property(retain, nonatomic) UILongPressGestureRecognizer *longPressGestureRecognizer; // @synthesize longPressGestureRecognizer=_longPressGestureRecognizer;
@property(retain, nonatomic) SCCustomVolumeController *customVolumeController; // @synthesize customVolumeController=_customVolumeController;
@property(retain, nonatomic) UIWindow *mediaFullScreenWindow; // @synthesize mediaFullScreenWindow=_mediaFullScreenWindow;
@property(retain, nonatomic) SCBaseMediaFullScreenView *baseMediaFullScreenView; // @synthesize baseMediaFullScreenView=_baseMediaFullScreenView;
@property(retain, nonatomic) SCModalHamburgerRootViewController *modalHamburgerViewController; // @synthesize modalHamburgerViewController=_modalHamburgerViewController;
@property(readonly, copy, nonatomic) NSString *activeConversationId; // @synthesize activeConversationId=_activeConversationId;
- (void)setBubbleChatController:(id)arg1;
- (void)setLifeCycleAnnouncer:(id)arg1;
- (id)lifeCycleAnnouncer;
- (void).cxx_destruct;
- (void)replayControllerWillDisplayAlertView:(id)arg1;
- (void)replayControllerDidDismissAlertView:(id)arg1;
- (void)replayControllerConsumedRemainingCredits:(id)arg1 onSnap:(id)arg2 inConversation:(id)arg3;
- (void)_didBlockFriend;
- (id)blockedExceptionAlertViewController;
- (void)friendActionDidFail:(unsigned long long)arg1;
- (void)friendActionDidStart:(unsigned long long)arg1;
- (void)suggestedFriendsDidUpdate:(id)arg1 updateType:(unsigned long long)arg2 context:(id)arg3;
- (void)outgoingFriendsDidUpdate:(id)arg1 updateType:(unsigned long long)arg2 context:(id)arg3;
- (void)incomingFriendsDidUpdate:(id)arg1 updateType:(unsigned long long)arg2 context:(id)arg3;
- (void)friendsInfoDidUpdate:(id)arg1 infoType:(unsigned long long)arg2;
- (_Bool)replyingToStoryWithChat;
- (void)didFollowThrough;
- (void)replyWithParameter:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)hamburgerTableSectionGroupStoryAskedToOpenCamera:(id)arg1;
- (void)hamburgerTableSectionFriends:(id)arg1 askedToSwitchToChat:(id)arg2 deepLinkURL:(id)arg3;
- (void)hamburgerTableSectionOneOnOneSettingDidRemoveFriend:(id)arg1;
- (void)hamburgerTableSectionOneOnOneSettingDidBlockFriend:(id)arg1;
- (void)gotoSendMeSnapsSettingsViewWithAnimation:(_Bool)arg1;
- (void)dismissActionMenu:(_Bool)arg1;
- (id)messageViewModelWithMessageId:(id)arg1;
- (id)currentGroupForGroupConversation;
- (void)performGesture:(long long)arg1 atIndexPath:(id)arg2 selectedIndex:(unsigned long long)arg3;
- (void)_setShouldAnimateOnSave:(_Bool)arg1 forIndexPath:(id)arg2;
- (void)_batchToggleSaveForStackedViewModel:(id)arg1;
- (void)saveItemAtIndexPath:(id)arg1 withSelectedIndex:(unsigned long long)arg2;
- (_Bool)isFullScreenPlayerShown;
- (void)updateTableContentInset:(double)arg1;
- (void)chatInputController:(id)arg1 callingAccessorySelected:(unsigned long long)arg2 previouslySelected:(unsigned long long)arg3;
- (id)searchStoriesPresenter;
- (void)_presentChatCards;
- (id)operaPresenter;
- (void)didGrantBlockExceptionForGroup:(id)arg1;
- (void)_updateFriendmojiInChatIfNecessary;
- (void)_updateBitmojiPackageForConversation:(id)arg1 lastParticipant:(id)arg2;
- (void)_updateGroupFriendmojiImmediately:(_Bool)arg1;
- (void)_updateFriendmojiIfNecessary;
- (void)_updateSnapchatterTableCells;
- (void)friendInfoDidChange:(id)arg1;
- (void)didCreateGroupOnServerWithId:(id)arg1 initialSojuMischief:(id)arg2;
- (void)didJoinGroupWithId:(id)arg1;
- (void)didBeginLeavingGroupWithId:(id)arg1;
- (void)didChangeInfoForGroupWithId:(id)arg1;
- (void)didFinishLoadingGroups;
- (void)leavePreviewMode:(_Bool)arg1;
- (void)enterPreviewMode;
- (void)showMaxGroupSizeAlert;
- (void)navigateToChatViewWithGroupId:(id)arg1;
- (void)didSendSnapInViewController:(id)arg1;
- (void)navigateToChatViewWithFriend:(id)arg1 deepLinkURL:(id)arg2 viewController:(id)arg3;
- (void)didPressMischiefConfirmationButton:(id)arg1 viewController:(id)arg2;
- (void)dismissViewControllerAnimated:(_Bool)arg1 viewController:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)restoreViewAfterSideMenuDisappear;
- (void)prepareSideMenuAppear;
- (id)navigationController:(id)arg1 animationControllerForOperation:(long long)arg2 fromViewController:(id)arg3 toViewController:(id)arg4;
- (void)didPressAddToGroupButtonInChatBurger;
- (void)didUpdateGroup:(id)arg1;
- (void)goRightWithAnimation:(_Bool)arg1;
- (void)presenceViewPressedForUsername:(id)arg1;
- (_Bool)doNotDisturb;
- (id)chatRecipientUsername;
- (id)currentGroup;
- (id)activeGroupId;
- (struct CGRect)_iconViewRectForIndexPath:(id)arg1;
- (struct CGRect)iconViewRectForSnap:(id)arg1;
- (_Bool)tableIsFadedOut;
- (struct CGRect)_screenFrameExcludingHeader;
- (struct CGRect)mediaBoundingFrame;
- (_Bool)isPlayingSearchShare;
- (_Bool)isPlayingNYCShare;
- (_Bool)isPlayingStoryShare;
- (_Bool)isPlayingSnap;
- (_Bool)isSendingOrReceivingAudioOrVideo;
- (void)hideCustomVolumeView;
- (void)showCustomVolumeViewIgnoringNextVolumeChange:(_Bool)arg1;
- (void)mediaDidDismissFullscreen;
- (void)mediaDidGoFullscreen:(_Bool)arg1;
- (void)mediaWillGoFullscreen;
- (void)didReceiveBitmojiInChat:(id)arg1 stickerId:(id)arg2;
- (_Bool)_isOneOnOneConversationActiveForConversationId:(id)arg1;
- (void)didShowPendingDisplayForMessageId:(id)arg1 conversationId:(id)arg2;
- (void)didShowCompleteDisplayForMessageId:(id)arg1 conversationId:(id)arg2;
- (void)didSelectPreserveMessageForMessageId:(id)arg1 conversationId:(id)arg2;
- (void)_retryFailedMessageWithMessageId:(id)arg1 conversationId:(id)arg2;
- (void)didRequestRetryFailedMessage:(id)arg1;
- (void)didRequestStateUpdateForMessageCell:(id)arg1;
- (void)enableTableViewInteractionAfterChatNotesRecording;
- (void)disableTableViewInteractionBeforeChatNotesRecording;
- (void)sendVideoNoteWithData:(id)arg1 duration:(double)arg2;
- (void)sendAudioNoteWithData:(id)arg1 duration:(double)arg2;
- (void)_prepareMediaData:(id)arg1 withMediaDrawerMedia:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)_sendBatchedMediaDrawerMedia:(id)arg1 fromPosition:(unsigned long long)arg2;
- (void)prepareMedia:(id)arg1 withMediaDrawerMedia:(id)arg2 atIndex:(unsigned long long)arg3;
- (void)sendMediaDrawerMedia:(id)arg1 fromLocation:(CDStruct_1dee9796)arg2;
- (void)sendSticker:(id)arg1 fromPack:(id)arg2 fromPosition:(unsigned long long)arg3 fromSource:(long long)arg4;
- (void)removeLifeCycleListener:(id)arg1;
- (void)addLifeCycleListener:(id)arg1;
- (unsigned long long)supportedInterfaceOrientations;
- (id)_messageViewModelForIndexPath:(id)arg1;
- (id)_messageViewModelForCell:(id)arg1;
- (void)userDidScreenRecord;
- (void)userDidTakeScreenshot;
- (void)sccpConnectionStatusChanged;
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;
- (void)didDismissAlertView;
- (void)willDisplayAlertView;
- (long long)sourceViewType;
- (void)_updateGroupNameInHeader;
- (void)didDismissBackgroundTintView:(id)arg1;
- (id)backgroundTintView;
- (void)headerTextFieldTextEditingDidBegin;
- (void)headerTextFieldTextEditingDidEnd;
- (id)_firstStoryToReplayForFriendStories:(id)arg1 viewLocation:(long long)arg2;
- (id)_currentFriendStoriesDisplaying;
- (id)_chatStoryIconUpdaterForViewLocation:(long long)arg1;
- (void)operaPresenter:(id)arg1 didFinishViewingPlaylistGroupDataModel:(id)arg2 nextGroupDataModel:(id)arg3;
- (void)operaPresenter:(id)arg1 didBeginPlayingPlaylistGroupDataModel:(id)arg2;
- (void)operaPresenterDidTearDown:(id)arg1;
- (void)operaPresenterDidFinishDismissing:(id)arg1;
- (void)operaPresenterDidFailToPresent:(id)arg1;
- (void)operaPresenterWillBeginAnimatingToDismiss:(id)arg1;
- (void)operaPresenterDidCancelDismissing:(id)arg1;
- (void)operaPresenterWillBeginDismissing:(id)arg1 transitionAnimator:(id)arg2;
- (void)operaPresenterDidFinishPresenting:(id)arg1 transitionAnimator:(id)arg2;
- (void)operaPresenterWillBeginPresenting:(id)arg1 transitionAnimator:(id)arg2;
- (id)storiesReplayManager;
- (void)_tapToLoadFriendStories:(id)arg1 viewingType:(long long)arg2 viewLocation:(long long)arg3;
- (void)didTapToViewStoryForFriendStories:(id)arg1 viewingType:(long long)arg2 viewLocation:(long long)arg3;
- (_Bool)shouldShowChatStoryHeader;
- (void)_cleanupHamburger;
- (id)presenceController;
- (void)leftButtonPressed;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (void)_tapToLoadMediaViewModel:(id)arg1;
- (void)_tapToLoadReplyMediaViewModel:(id)arg1;
- (_Bool)_replyViewModelNeedsLoading:(id)arg1;
- (void)onCellTapped:(id)arg1 cell:(id)arg2;
- (void)productViewControllerDidFinish:(id)arg1;
- (void)didTapAddButtonForSnapchatter:(id)arg1;
- (void)presentMiniProfileForSnapchatter:(id)arg1 addSource:(long long)arg2;
- (void)didTapDeepLinkWithUrl:(id)arg1 additionalInfo:(id)arg2;
- (void)didLongPressOnMessageViewModel:(id)arg1 cell:(id)arg2;
- (void)iTunesLinkOpenedWithLinkAttribute:(id)arg1;
- (void)stackedTableViewCellDidFinishPlayingNoteWithMessageId:(id)arg1;
- (id)_stackedCellIndexPathForViewModel:(id)arg1;
- (void)stackedTableViewCell:(id)arg1 didSelectIndex:(unsigned long long)arg2 viewModel:(id)arg3;
- (void)textTableViewCellDidSelectCashLabelWithCell:(id)arg1;
- (void)friendmojiAvatarPickerClosedWithFriendmojiType:(long long)arg1 selectedStickerId:(id)arg2;
- (_Bool)showFriendmojiHintWithTargetView:(id)arg1 delegate:(id)arg2;
- (void)dismissAvatarPicker;
- (_Bool)showAvatarPickerWithBitmojiUsers:(id)arg1 targetView:(id)arg2 delegate:(id)arg3;
- (void)didReturnFromCameraWithoutSendingSnap;
- (void)didAttemptToSendMessage;
- (void)didPressSnapAccessoryButton;
- (_Bool)chatInputControllerShouldAllowTextEditing:(id)arg1;
- (void)resumeVideoChatAudioMaybeWithCompletion:(CDUnknownBlockType)arg1;
- (void)suspendVideoChatAudioWithCompletion:(CDUnknownBlockType)arg1;
- (struct NSDictionary *)conversationStickerUsageHistory;
- (_Bool)isPartiallyVisible;
- (_Bool)supports4GCalling;
- (_Bool)isGroupConversation;
- (_Bool)isQuickSnapEnabled;
- (void)_updateChatTypingStateWithState:(id)arg1;
- (id)replyParameters;
- (struct CGSize)_chatViewSize;
- (void)updateChatViewSize;
- (void)drawerInactiveButVisible:(_Bool)arg1;
- (void)drawerActive;
- (void)resizePreview:(_Bool)arg1 dueToTextInput:(_Bool)arg2;
- (void)chatInputController:(id)arg1 inputTextHeightDidChangeAnimated:(_Bool)arg2;
- (void)chatInputController:(id)arg1 didTypingStateChange:(long long)arg2;
- (void)chatInputControllerTextDidChange:(id)arg1;
- (void)chatInputController:(id)arg1 didPasteGifData:(id)arg2;
- (id)_chatMetricsEventInfoWithConversationId:(id)arg1;
- (void)chatInputController:(id)arg1 didTapSendText:(id)arg2;
- (id)chatInputControllerRecipient:(id)arg1;
- (_Bool)isEligibleSenderReceiverPair;
- (void)chatInputControllerCashSendButtonPressed:(id)arg1;
- (void)chatInputController:(id)arg1 didTapSendPaymentText:(id)arg2 cashTagRanges:(id)arg3 amount:(unsigned long long)arg4;
- (void)chatInputControllerViewDidChange:(id)arg1;
- (_Bool)paymentSwipeSenderVisible;
- (void)_presentSwipeToSend;
- (void)handleSendCashActionInitiatedWithSwipe:(_Bool)arg1;
- (void)deleteFailedSnapCashMessage:(id)arg1;
- (void)didUpdateSaveForSnapCashMessage:(id)arg1 isSaving:(_Bool)arg2 indexPath:(id)arg3;
- (void)didFinishSwipeToSend;
- (void)didFinishSwipeDown;
- (void)didSendSnapCash;
- (double)yOffsetForPaymentView;
- (void)flowSuccessfullyCompleted;
- (void)cardLinkingSuccessful;
- (id)conversationViewModel;
- (void)_resetPresenceBar;
- (void)updateTableContainerViewBottomConstraint;
- (_Bool)_isPlayingMedia;
- (void)_playChatSoundMaybe:(unsigned long long)arg1;
- (void)_playChatSentSoundMaybe;
- (void)_playChatReceivedSoundMaybe;
- (void)_addCustomVolumeIgnoringNextVolumeChange:(_Bool)arg1;
- (void)_removeCustomVolume;
- (_Bool)shouldDisableFullScreen;
- (void)dismissFullScreenView;
- (id)userSession;
- (_Bool)isTheUserConsumingMedia;
- (_Bool)keyboardHidden;
- (void)setKeyboardHidden:(_Bool)arg1;
- (void)_onFailureCameraRollSave;
- (void)_onSuccessCameraRollSaveWithMessage:(id)arg1;
- (void)didSaveMediasToCameraRollFromViewModel:(id)arg1;
- (void)didRemoveSnapchatter:(id)arg1 conversationId:(id)arg2;
- (void)didAddSnapchatter:(id)arg1 friendSourceType:(long long)arg2 conversationId:(id)arg3;
- (void)didBatchSaveOrUnsaveMessageIds:(id)arg1 conversationId:(id)arg2 toSaved:(_Bool)arg3;
- (void)didSaveCustomSticker:(id)arg1;
- (void)didSaveOrUnsaveMessageId:(id)arg1 conversationId:(id)arg2;
- (void)didPressSendToForForwardableViewModel:(id)arg1;
- (void)actionMenuDidDismiss;
- (void)actionMenuDidOpen;
- (void)_presentActionSheetToDeleteMessage:(id)arg1;
- (void)handleOffsetChangedForCells:(double)arg1;
- (unsigned long long)_messageIndexForTouchPoint:(struct CGPoint)arg1 stackedCell:(id)arg2 includeWhitespace:(_Bool)arg3;
- (unsigned long long)messageIndexForTouchPoint:(struct CGPoint)arg1 viewModel:(id)arg2 includeWhitespace:(_Bool)arg3;
- (_Bool)gestureRecognizer:(id)arg1 shouldRequireFailureOfGestureRecognizer:(id)arg2;
- (void)pan:(id)arg1;
- (void)setActionMenuShown:(_Bool)arg1;
- (_Bool)_hasSendingMessageInBlockForPath:(id)arg1;
- (void)showActionMenuAtIndexPath:(id)arg1 withSelectedIndex:(unsigned long long)arg2 withGestureType:(long long)arg3;
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (void)onTapOnWhitespaceAroundStackedCell:(id)arg1;
- (void)longPress:(id)arg1;
- (id)replayController;
- (id)bubbleChatController;
- (id)cashController;
- (id)chatInputController;
- (_Bool)canBeShown;
- (_Bool)shouldDisableScrollOut:(id)arg1;
- (void)viewDidPopFromStack;
- (void)viewDidSwipeOut;
- (void)viewDidSwipeIn;
- (void)viewDidFullyDisappearFromStack:(_Bool)arg1;
- (void)viewDidFullyAppearFromStack:(_Bool)arg1;
- (_Bool)shouldShowGreetingSticker;
- (void)releaseMemory;
- (void)viewWillEnterBackground;
- (void)viewDidBecomeActive;
- (void)viewWillResignActive;
- (_Bool)prefersStatusBarHidden;
- (_Bool)shouldPopToRootViewController;
- (void)didViewModelsChangeForConversationId:(id)arg1;
- (void)_notifyChildrenWithUpdatedViewModel:(id)arg1;
- (void)_notifyGroupInfoComponentsIfNecessaryForOldViewModel:(id)arg1 newViewModel:(id)arg2;
- (void)didConversationViewModelChange:(id)arg1;
- (id)conversationId;
- (void)unsetActiveConversation;
- (void)setChatPageSource:(long long)arg1;
- (void)setActiveConversationById:(id)arg1 shouldDisplayChatCards:(_Bool)arg2 deeplinkType:(unsigned long long)arg3;
- (void)prepareToBeVisible;
- (void)dealloc;
- (void)viewDidLoad;
- (void)viewDidAppear:(_Bool)arg1;
- (void)_initGestures;
- (void)layoutChatTableViewIfNeeded;
- (void)_initMixins;
- (void)_initChatTable;
- (void)_initHeader;
- (void)_initLogger;
- (id)additionalS2RDebugOutput;
- (void)loadView;
- (id)initWithUserSession:(id)arg1 parentDelegate:(id)arg2;
- (id)getPageName;
- (id)getPageViewName;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(nonatomic) __weak id <SCStartChatDelegate> delegate;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(retain, nonatomic) SCChatViewHeaderV3 *header; // @dynamic header;
@property(nonatomic) __weak id <NavigationDelegate> navigationDelegate;
@property(nonatomic) __weak id <SCReplyDelegate> replyDelegate;
@property(retain, nonatomic) SCAppNotification *sourceNotification;
@property(readonly) Class superclass;

@end


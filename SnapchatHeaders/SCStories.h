//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "NSCoding-Protocol.h"
#import "SCNetworkActivityListener-Protocol.h"
#import "SCNetworkConnectivityListener-Protocol.h"
#import "SCStoryMediaStateListener-Protocol.h"
#import "SCTimeProfilable-Protocol.h"

@class FriendStoriesCollection, NSArray, NSDate, NSMutableSet, NSString, SCCheetahStoriesCollection, SCGroupStoryCollection, SCLiveStoriesSubmissionsCollection, SCMyContributionStoriesCollection, SCMyStories, SCQueuePerformer, SCStoriesModelUpdateListenerAnnouncer, SCStoryMediaCache, SCTemporaryDatastore;

@interface SCStories : NSObject <SCTimeProfilable, SCStoryMediaStateListener, SCNetworkConnectivityListener, SCNetworkActivityListener, NSCoding>
{
    SCQueuePerformer *_performer;
    NSMutableSet *_friendStoriesKVOedNameSet;
    NSArray *_lastUpdatedMyContributionStories;
    _Bool _useSignedReadReceipt;
    _Bool _directToStorageDisabled;
    _Bool _silenceCollectionsUpdate;
    _Bool _announceFriendStoriesChanged;
    _Bool _isPostingStory;
    _Bool _isAutoRepostingEnabled;
    SCStoryMediaCache *_storyMediaCache;
    FriendStoriesCollection *_friendStoriesCollection;
    SCMyStories *_myStories;
    SCMyContributionStoriesCollection *_myContributionStoriesCollection;
    NSDate *_fetchLastInitiatedAt;
    NSDate *_fetchLastReturnedAt;
    SCGroupStoryCollection *_groupStoryCollection;
    long long _groupStoryEnabledSetting;
    SCLiveStoriesSubmissionsCollection *_liveStoriesSubmissionsCollection;
    SCCheetahStoriesCollection *_cheetahStoriesCollection;
    SCStoriesModelUpdateListenerAnnouncer *_updateAnnouncer;
    SCTemporaryDatastore *_lostStoriesDatastore;
    long long _uploadBandwidth;
    long long _requiredBandwidth;
    double _lastNetworkCheckDoneAt;
}

+ (int)context;
+ (id)path;
+ (void)fetchPublicStoriesWithSharedId:(id)arg1 successBlock:(CDUnknownBlockType)arg2 failureBlock:(CDUnknownBlockType)arg3;
+ (void)fetchStoriesWithSuccessBlock:(CDUnknownBlockType)arg1 failureBlock:(CDUnknownBlockType)arg2 requestSource:(long long)arg3;
+ (void)deleteStoryWithSharedStoryGroupId:(id)arg1 storyID:(id)arg2 successBlock:(CDUnknownBlockType)arg3 failureBlock:(CDUnknownBlockType)arg4;
+ (void)deleteStoryWithStoryId:(id)arg1 successBlock:(CDUnknownBlockType)arg2 failureBlock:(CDUnknownBlockType)arg3;
@property(nonatomic) _Bool isAutoRepostingEnabled; // @synthesize isAutoRepostingEnabled=_isAutoRepostingEnabled;
@property(nonatomic) double lastNetworkCheckDoneAt; // @synthesize lastNetworkCheckDoneAt=_lastNetworkCheckDoneAt;
@property(nonatomic) _Bool isPostingStory; // @synthesize isPostingStory=_isPostingStory;
@property(nonatomic) long long requiredBandwidth; // @synthesize requiredBandwidth=_requiredBandwidth;
@property(nonatomic) long long uploadBandwidth; // @synthesize uploadBandwidth=_uploadBandwidth;
@property(retain, nonatomic) SCTemporaryDatastore *lostStoriesDatastore; // @synthesize lostStoriesDatastore=_lostStoriesDatastore;
@property(nonatomic) _Bool announceFriendStoriesChanged; // @synthesize announceFriendStoriesChanged=_announceFriendStoriesChanged;
@property(nonatomic) _Bool silenceCollectionsUpdate; // @synthesize silenceCollectionsUpdate=_silenceCollectionsUpdate;
@property(retain, nonatomic) SCStoriesModelUpdateListenerAnnouncer *updateAnnouncer; // @synthesize updateAnnouncer=_updateAnnouncer;
@property(readonly, nonatomic) SCCheetahStoriesCollection *cheetahStoriesCollection; // @synthesize cheetahStoriesCollection=_cheetahStoriesCollection;
@property(readonly, nonatomic) SCLiveStoriesSubmissionsCollection *liveStoriesSubmissionsCollection; // @synthesize liveStoriesSubmissionsCollection=_liveStoriesSubmissionsCollection;
@property(nonatomic) _Bool directToStorageDisabled; // @synthesize directToStorageDisabled=_directToStorageDisabled;
@property(nonatomic) long long groupStoryEnabledSetting; // @synthesize groupStoryEnabledSetting=_groupStoryEnabledSetting;
@property(retain, nonatomic) SCGroupStoryCollection *groupStoryCollection; // @synthesize groupStoryCollection=_groupStoryCollection;
@property(retain, nonatomic) NSDate *fetchLastReturnedAt; // @synthesize fetchLastReturnedAt=_fetchLastReturnedAt;
@property(retain, nonatomic) NSDate *fetchLastInitiatedAt; // @synthesize fetchLastInitiatedAt=_fetchLastInitiatedAt;
@property(readonly, nonatomic) _Bool useSignedReadReceipt; // @synthesize useSignedReadReceipt=_useSignedReadReceipt;
@property(readonly, nonatomic) SCMyContributionStoriesCollection *myContributionStoriesCollection; // @synthesize myContributionStoriesCollection=_myContributionStoriesCollection;
@property(readonly, nonatomic) SCMyStories *myStories; // @synthesize myStories=_myStories;
@property(readonly, nonatomic) FriendStoriesCollection *friendStoriesCollection; // @synthesize friendStoriesCollection=_friendStoriesCollection;
@property(readonly, nonatomic) SCStoryMediaCache *storyMediaCache; // @synthesize storyMediaCache=_storyMediaCache;
- (void).cxx_destruct;
- (void)didSendBytes:(unsigned long long)arg1;
- (void)didReceiveBytes:(unsigned long long)arg1;
- (void)networkConnectivityStatusDidChange:(long long)arg1;
- (void)uploadNextFailedStoryIfAny;
- (id)storyThatNeedsRetryPosting;
- (void)didFailToUploadStory;
- (void)scheduleAutoReposing;
- (void)_restoreStory:(id)arg1;
- (void)_restoreStoryWithKey:(id)arg1;
- (void)_evaluateCandidates:(id)arg1 intoLost:(id)arg2 confirmed:(id)arg3;
- (void)removeSavedMetadataForStory:(id)arg1;
- (void)archiveMetadataForStory:(id)arg1;
- (void)restoreLostStories;
- (void)_setLostStoriesDatastore:(id)arg1;
- (void)initStoryRecoveryForUserSession:(id)arg1;
- (void)retryToUploadAllFailedStories;
- (long long)numberOfFailedStories;
- (id)ufsStoriesRequestMetadataWithChecksum:(id)arg1;
- (_Bool)hasStories;
- (void)story:(id)arg1 didChangeThumbnailMediaState:(long long)arg2;
- (void)story:(id)arg1 didChangeMediaState:(long long)arg2;
- (void)addStoriesObservers;
- (void)removePropertyObserversForFriendStories:(id)arg1;
- (void)handleKeyChange:(id)arg1 toFriendStories:(id)arg2 change:(id)arg3;
- (void)_addPostableGroupStoryIdsObservers;
- (void)addPropertyObserversForFriendStories:(id)arg1;
- (void)_fetchMetadataForMyContributionStoriesChangeDictionary:(id)arg1;
- (void)_handleMyStoryStateChange:(id)arg1;
- (void)_handleChangeToMediaStateWithStory:(id)arg1 change:(id)arg2;
- (void)_handleChangeToMediaStateWithMyStories:(id)arg1 change:(id)arg2;
- (void)_announceMyStoriesArrayUpdateIfNecessary:(_Bool)arg1;
- (void)_handleChangeToMyStoriesArray:(id)arg1 needsResort:(_Bool)arg2 isMyContribution:(_Bool)arg3;
- (void)_removeIndividualMyStoriesObservers:(id)arg1;
- (void)_addIndividualMyStoriesObservers:(id)arg1;
- (void)_removeObserversWithMyStories:(id)arg1;
- (void)_removeIndividualMyContributionStoriesObservers:(id)arg1;
- (void)_addIndividualMyContributionStoriesObservers:(id)arg1;
- (void)_handleChangeToMyContributionStoriesArray:(id)arg1;
- (void)_handleChangeToFriendStoriesCollection;
- (void)_announceCollectionsUpdateFinalizedWithTriggerType:(long long)arg1;
- (void)_announceCollectionsUpdate;
- (void)_didUpdateCollections;
- (void)_willUpdateCollections;
- (void)_addObserversWithMyStories:(id)arg1 isMyContribution:(_Bool)arg2;
- (void)_addMyContributionStoriesCollectionObservers;
- (void)_addGroupStoryEnableSettingObserver;
- (void)_addFriendStoriesCollectionObservers;
- (id)myStoriesForClientId:(id)arg1;
- (void)prepareForLogout;
- (void)prepareForBackgrounding;
- (void)clearExpiredAndViewedStoriesWithCompletion:(CDUnknownBlockType)arg1;
- (void)_updateFriendStoriesCollectionWithFriendStories:(id)arg1 deletedStorySnapIds:(id)arg2 feedCarouselOrderedUsernames:(id)arg3 isDelta:(_Bool)arg4 triggerType:(long long)arg5 completion:(CDUnknownBlockType)arg6;
- (void)_updateWithMyStoriesArray:(id)arg1;
- (void)_updateMyStoriesWithMyStories:(id)arg1;
- (void)updateCollectionsWithGroupStoryMetadata:(id)arg1 requestedIDs:(id)arg2 completion:(CDUnknownBlockType)arg3;
- (void)updateWithStories:(id)arg1 clientMetadataOnly:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;
- (_Bool)saveState;
- (void)setStoriesWithStoriesResponse:(id)arg1 triggerType:(long long)arg2 requestMetadata:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)encodeWithCoder:(id)arg1;
- (void)_setupQueuePerformer;
- (void)didDecodeObject;
- (void)dealloc;
- (id)initWithCoder:(id)arg1;
- (id)init;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


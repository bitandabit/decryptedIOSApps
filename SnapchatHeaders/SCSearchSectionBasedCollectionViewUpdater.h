//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "SCSearchCollectionViewSectionDelegate-Protocol.h"
#import "SCSearchCollectionViewSectionSupplementaryViewProviderDelegate-Protocol.h"
#import "SCTimeProfilable-Protocol.h"
#import "UICollectionViewDataSource-Protocol.h"
#import "UICollectionViewDelegateFlowLayout-Protocol.h"

@class NSArray, NSMutableSet, NSString, SCSearchGCDBlockTimer, UICollectionView;
@protocol SCSearchSectionBasedCollectionViewUpdaterDelegate, UICollectionViewDelegate;

@interface SCSearchSectionBasedCollectionViewUpdater : NSObject <SCSearchCollectionViewSectionDelegate, UICollectionViewDataSource, UICollectionViewDelegateFlowLayout, SCTimeProfilable, SCSearchCollectionViewSectionSupplementaryViewProviderDelegate>
{
    UICollectionView *_collectionView;
    NSArray *_pendingSections;
    _Bool _isPendingUpdateAnimated;
    NSMutableSet *_mutableLoadingSectionIndex;
    SCSearchGCDBlockTimer *_collectionViewUpdateTimer;
    struct CGPoint _lastOffset;
    double _lastOriginCaptureTime;
    double _scrollVelocity;
    _Bool _isUpdating;
    id <SCSearchSectionBasedCollectionViewUpdaterDelegate> _delegate;
    id <UICollectionViewDelegate> _collectionViewDelegate;
    NSArray *_sections;
}

+ (int)context;
@property(readonly, nonatomic) _Bool isUpdating; // @synthesize isUpdating=_isUpdating;
@property(readonly, copy, nonatomic) NSArray *sections; // @synthesize sections=_sections;
@property(nonatomic) __weak id <UICollectionViewDelegate> collectionViewDelegate; // @synthesize collectionViewDelegate=_collectionViewDelegate;
@property(nonatomic) __weak id <SCSearchSectionBasedCollectionViewUpdaterDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)_setIsUpdating:(_Bool)arg1;
- (void)_applyConfigurationsForSectionWithConfigurations:(id)arg1;
- (void)_tearDownSections:(id)arg1;
- (void)_setUpSections:(id)arg1;
- (void)_applySectionWithConfigurations:(id)arg1 animated:(_Bool)arg2;
- (void)_updateCollectionViewWithSections:(id)arg1 animated:(_Bool)arg2;
- (void)_invalidateResultCollectionViewLayout;
- (void)_updateResultCollectionViewLayoutInteractively;
- (void)_handleUpdateLayoutCompletionWithFinished:(_Bool)arg1;
- (void)_updateResultCollectionViewLayout;
- (void)_handleResultsCollectionViewUpdateCompletionWithFinished:(_Bool)arg1;
- (void)_handleCollectionViewUpdateWithSections:(id)arg1 insertSectionsIndexSet:(id)arg2 deleteSectionsIndexSet:(id)arg3 reloadSectionsIndexSet:(id)arg4 insertItemsIndexPaths:(id)arg5 deleteItemsIndexPaths:(id)arg6 reloadItemsIndexPaths:(id)arg7;
- (void)_forceUpdateCollectionViewAnimated:(_Bool)arg1;
- (void)_updateCollectionViewIfNeeded;
- (void)_prepareLayoutUpdate;
- (_Bool)_shouldUpdateLayout;
- (id)sectionSupplementaryViewProvider:(id)arg1 dequeueSupplementaryElementOfKind:(id)arg2 withReuseIdentifier:(id)arg3 atIndexInSection:(unsigned long long)arg4;
- (id)sectionSupplementaryViewProvider:(id)arg1 supplementaryViewOfElementKind:(id)arg2 atIndexInSection:(unsigned long long)arg3;
- (void)scrollViewDidEndScrollingAnimation:(id)arg1;
- (void)scrollViewDidEndDecelerating:(id)arg1;
- (void)scrollViewWillBeginDecelerating:(id)arg1;
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;
- (void)scrollViewWillEndDragging:(id)arg1 withVelocity:(struct CGPoint)arg2 targetContentOffset:(inout struct CGPoint *)arg3;
- (void)scrollViewWillBeginDragging:(id)arg1;
- (void)scrollViewDidScroll:(id)arg1;
- (double)collectionView:(id)arg1 layout:(id)arg2 minimumLineSpacingForSectionAtIndex:(long long)arg3;
- (double)collectionView:(id)arg1 layout:(id)arg2 minimumInteritemSpacingForSectionAtIndex:(long long)arg3;
- (struct CGPoint)collectionView:(id)arg1 targetContentOffsetForProposedContentOffset:(struct CGPoint)arg2;
- (void)collectionView:(id)arg1 didEndDisplayingCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 willDisplayCell:(id)arg2 forItemAtIndexPath:(id)arg3;
- (void)collectionView:(id)arg1 willDisplaySupplementaryView:(id)arg2 forElementKind:(id)arg3 atIndexPath:(id)arg4;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 sizeForItemAtIndexPath:(id)arg3;
- (struct UIEdgeInsets)collectionView:(id)arg1 layout:(id)arg2 insetForSectionAtIndex:(long long)arg3;
- (struct CGSize)collectionView:(id)arg1 layout:(id)arg2 referenceSizeForHeaderInSection:(long long)arg3;
- (id)collectionView:(id)arg1 viewForSupplementaryElementOfKind:(id)arg2 atIndexPath:(id)arg3;
- (id)collectionView:(id)arg1 cellForItemAtIndexPath:(id)arg2;
- (long long)collectionView:(id)arg1 numberOfItemsInSection:(long long)arg2;
- (long long)numberOfSectionsInCollectionView:(id)arg1;
- (id)presentingViewControllerForCollectionViewSection:(id)arg1;
- (void)collectionViewSection:(id)arg1 scrollToItemAtIndexInSection:(unsigned long long)arg2 scrollPosition:(unsigned long long)arg3 animated:(_Bool)arg4;
- (struct UIEdgeInsets)sectionInsetsForCollectionViewSection:(id)arg1;
- (struct CGSize)collectionViewBoundsSizeForSearchResultSection:(id)arg1;
- (id)searchResultSection:(id)arg1 cellForItemAtIndexInSection:(unsigned long long)arg2;
- (id)searchResultSection:(id)arg1 indexPathForCell:(id)arg2;
- (id)collectionViewSection:(id)arg1 dequeueSupplementaryViewOfElementKind:(id)arg2 withReuseIdentifier:(id)arg3 forIndexInSection:(unsigned long long)arg4;
- (void)searchResultSection:(id)arg1 didUpdateLayoutWithInteraction:(_Bool)arg2;
- (id)searchResultSection:(id)arg1 dequeueReusableCellWithReuseIdentifier:(id)arg2 forIndexInSection:(unsigned long long)arg3;
- (void)searchResultSection:(id)arg1 reloadCellsAtIndexesIfNeeded:(id)arg2;
- (void)searchResultSectionUpdateIfNeeded:(id)arg1;
- (_Bool)respondsToSelector:(SEL)arg1;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (void)setSectionWithConfigurations:(id)arg1 animated:(_Bool)arg2;
- (void)dealloc;
- (id)initWithCollectionView:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


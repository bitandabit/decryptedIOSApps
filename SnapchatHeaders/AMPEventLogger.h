//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "AMPUploaderDelegate-Protocol.h"

@class AMPEventConfigurer, AMPEventList, AMPEventListRepository, AMPFailureInfo, AMPFailureInfoRepository, AMPOverflowManager, AMPSequenceIdProvider, AMPSequenceIdRepository, AMPSingleScheduler, AMPUploader, NSString;
@protocol AMPConfigProtocol;

@interface AMPEventLogger : NSObject <AMPUploaderDelegate>
{
    AMPUploader *_uploader;
    NSString *_logQueueName;
    id <AMPConfigProtocol> _config;
    AMPEventConfigurer *_eventConfigurer;
    AMPFailureInfoRepository *_failureInfoRepo;
    AMPEventListRepository *_eventListRepo;
    CDUnknownBlockType _checkUserCreated;
    AMPSingleScheduler *_singleUploadScheduler;
    AMPOverflowManager *_overflowManager;
    AMPSequenceIdRepository *_sequenceIdRepo;
    AMPFailureInfo *_failureInfo;
    AMPEventList *_eventList;
    AMPSequenceIdProvider *_sequenceIdProvider;
}

@property(readonly, nonatomic) AMPSequenceIdProvider *sequenceIdProvider; // @synthesize sequenceIdProvider=_sequenceIdProvider;
@property(readonly, nonatomic) AMPEventList *eventList; // @synthesize eventList=_eventList;
@property(readonly, nonatomic) AMPFailureInfo *failureInfo; // @synthesize failureInfo=_failureInfo;
@property(readonly, nonatomic) AMPSequenceIdRepository *sequenceIdRepo; // @synthesize sequenceIdRepo=_sequenceIdRepo;
@property(readonly, nonatomic) AMPOverflowManager *overflowManager; // @synthesize overflowManager=_overflowManager;
@property(readonly, nonatomic) AMPSingleScheduler *singleUploadScheduler; // @synthesize singleUploadScheduler=_singleUploadScheduler;
@property(readonly, nonatomic) CDUnknownBlockType checkUserCreated; // @synthesize checkUserCreated=_checkUserCreated;
@property(readonly, nonatomic) AMPEventListRepository *eventListRepo; // @synthesize eventListRepo=_eventListRepo;
@property(readonly, nonatomic) AMPFailureInfoRepository *failureInfoRepo; // @synthesize failureInfoRepo=_failureInfoRepo;
@property(readonly, nonatomic) AMPEventConfigurer *eventConfigurer; // @synthesize eventConfigurer=_eventConfigurer;
@property(readonly, nonatomic) id <AMPConfigProtocol> config; // @synthesize config=_config;
@property(readonly, nonatomic) NSString *logQueueName; // @synthesize logQueueName=_logQueueName;
@property(readonly, nonatomic) AMPUploader *uploader; // @synthesize uploader=_uploader;
- (void).cxx_destruct;
- (unsigned long long)hash;
- (_Bool)isEqualToLogger:(id)arg1;
- (_Bool)isEqual:(id)arg1;
- (void)_reportOverflownEventsAndCrash;
- (_Bool)_shouldReportOverflownEvents;
- (void)_saveEventListAndSequenceIdProvider;
- (_Bool)_shouldUploadBatchImmediately;
- (void)_scheduleUpload;
- (_Bool)_isLoggingUploadDetailsEvent:(id)arg1;
- (void)uploader:(id)arg1 failedToUploadEvents:(long long)arg2;
- (void)successfullyUploadedEvents:(long long)arg1 totalEventsOverflowed:(unsigned long long)arg2 criticalEventsOverflowed:(unsigned long long)arg3 p0EventsOverflowed:(unsigned long long)arg4;
- (void)saveEvents;
- (void)uploadEventBatch;
- (_Bool)_shouldRejectEvent:(id)arg1;
- (void)_logEvent:(id)arg1 uploadImmediately:(_Bool)arg2;
- (void)logEvent:(id)arg1 uploadImmediately:(_Bool)arg2;
- (id)initWithConfiguration:(id)arg1 eventListRepo:(id)arg2 sequenceIdRepo:(id)arg3 eventList:(id)arg4 userCheck:(CDUnknownBlockType)arg5 scheduler:(id)arg6 uploader:(id)arg7 overflowManager:(id)arg8 logQueueName:(id)arg9;

@end


//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "SCMapSpriteClustererDelegate-Protocol.h"
#import "SCMapTouchResponder-Protocol.h"

@class MGLMapView, NSArray, NSDictionary, NSSet, NSString, SCMapPerson, SCMapSpriteClusterer, SCMapSpriteManagerAssetProvider, SCUserSession, SCXRenderLayer;
@protocol SCMapStandingPersonSpriteManagerDelegate;

@interface SCMapStandingPersonSpriteManager : NSObject <SCMapSpriteClustererDelegate, SCMapTouchResponder>
{
    SCMapPerson *_destinationPerson;
    double _destinationZoomLevel;
    double _carouselSessionDesiredZoomLevel;
    double _lastZoomLevel;
    _Bool _ignoreTouchUpAndLongPress;
    _Bool _touchDidCancelFlyover;
    struct MGLCoordinateBounds _coordinateBoundsForDeselect;
    _Bool _showGhostModeAvatarForCurrentUser;
    _Bool _isSelectionAllowed;
    _Bool _showProps;
    id <SCMapStandingPersonSpriteManagerDelegate> _delegate;
    MGLMapView *_mapView;
    SCXRenderLayer *_renderLayer;
    SCUserSession *_userSession;
    NSArray *_friendLocations;
    double _minimumSpriteWidth;
    double _maximumSpriteWidth;
    NSDictionary *_spritesByUserId;
    NSDictionary *_friendLocationClustersByUserId;
    NSDictionary *_friendLocationsByUserId;
    SCMapSpriteManagerAssetProvider *_assetProvider;
    NSArray *_friendLocationClusters;
    NSSet *_visibleUserIdsWhitelist;
    NSString *_selectedUserId;
    long long _selectionStyle;
    NSSet *_focusedUserIds;
    NSString *_depressedSpriteUserId;
    NSArray *_originalFriendLocationClusters;
    NSDictionary *_originalFriendLocationClustersByUserId;
    NSDictionary *_originalFriendLocationClustersByClusterId;
    NSDictionary *_preloadedSpritesByUserId;
    NSDictionary *_spriteGroupsByFriendLocationClusterId;
    NSArray *_spriteClusterViewStates;
    SCMapSpriteClusterer *_overlapClusterer;
    SCMapSpriteClusterer *_crowdClusterer;
    struct CLLocationCoordinate2D _carouselSortStartCoordinate;
}

@property(retain, nonatomic) SCMapSpriteClusterer *crowdClusterer; // @synthesize crowdClusterer=_crowdClusterer;
@property(retain, nonatomic) SCMapSpriteClusterer *overlapClusterer; // @synthesize overlapClusterer=_overlapClusterer;
@property(readonly, nonatomic) NSArray *spriteClusterViewStates; // @synthesize spriteClusterViewStates=_spriteClusterViewStates;
@property(readonly, nonatomic) NSDictionary *spriteGroupsByFriendLocationClusterId; // @synthesize spriteGroupsByFriendLocationClusterId=_spriteGroupsByFriendLocationClusterId;
@property(readonly, nonatomic) NSDictionary *preloadedSpritesByUserId; // @synthesize preloadedSpritesByUserId=_preloadedSpritesByUserId;
@property(readonly, nonatomic) NSDictionary *originalFriendLocationClustersByClusterId; // @synthesize originalFriendLocationClustersByClusterId=_originalFriendLocationClustersByClusterId;
@property(readonly, nonatomic) NSDictionary *originalFriendLocationClustersByUserId; // @synthesize originalFriendLocationClustersByUserId=_originalFriendLocationClustersByUserId;
@property(readonly, nonatomic) NSArray *originalFriendLocationClusters; // @synthesize originalFriendLocationClusters=_originalFriendLocationClusters;
@property(nonatomic) struct CLLocationCoordinate2D carouselSortStartCoordinate; // @synthesize carouselSortStartCoordinate=_carouselSortStartCoordinate;
@property(retain, nonatomic) NSString *depressedSpriteUserId; // @synthesize depressedSpriteUserId=_depressedSpriteUserId;
@property(nonatomic) _Bool showProps; // @synthesize showProps=_showProps;
@property(copy, nonatomic) NSSet *focusedUserIds; // @synthesize focusedUserIds=_focusedUserIds;
@property(nonatomic) _Bool isSelectionAllowed; // @synthesize isSelectionAllowed=_isSelectionAllowed;
@property(readonly, nonatomic) long long selectionStyle; // @synthesize selectionStyle=_selectionStyle;
@property(readonly, nonatomic) NSString *selectedUserId; // @synthesize selectedUserId=_selectedUserId;
@property(copy, nonatomic) NSSet *visibleUserIdsWhitelist; // @synthesize visibleUserIdsWhitelist=_visibleUserIdsWhitelist;
@property(readonly, nonatomic) _Bool showGhostModeAvatarForCurrentUser; // @synthesize showGhostModeAvatarForCurrentUser=_showGhostModeAvatarForCurrentUser;
@property(copy, nonatomic) NSArray *friendLocationClusters; // @synthesize friendLocationClusters=_friendLocationClusters;
@property(readonly, nonatomic) SCMapSpriteManagerAssetProvider *assetProvider; // @synthesize assetProvider=_assetProvider;
@property(readonly, nonatomic) NSDictionary *friendLocationsByUserId; // @synthesize friendLocationsByUserId=_friendLocationsByUserId;
@property(readonly, nonatomic) NSDictionary *friendLocationClustersByUserId; // @synthesize friendLocationClustersByUserId=_friendLocationClustersByUserId;
@property(readonly, nonatomic) NSDictionary *spritesByUserId; // @synthesize spritesByUserId=_spritesByUserId;
@property(readonly, nonatomic) double maximumSpriteWidth; // @synthesize maximumSpriteWidth=_maximumSpriteWidth;
@property(readonly, nonatomic) double minimumSpriteWidth; // @synthesize minimumSpriteWidth=_minimumSpriteWidth;
@property(readonly, nonatomic) NSArray *friendLocations; // @synthesize friendLocations=_friendLocations;
@property(readonly, nonatomic) __weak SCUserSession *userSession; // @synthesize userSession=_userSession;
@property(readonly, nonatomic) __weak SCXRenderLayer *renderLayer; // @synthesize renderLayer=_renderLayer;
@property(readonly, nonatomic) __weak MGLMapView *mapView; // @synthesize mapView=_mapView;
@property(nonatomic) __weak id <SCMapStandingPersonSpriteManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void).cxx_destruct;
- (void)didZoomMap;
- (void)didPanMap;
- (void)priorResponderDidHandleTouch:(id)arg1;
- (void)didCancelTouchOnMapWithReason:(id)arg1;
- (struct SCMapTouchResponderResult)didLongPressOnMapAtPoint:(struct CGPoint)arg1;
- (struct SCMapTouchResponderResult)didTouchUpOnMapAtPoint:(struct CGPoint)arg1;
- (struct SCMapTouchResponderResult)didTouchDownOnMapAtPoint:(struct CGPoint)arg1;
- (_Bool)_poiExistsOverPerson:(id)arg1 atTouchPoint:(struct CGPoint)arg2;
- (struct MGLCoordinateBounds)_coordinateBoundsForFriendLocationClusters:(id)arg1;
- (void)_zoomInToFriendLocationClusters:(id)arg1;
- (struct MGLCoordinateBounds)_coordinateBoundsForSpriteCluster:(id)arg1;
- (void)_handleTapOnPerson:(id)arg1 touchPoint:(struct CGPoint)arg2;
- (void)_handleDeselectTap;
- (void)spriteClustererDidUpdateSpriteClusters:(id)arg1;
- (struct CGRect)_boundsForFriendLocationCluster:(id)arg1;
- (_Bool)_extendedViewportContainsFriendLocationCluster:(id)arg1;
- (_Bool)_viewportContainsFriendLocationCluster:(id)arg1;
- (void)_centerCameraOnFocusedPersonsIfNecessary;
- (void)_centerCameraOnSelectedPersonIfNecessary;
- (void)centerCameraOnVisiblePersonsWithEdgeInsets:(struct UIEdgeInsets)arg1;
- (id)_originalFriendLocationClustersAtPoint:(struct CGPoint)arg1;
- (id)_friendLocationsForCrowdSpriteCluster:(id)arg1;
- (CDUnknownBlockType)_newCrowdClustererZoomLevelWhereSlippyDistanceMeets;
- (CDUnknownBlockType)_newOverlapClustererZoomLevelWhereSlippyDistanceMeets;
- (_Bool)_selectedFriendLocationClusterContainsPerson:(id)arg1;
- (_Bool)_isStandingPersonClusterTopmostObjectAtPoint:(struct CGPoint)arg1;
- (id)_personAtPoint:(struct CGPoint)arg1;
- (id)_personSpritesAtPoint:(struct CGPoint)arg1;
- (_Bool)_hasCalloutAtPoint:(struct CGPoint)arg1;
- (id)personForUserId:(id)arg1;
- (void)setOpacityForOtherLayers:(float)arg1 duration:(double)arg2;
- (void)_layoutWithDuration:(double)arg1;
- (void)showCarouselForPerson:(id)arg1;
- (void)_hideCarousel;
- (struct CLLocationCoordinate2D)_coordinateForPerson:(id)arg1 atZoomLevel:(double)arg2;
- (void)centerCameraOnPerson:(id)arg1 desiredZoomLevel:(double)arg2 edgePadding:(struct UIEdgeInsets)arg3 animated:(_Bool)arg4 completion:(CDUnknownBlockType)arg5;
- (void)didChoosePerson:(id)arg1 source:(long long)arg2 actionType:(long long)arg3;
- (void)carouselDidChoosePerson:(id)arg1 actionType:(long long)arg2;
- (void)flyToPerson:(id)arg1 showCarousel:(_Bool)arg2 allowZoomIn:(_Bool)arg3 allowZoomOut:(_Bool)arg4 desiredZoomLevel:(double)arg5 source:(long long)arg6 actionType:(long long)arg7 completion:(CDUnknownBlockType)arg8;
- (void)flyToPerson:(id)arg1 source:(long long)arg2 actionType:(long long)arg3;
- (void)deselectSelectedPersonAndCancelFlyover;
- (void)_checkIfZoomLevelDidChange;
- (void)mapView:(id)arg1 regionDidChangeAnimated:(_Bool)arg2;
- (void)mapViewRegionIsChanging:(id)arg1;
- (id)_clusterIdsForFocusedUserIds;
- (void)setFocusedUserIds:(id)arg1 duration:(double)arg2;
- (void)setVisibleUserIdsWhitelist:(id)arg1 duration:(double)arg2;
- (_Bool)isSpriteDisplayableForCurrentUser;
- (_Bool)isSpriteDisplayableForUserId:(id)arg1;
- (void)preloadSpriteForFriendLocation:(id)arg1;
- (id)_friendLocationsFromFriendLocationClusters:(id)arg1;
- (id)_consumePreloadedSpriteForFriendLocation:(id)arg1;
- (void)_updateSpriteClusterViewStates;
- (void)_clearSpriteClusterViewStates;
- (void)_updateSpriteGroups;
- (void)_updateSprites;
- (void)_updateWithFriendLocationClusters:(id)arg1;
- (void)setShowGhostModeAvatarForCurrentUser:(_Bool)arg1 animated:(_Bool)arg2;
- (void)setShowProps:(_Bool)arg1 duration:(double)arg2;
@property(readonly, nonatomic) NSArray *sortedCarouselClusters;
- (void)setMinimumSpriteWidth:(double)arg1 maximumSpriteWidth:(double)arg2;
- (void)setSelectedUserId:(id)arg1 selectionStyle:(long long)arg2 duration:(double)arg3;
- (void)setSelectedUserId:(id)arg1 selectionStyle:(long long)arg2;
- (void)setSelectedUserId:(id)arg1;
- (id)initWithMapView:(id)arg1 renderLayer:(id)arg2 userSession:(id)arg3;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


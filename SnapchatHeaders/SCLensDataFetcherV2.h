//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "SCLensLoadingQueueDelegate-Protocol.h"
#import "SCLensUIUpdateListener-Protocol.h"
#import "SCManagedDatastore-Protocol.h"
#import "SCUserSessionScoped-Protocol.h"

@class NSArray, NSMutableDictionary, NSMutableSet, NSString, SCFeatureSettingsManager, SCLensBlobDataFetcher, SCLensDataFetcherListenerV2Announcer, SCLensDownloadOperationFactoryV2, SCLensLoadingQueueV2, SCLensURLDataFetcher, SCPreferences, SCRequestManager;
@protocol SCPerforming;

@interface SCLensDataFetcherV2 : NSObject <SCLensLoadingQueueDelegate, SCUserSessionScoped, SCLensUIUpdateListener, SCManagedDatastore>
{
    SCLensDownloadOperationFactoryV2 *_operationsFactory;
    SCLensDataFetcherListenerV2Announcer *_announcer;
    SCLensLoadingQueueV2 *_contentQueue;
    SCLensLoadingQueueV2 *_imageQueue;
    SCLensLoadingQueueV2 *_categoryQueue;
    SCLensLoadingQueueV2 *_assetsQueue;
    SCLensLoadingQueueV2 *_filterOverlayImageQueue;
    SCLensLoadingQueueV2 *_warmupQueue;
    NSArray *_allQueues;
    id <SCPerforming> _performer;
    SCRequestManager *_requestManager;
    SCLensURLDataFetcher *_urlDataFetcher;
    SCLensBlobDataFetcher *_blobDataFetcher;
    SCFeatureSettingsManager *_featureSettingsManager;
    SCPreferences *_userPreferences;
    NSString *_currentSelectedLensId;
    NSMutableSet *_visibleLensIds;
    NSMutableSet *_explicitlySelectedLensIds;
    NSMutableDictionary *_lensIdsToVisibleIndexes;
}

@property(retain, nonatomic) NSMutableDictionary *lensIdsToVisibleIndexes; // @synthesize lensIdsToVisibleIndexes=_lensIdsToVisibleIndexes;
@property(retain, nonatomic) NSMutableSet *explicitlySelectedLensIds; // @synthesize explicitlySelectedLensIds=_explicitlySelectedLensIds;
@property(retain, nonatomic) NSMutableSet *visibleLensIds; // @synthesize visibleLensIds=_visibleLensIds;
@property(retain, nonatomic) NSString *currentSelectedLensId; // @synthesize currentSelectedLensId=_currentSelectedLensId;
@property(retain, nonatomic) SCPreferences *userPreferences; // @synthesize userPreferences=_userPreferences;
@property(retain, nonatomic) SCFeatureSettingsManager *featureSettingsManager; // @synthesize featureSettingsManager=_featureSettingsManager;
@property(retain, nonatomic) SCLensBlobDataFetcher *blobDataFetcher; // @synthesize blobDataFetcher=_blobDataFetcher;
@property(retain, nonatomic) SCLensURLDataFetcher *urlDataFetcher; // @synthesize urlDataFetcher=_urlDataFetcher;
@property(retain, nonatomic) SCRequestManager *requestManager; // @synthesize requestManager=_requestManager;
@property(retain, nonatomic) id <SCPerforming> performer; // @synthesize performer=_performer;
@property(retain, nonatomic) NSArray *allQueues; // @synthesize allQueues=_allQueues;
@property(retain, nonatomic) SCLensLoadingQueueV2 *warmupQueue; // @synthesize warmupQueue=_warmupQueue;
@property(retain, nonatomic) SCLensLoadingQueueV2 *filterOverlayImageQueue; // @synthesize filterOverlayImageQueue=_filterOverlayImageQueue;
@property(retain, nonatomic) SCLensLoadingQueueV2 *assetsQueue; // @synthesize assetsQueue=_assetsQueue;
@property(retain, nonatomic) SCLensLoadingQueueV2 *categoryQueue; // @synthesize categoryQueue=_categoryQueue;
@property(retain, nonatomic) SCLensLoadingQueueV2 *imageQueue; // @synthesize imageQueue=_imageQueue;
@property(retain, nonatomic) SCLensLoadingQueueV2 *contentQueue; // @synthesize contentQueue=_contentQueue;
@property(retain, nonatomic) SCLensDataFetcherListenerV2Announcer *announcer; // @synthesize announcer=_announcer;
@property(retain, nonatomic) SCLensDownloadOperationFactoryV2 *operationsFactory; // @synthesize operationsFactory=_operationsFactory;
- (void).cxx_destruct;
- (void)saveLastFetchDateForLensContent:(id)arg1;
- (id)checkCacheAndScheduleOperationIfNeeded:(CDUnknownBlockType)arg1 onQueue:(id)arg2;
- (id)reportMetrics;
- (void)removeAllUserSessionDataAsync:(id)arg1;
- (void)removeExpiredContentAsync:(id)arg1 reason:(unsigned long long)arg2 dispatchGroup:(id)arg3;
- (void)handleEmergencyDiskConditionWithDispatchGroup:(id)arg1;
- (id)kindName;
- (void)invalidate;
- (void)willShowLenses;
- (void)didHideLenses;
- (void)didSelectLens:(id)arg1;
- (void)didEndDisplayingLens:(id)arg1;
- (void)willDisplayLens:(id)arg1;
- (void)didUpdateActiveLensOrder:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)removeListener:(id)arg1;
- (void)addListener:(id)arg1;
- (void)queue:(id)arg1 didFinishOperation:(id)arg2 result:(id)arg3;
- (void)queue:(id)arg1 willStartOperation:(id)arg2;
- (void)clearCacheWithCompletionBlock:(CDUnknownBlockType)arg1;
- (void)clearInMemoryCache;
- (void)removeExpiredData:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (void)resumeDownloads;
- (void)pauseDownloads;
- (void)cancelDownloads;
- (void)fetchLenses:(id)arg1;
- (void)fetchAsset:(id)arg1 lens:(id)arg2 completionPerformer:(id)arg3 completion:(CDUnknownBlockType)arg4;
- (void)fetchCategory:(id)arg1 lens:(id)arg2 requestTiming:(long long)arg3;
- (void)fetchLenses:(id)arg1 requestTiming:(long long)arg2;
- (id)initWithFeatureSettingsManager:(id)arg1 userPreferences:(id)arg2 urlDataFetcher:(id)arg3 blobDataFetcher:(id)arg4 operationsFactory:(id)arg5 performer:(id)arg6;
- (_Bool)wasLensContenteFetchedToday:(id)arg1;
- (long long)lensContentFetchPolicy:(id)arg1;
- (long long)lensDataFetchPolicy:(id)arg1;
- (long long)fallbackPriorityForLens:(id)arg1 requestTiming:(long long)arg2;
- (long long)requestPriorityForLens:(id)arg1 requestTiming:(long long)arg2;
- (CDUnknownBlockType)warmupOperationsSettingsBlock;
- (CDUnknownBlockType)assetDownloadOperationsSettingsBlock;
- (CDUnknownBlockType)lensCategoryDownloadOperationsSettingsBlock;
- (CDUnknownBlockType)lensImageDownloadOperationsSettingsBlock;
- (CDUnknownBlockType)lensContentDownloadOperationsSettingsBlock;
- (CDUnknownBlockType)warmupOrderingComparator;
- (CDUnknownBlockType)orderingComparator;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSError, NSString;

@interface SCManagedVideoNoSoundLogger : NSObject
{
    _Bool _isAudioSessionDeactivated;
    int _lenseResumeCount;
    _Bool _retryAudioQueueSuccess;
    _Bool _retryAudioQueueSuccessSetDataSource;
    _Bool _lenseActiveWhileRecording;
    _Bool _audioQueueStarted;
    NSError *_audioSessionError;
    NSError *_audioQueueError;
    NSError *_assetWriterError;
    NSString *_brokenMicCodeType;
    NSString *_activeLensId;
    CDStruct_1b6d18a9 _firstWrittenAudioBufferDelay;
}

+ (void)logAudioSessionBrokenMicHaveBeenFixed:(id)arg1;
+ (void)logAudioSessionCategoryHaveBeenFixed;
+ (void)logVideoNoSoundHaveBeenFixedIfNeeded;
+ (id)appSessionIdForNoSound;
+ (void)startCountingVideoNoSoundHaveBeenFixed;
+ (void)increaseNoSoundCount;
+ (unsigned long long)noSoundCount;
@property(nonatomic) _Bool audioQueueStarted; // @synthesize audioQueueStarted=_audioQueueStarted;
@property(nonatomic) CDStruct_1b6d18a9 firstWrittenAudioBufferDelay; // @synthesize firstWrittenAudioBufferDelay=_firstWrittenAudioBufferDelay;
@property(retain, nonatomic) NSString *activeLensId; // @synthesize activeLensId=_activeLensId;
@property(nonatomic) _Bool lenseActiveWhileRecording; // @synthesize lenseActiveWhileRecording=_lenseActiveWhileRecording;
@property(retain, nonatomic) NSString *brokenMicCodeType; // @synthesize brokenMicCodeType=_brokenMicCodeType;
@property(nonatomic) _Bool retryAudioQueueSuccessSetDataSource; // @synthesize retryAudioQueueSuccessSetDataSource=_retryAudioQueueSuccessSetDataSource;
@property(nonatomic) _Bool retryAudioQueueSuccess; // @synthesize retryAudioQueueSuccess=_retryAudioQueueSuccess;
@property(retain, nonatomic) NSError *assetWriterError; // @synthesize assetWriterError=_assetWriterError;
@property(retain, nonatomic) NSError *audioQueueError; // @synthesize audioQueueError=_audioQueueError;
@property(retain, nonatomic) NSError *audioSessionError; // @synthesize audioSessionError=_audioSessionError;
- (void).cxx_destruct;
- (void)managedLensesProcessorDidCallResumeAllSounds;
- (void)_audioSessionDidActivate;
- (void)_audioSessionWillDeactivate;
- (void)checkVideoFileAndLogIfNeeded:(id)arg1;
- (void)resetAll;
- (void)dealloc;
- (id)init;

@end


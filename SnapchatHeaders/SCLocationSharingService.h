//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "SCLocationObserver-Protocol.h"
#import "SCMapGhostModeTimerControllerDelegate-Protocol.h"
#import "SCTimeProfilable-Protocol.h"

@class NSMutableArray, NSString, NSTimer, SCEncryptedCache, SCGCDTimer, SCLocationSharingServiceLogger, SCMapBeaconController, SCMapGhostModeTimerController, SCMapLocationSharingCacheObject, SCMapSerialAsyncBlockPerformer, SCQueuePerformer, SCUserSession;

@interface SCLocationSharingService : NSObject <SCMapGhostModeTimerControllerDelegate, SCLocationObserver, SCTimeProfilable>
{
    SCUserSession *_userSession;
    SCQueuePerformer *_performer;
    SCMapLocationSharingCacheObject *_mainThreadCacheObject;
    SCLocationSharingServiceLogger *_logger;
    SCMapBeaconController *_beaconController;
    _Bool _shouldDisplayGhostModeTimerDoneNotification;
    double _revalidateCachedPrefsRetryInterval;
    SCEncryptedCache *_cache;
    NSMutableArray *_pendingLocationUpdates;
    NSTimer *_pollingTimer;
    double _nextLocationUpdateAllowed;
    _Bool _isUploadingLocation;
    double _uploadLocationInterval;
    _Bool _gpsDidResetSinceLastLocationUpdate;
    SCMapSerialAsyncBlockPerformer *_asyncBlockPerformer;
    _Bool _isPeriodicallyUpdatingLocation;
    SCGCDTimer *_forcedLocationUpdateTimer;
    _Bool _wantsActiveLocationMonitoring;
    _Bool _serverNeedsBackgroundLocationUpdate;
    SCMapGhostModeTimerController *_ghostModeTimerController;
    SCMapLocationSharingCacheObject *_performerThreadCacheObject;
}

+ (int)context;
@property(retain, nonatomic) SCMapLocationSharingCacheObject *performerThreadCacheObject; // @synthesize performerThreadCacheObject=_performerThreadCacheObject;
@property _Bool serverNeedsBackgroundLocationUpdate; // @synthesize serverNeedsBackgroundLocationUpdate=_serverNeedsBackgroundLocationUpdate;
@property _Bool wantsActiveLocationMonitoring; // @synthesize wantsActiveLocationMonitoring=_wantsActiveLocationMonitoring;
@property(readonly, nonatomic) SCMapGhostModeTimerController *ghostModeTimerController; // @synthesize ghostModeTimerController=_ghostModeTimerController;
- (void).cxx_destruct;
- (void)_clearOnboardedState;
- (void)_setLocationPreferencesWithRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_generateCurrentDeviceData:(CDUnknownBlockType)arg1;
- (void)_uploadLocationUpdates:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)_setBirthday:(id)arg1;
- (void)_fetchLocationPreferencesWithCompletion:(CDUnknownBlockType)arg1;
- (void)onLocationAuthorizationStatusChange:(int)arg1;
- (void)onLocationError:(id)arg1;
- (void)onLocationUpdate:(id)arg1;
- (id)locationObserverIdentifier;
- (double)locationObserverDesiredAccuracy;
- (id)locationObserverDispatchQueue;
- (_Bool)locationObserverWantsBackgroundLocationMonitoring;
- (_Bool)locationObserverWantsActiveLocationMonitoring;
- (void)ghostModeTimerControllerWantsToExitGhostMode:(id)arg1;
- (void)ghostModeTimerController:(id)arg1 wantsToRefreshLocationSharingPreferencesWithCompletion:(CDUnknownBlockType)arg2;
- (void)_flushPendingLocationUpdates;
- (void)_flushPendingLocationUpdatesASAP;
- (_Bool)_isReadyToUploadLocations;
- (void)_timerDidFire:(id)arg1;
- (void)uploadLocations;
- (void)_updateCurrentLocation:(id)arg1 source:(long long)arg2 locationUpdateQueuedHandler:(CDUnknownBlockType)arg3;
- (void)updateCurrentLocation:(id)arg1 source:(long long)arg2;
- (void)serverRequestedBackgroundLocationUpdate;
- (void)_displayGhostModeTimerDoneNotificationIfPossible;
- (void)_exitGhostModeBecauseTimerExpired;
- (void)_postPreferencesSyncedNotification;
- (void)_postPreferencesUpdatedNotification;
@property(retain) SCMapLocationSharingCacheObject *mainThreadCacheObject;
- (void)_forcedLocationTick;
- (void)_delayForcedUpdateTimer;
- (void)_checkIfShouldStartForcedUpdates;
- (void)_stopPollingTimer;
- (void)_startPollingTimer;
- (void)_startPollingTimerIfForegrounded;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (_Bool)_isExplicitlyInGhostModeOrSimilar;
- (_Bool)_hasPreferences;
- (void)setDidOnboard;
- (void)setGhostMode:(id)arg1 sharingAudience:(id)arg2 customSharingModeFriendIds:(id)arg3 source:(long long)arg4 completion:(CDUnknownBlockType)arg5;
- (void)setBackgroundSharingEnabled:(_Bool)arg1 source:(long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)setGhostMode:(_Bool)arg1 duration:(double)arg2 updateType:(long long)arg3 source:(long long)arg4 completion:(CDUnknownBlockType)arg5;
- (void)setGhostMode:(_Bool)arg1 updateType:(long long)arg2 source:(long long)arg3 completion:(CDUnknownBlockType)arg4;
- (_Bool)onboarded;
- (_Bool)backgroundSharingEnabled;
- (id)customSharingModeFriendIds;
- (int)sharingAudience;
- (_Bool)ghostMode;
- (id)_preferences;
- (void)_updateLocationPreferences:(id)arg1 ghostModeDuration:(double)arg2 updateType:(long long)arg3 source:(long long)arg4 completion:(CDUnknownBlockType)arg5;
- (void)updateLocationPreferences:(id)arg1 source:(long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)revalidateCachedPreferencesWithSource:(long long)arg1;
- (void)ensureHasPreferencesWithSource:(long long)arg1 completion:(CDUnknownBlockType)arg2;
- (id)_fetchedLocationPreferences;
- (_Bool)needsPreferencesSync;
- (_Bool)hasFetchedLocationPreferences;
- (void)_syncPreferencesToServerIfNecessaryWithSource:(long long)arg1 updateType:(long long)arg2;
- (void)_updateWithLatestServerPreferencesWithFetchType:(unsigned long long)arg1 source:(long long)arg2 completion:(CDUnknownBlockType)arg3;
- (void)_savePerformerThreadCacheObjectToDisk;
- (void)_ensurePreferencesLoadedFromCacheWithCompletion:(CDUnknownBlockType)arg1;
- (void)_registerForTweakNotifications;
- (void)dealloc;
- (id)initWithUserSession:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


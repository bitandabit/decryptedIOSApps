//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import "SCArchiveObjectManager-Protocol.h"

@class NSArray, NSDate, NSDictionary, NSString, SCFeedManager, SCGroupManagerListenerAnnouncer, SCUserSession, SOJUIdentityMischief, SOJUIdentityMischiefMetadata, SOJUIdentityMischiefMobCreationRequest, UIView;
@protocol SCChatGroup, SCFriendManagerProvider, SCGroupLogger, SCGroupManagerAPI;

@protocol SCGroupManager <SCArchiveObjectManager>
- (id <SCChatGroup>)groupForGroup:(id <SCChatGroup>)arg1 blockedParticipantExceptions:(NSDictionary *)arg2;
- (id <SCChatGroup>)groupForGroup:(id <SCChatGroup>)arg1 participantLastContent:(NSDictionary *)arg2;
- (UIView *)avatarForUsername:(NSString *)arg1 userSession:(SCUserSession *)arg2;
- (_Bool)isConfigured;
- (_Bool)isLoaded;
- (void)notifyGroupsDidFinishLoading;
- (SCGroupManagerListenerAnnouncer *)announcer;
- (_Bool)isFriendWithUser:(NSString *)arg1;
- (_Bool)isLeavingGroupId:(NSString *)arg1;
- (_Bool)isUsernameBlocked:(NSString *)arg1;
- (NSString *)displayNameForParticipant:(NSString *)arg1;
- (_Bool)hasDisplayNameForParticipantUsername:(NSString *)arg1;
- (NSString *)selfUserId;
- (NSString *)selfUsername;
- (void)willSendToGroupIds:(NSArray *)arg1;
- (void)clearTemporaryGroupsExcludingGroupIds:(NSArray *)arg1;
- (void)clearTemporaryGroups;
- (void)clear;
- (void)addGroupIfItDoesntExist:(id <SCChatGroup>)arg1;
- (id <SCChatGroup>)updateGroupsWithSOJUGroup:(SOJUIdentityMischief *)arg1;
- (NSArray *)recentGroupsAndRecentFriends;
- (NSArray *)getRecentGroups;
- (NSArray *)getAllGroups;
- (NSArray *)getAllGroupIds;
- (NSArray *)dummyGroupParticipantsForFriends:(NSArray *)arg1;
- (void)updateGroupParticipantLastContentWithId:(NSString *)arg1 participantLastContent:(NSDictionary *)arg2;
- (void)refreshGroupIdentityInfo:(NSString *)arg1 completion:(void (^)(_Bool, id <SCChatGroup>))arg2;
- (void)updateGroupWithId:(NSString *)arg1 lastInteractionTimestamp:(NSDate *)arg2;
- (void)grantGroupExemptBlockedUsersWithId:(NSString *)arg1 newBlockedParticipantExceptions:(NSDictionary *)arg2;
- (id <SCChatGroup>)updateGroup:(NSString *)arg1 withMetaData:(SOJUIdentityMischiefMetadata *)arg2 withInteractionTimestamp:(NSDate *)arg3;
- (void)updateGroupMuteStateForGroupWithId:(NSString *)arg1 isMuted:(_Bool)arg2 shouldLog:(_Bool)arg3 updatedGroupBlock:(void (^)(id <SCChatGroup>))arg4;
- (void)updateGroupNotificationWithId:(NSString *)arg1 notificationOn:(_Bool)arg2 source:(long long)arg3 completion:(void (^)(_Bool, NSString *, id <SCChatGroup>))arg4;
- (void)addToGroupWithId:(NSString *)arg1 friends:(NSArray *)arg2 completion:(void (^)(_Bool, NSString *, id <SCChatGroup>))arg3;
- (void)leaveGroupWithId:(NSString *)arg1 completion:(void (^)(_Bool, NSString *, id <SCChatGroup>))arg2;
- (void)updateGroupNameWithId:(NSString *)arg1 groupName:(NSString *)arg2 completion:(void (^)(_Bool, NSString *, id <SCChatGroup>))arg3;
- (id <SCChatGroup>)localGroupWithFriends:(NSArray *)arg1 creationSource:(long long)arg2;
- (id <SCChatGroup>)getGroupWithId:(NSString *)arg1;
- (void)createGroupsOnServerIfNecessary:(NSArray *)arg1 source:(long long)arg2 groupStoryRequest:(SOJUIdentityMischiefMobCreationRequest *)arg3 completion:(void (^)(_Bool, NSString *, NSArray *))arg4;
- (void)syncGroupsWithConversationGroups:(NSArray *)arg1;
- (void)refreshWithFeedManager:(SCFeedManager *)arg1;
- (void)configureWithFriendManagerProvider:(id <SCFriendManagerProvider>)arg1 feedManager:(SCFeedManager *)arg2 managerAPI:(id <SCGroupManagerAPI>)arg3 logger:(id <SCGroupLogger>)arg4 selfUsername:(NSString *)arg5;
@end


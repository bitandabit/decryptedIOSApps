//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "SCLens-Protocol.h"

@class NSArray, NSDate, NSDictionary, NSSet, NSString, SCSponsoredSlug, SOJUUnlockableTrackInfo, SOJUUnlockablesAttachment, UIImage;

@interface SCLens : NSObject <SCLens>
{
    _Bool _isFeatured;
    _Bool _isSponsored;
    _Bool _isDemo;
    _Bool _isThirdParty;
    _Bool _isStudioPreview;
    _Bool _hasContextCards;
    _Bool _isRanked;
    NSString *_lensId;
    NSString *_name;
    NSString *_code;
    NSString *_hintId;
    NSDictionary *_hintTranslations;
    NSString *_contentURL;
    NSString *_iconURL;
    NSString *_filterOverlayImageURL;
    NSString *_bitmojiComicId;
    NSString *_signature;
    NSDate *_expirationDate;
    long long _type;
    long long _section;
    NSArray *_categories;
    NSArray *_categoriesData;
    SCSponsoredSlug *_sponsoredSlug;
    NSArray *_scheduleIntervals;
    NSDate *_demoStartDate;
    long long _absoluteCarouselPosition;
    SOJUUnlockableTrackInfo *_unlockableTrackInfo;
    NSArray *_manifest;
    unsigned long long _activationCameraPosition;
    NSString *_encryptedGeoData;
    NSString *_unlockCompanionBackReferenceId;
    NSString *_lensCreatorUsername;
    NSString *_lensAttributionName;
    NSSet *_cameraContexts;
    NSSet *_applicableContexts;
    NSString *_onDemandTemplateId;
    SOJUUnlockablesAttachment *_unlockablesAttachment;
    long long _priority;
    NSString *_scannedData;
    NSString *_lensCreatorUserId;
}

+ (unsigned long long *)fasterCodingKeys;
+ (unsigned long long)fasterCodingVersion;
+ (id)placeholderImage;
+ (id)pathForBundledResource:(id)arg1 ofType:(id)arg2 inDirectory:(id)arg3;
+ (id)bundledLensWithCode:(id)arg1;
+ (id)rawBundledLenses;
+ (id)bundledLensFromDictionary:(id)arg1;
+ (void)initialize;
+ (void)resetThumbnailImageCache;
+ (void)resetFilterOverlayImagePathCache;
+ (void)resetImageCache;
+ (void)resetContentPathCache;
+ (void)cacheThumbnailImage:(id)arg1 forUrlString:(id)arg2;
+ (id)lensThumbnailImageForUrlString:(id)arg1;
+ (void)cacheFilterOverlayImagePath:(id)arg1 forLens:(id)arg2;
+ (void)cacheImage:(id)arg1 forLens:(id)arg2;
+ (void)cacheContentPath:(id)arg1 forLens:(id)arg2;
+ (id)contentPathForStudioLensWithCode:(id)arg1;
+ (id)studioLensMetadataFromContentPath:(id)arg1;
+ (long long)lensSourceFromApplicableContext:(id)arg1;
+ (id)applicableContextForMemories;
+ (id)applicableContextForPreviewNoFace;
+ (id)applicableContextForPreview;
+ (id)applicableContextForVideoChat;
+ (id)applicableContextForReplyCamera;
+ (id)applicableContextForLiveCamera;
+ (id)contextForRearFacingCamera;
+ (id)contextForFrontFacingCamera;
@property(readonly, copy, nonatomic) NSString *lensCreatorUserId; // @synthesize lensCreatorUserId=_lensCreatorUserId;
@property(readonly, copy, nonatomic) NSString *scannedData; // @synthesize scannedData=_scannedData;
@property(readonly, nonatomic) long long priority; // @synthesize priority=_priority;
@property(readonly, nonatomic) _Bool isRanked; // @synthesize isRanked=_isRanked;
@property(readonly, copy, nonatomic) SOJUUnlockablesAttachment *unlockablesAttachment; // @synthesize unlockablesAttachment=_unlockablesAttachment;
@property(readonly, copy, nonatomic) NSString *onDemandTemplateId; // @synthesize onDemandTemplateId=_onDemandTemplateId;
@property(readonly, nonatomic) _Bool hasContextCards; // @synthesize hasContextCards=_hasContextCards;
@property(readonly, copy, nonatomic) NSSet *applicableContexts; // @synthesize applicableContexts=_applicableContexts;
@property(readonly, copy, nonatomic) NSSet *cameraContexts; // @synthesize cameraContexts=_cameraContexts;
@property(readonly, copy, nonatomic) NSString *lensAttributionName; // @synthesize lensAttributionName=_lensAttributionName;
@property(readonly, copy, nonatomic) NSString *lensCreatorUsername; // @synthesize lensCreatorUsername=_lensCreatorUsername;
@property(readonly, copy, nonatomic) NSString *unlockCompanionBackReferenceId; // @synthesize unlockCompanionBackReferenceId=_unlockCompanionBackReferenceId;
@property(readonly, copy, nonatomic) NSString *encryptedGeoData; // @synthesize encryptedGeoData=_encryptedGeoData;
@property(readonly, nonatomic) unsigned long long activationCameraPosition; // @synthesize activationCameraPosition=_activationCameraPosition;
@property(readonly, nonatomic) _Bool isStudioPreview; // @synthesize isStudioPreview=_isStudioPreview;
@property(readonly, nonatomic) _Bool isThirdParty; // @synthesize isThirdParty=_isThirdParty;
@property(readonly, copy, nonatomic) NSArray *manifest; // @synthesize manifest=_manifest;
@property(readonly, copy, nonatomic) SOJUUnlockableTrackInfo *unlockableTrackInfo; // @synthesize unlockableTrackInfo=_unlockableTrackInfo;
@property(readonly, nonatomic) long long absoluteCarouselPosition; // @synthesize absoluteCarouselPosition=_absoluteCarouselPosition;
@property(readonly, copy, nonatomic) NSDate *demoStartDate; // @synthesize demoStartDate=_demoStartDate;
@property(readonly, nonatomic) _Bool isDemo; // @synthesize isDemo=_isDemo;
@property(readonly, copy, nonatomic) NSArray *scheduleIntervals; // @synthesize scheduleIntervals=_scheduleIntervals;
@property(readonly, copy, nonatomic) SCSponsoredSlug *sponsoredSlug; // @synthesize sponsoredSlug=_sponsoredSlug;
@property(readonly, nonatomic) _Bool isSponsored; // @synthesize isSponsored=_isSponsored;
@property(readonly, nonatomic) _Bool isFeatured; // @synthesize isFeatured=_isFeatured;
@property(readonly, copy, nonatomic) NSArray *categoriesData; // @synthesize categoriesData=_categoriesData;
@property(readonly, copy, nonatomic) NSArray *categories; // @synthesize categories=_categories;
@property(readonly, nonatomic) long long section; // @synthesize section=_section;
@property(readonly, nonatomic) long long type; // @synthesize type=_type;
@property(readonly, copy, nonatomic) NSDate *expirationDate; // @synthesize expirationDate=_expirationDate;
@property(readonly, copy, nonatomic) NSString *signature; // @synthesize signature=_signature;
@property(readonly, copy, nonatomic) NSString *bitmojiComicId; // @synthesize bitmojiComicId=_bitmojiComicId;
@property(readonly, copy, nonatomic) NSString *filterOverlayImageURL; // @synthesize filterOverlayImageURL=_filterOverlayImageURL;
@property(readonly, copy, nonatomic) NSString *iconURL; // @synthesize iconURL=_iconURL;
@property(readonly, copy, nonatomic) NSString *contentURL; // @synthesize contentURL=_contentURL;
@property(readonly, copy, nonatomic) NSDictionary *hintTranslations; // @synthesize hintTranslations=_hintTranslations;
@property(readonly, copy, nonatomic) NSString *hintId; // @synthesize hintId=_hintId;
@property(readonly, copy, nonatomic) NSString *code; // @synthesize code=_code;
@property(readonly, copy, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, copy, nonatomic) NSString *lensId; // @synthesize lensId=_lensId;
- (void).cxx_destruct;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
- (_Bool)isEqual:(id)arg1;
- (void)setSInt64:(long long)arg1 forUInt64Key:(unsigned long long)arg2;
- (void)setSInt32:(int)arg1 forUInt64Key:(unsigned long long)arg2;
- (void)setBool:(_Bool)arg1 forUInt64Key:(unsigned long long)arg2;
- (void)setObject:(id)arg1 forUInt64Key:(unsigned long long)arg2;
- (void)decodeWithFasterDecoder:(id)arg1;
- (void)encodeWithFasterCoder:(id)arg1;
- (_Bool)preferFasterCoding;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)copyWithZone:(struct _NSZone *)arg1;
- (id)initWithLensId:(id)arg1 name:(id)arg2 code:(id)arg3 hintId:(id)arg4 hintTranslations:(id)arg5 contentURL:(id)arg6 iconURL:(id)arg7 filterOverlayImageURL:(id)arg8 bitmojiComicId:(id)arg9 signature:(id)arg10 expirationDate:(id)arg11 type:(long long)arg12 section:(long long)arg13 categories:(id)arg14 categoriesData:(id)arg15 isFeatured:(_Bool)arg16 isSponsored:(_Bool)arg17 sponsoredSlug:(id)arg18 scheduleIntervals:(id)arg19 isDemo:(_Bool)arg20 demoStartDate:(id)arg21 absoluteCarouselPosition:(long long)arg22 unlockableTrackInfo:(id)arg23 manifest:(id)arg24 isThirdParty:(_Bool)arg25 isStudioPreview:(_Bool)arg26 activationCameraPosition:(unsigned long long)arg27 encryptedGeoData:(id)arg28 unlockCompanionBackReferenceId:(id)arg29 lensCreatorUsername:(id)arg30 lensAttributionName:(id)arg31 cameraContexts:(id)arg32 applicableContexts:(id)arg33 hasContextCards:(_Bool)arg34 onDemandTemplateId:(id)arg35 unlockablesAttachment:(id)arg36 isRanked:(_Bool)arg37 priority:(long long)arg38 scannedData:(id)arg39 lensCreatorUserId:(id)arg40;
@property(readonly, nonatomic) UIImage *lensIcon;
@property(readonly, nonatomic) _Bool isCreateYourOwnLens;
@property(readonly, nonatomic) _Bool isGroupedOnDemandLensOnCamera;
@property(readonly, nonatomic) _Bool isStudioLens;
@property(readonly, nonatomic) _Bool isVideoChatOriginalLens;
@property(readonly, nonatomic) _Bool isOnDemandAddNewLens;
@property(readonly, nonatomic) _Bool isPlaceholderLens;
@property(readonly, nonatomic) _Bool isOriginalLens;
@property(readonly, nonatomic) _Bool isDummyLens;
- (_Bool)hasSnapcodeCategory;
- (_Bool)hasSelfieCategory;
@property(readonly, nonatomic) _Bool isMemoriesInteractive;
@property(readonly, nonatomic) NSString *snappableDisplayName;
@property(readonly, nonatomic) _Bool isSnappable;
- (id)effectInfo;
@property(readonly, nonatomic) _Bool shouldPrefetchForInactiveLensUser;
@property(readonly, nonatomic) _Bool isNewUserWelcomeLens;
- (_Bool)belongsToForceDownloadCategory;
- (id)filterOverlayImagePathCacheKey;
@property(readonly, nonatomic) NSString *filterOverlayImagePath;
- (id)imageCacheKey;
@property(readonly, nonatomic) UIImage *image;
- (id)contentCacheKey;
@property(readonly, nonatomic) NSString *contentPath;
@property(readonly, nonatomic) _Bool isFetched;
@property(nonatomic) _Bool shouldForceReload;
@property(readonly, nonatomic, getter=isOnDemandLensOnCamera) _Bool onDemandLensOnCamera;
- (_Bool)supportsMetadataDebug;
- (void)extraLensPushedDate:(CDUnknownBlockType)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end


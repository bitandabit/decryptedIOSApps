//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

@class GPBMessage, NSArray, NSData, NSMutableArray, NSOutputStream, NSString;

#pragma mark Function Pointers and Blocks

typedef void (*CDUnknownFunctionPointerType)(void); // return type and parameters are unknown

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct Actor<mbgl::ResourceTransform>;

struct Actor<std::__1::function<void (std::exception_ptr, mbgl::Image<mbgl::ImageAlphaMode::Premultiplied>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, std::__1::function<mapbox::geometry::point<double>(const mbgl::LatLng &)>)>>;

struct Allocator;

struct AmbientLight {
    _Bool _field1;
    float _field2;
    float _field3;
    struct tvec3<float, glm::precision::packed_highp> _field4;
};

struct Analyzer;

struct Arena;

struct Array<float, 2, -1, 0, 2, -1> {
    struct DenseStorage<float, -1, 2, -1, 0> _field1;
};

struct AsyncRequest;

struct AsyncTask;

struct AudioAnalysisData {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    float _field3;
};

struct AudioBuffer {
    unsigned int _field1;
    unsigned int _field2;
    void *_field3;
};

struct AudioBufferList {
    unsigned int _field1;
    struct AudioBuffer _field2[1];
};

struct AudioChainMain {
    struct unique_ptr<LS::AudioChain::AudioChainMain::Impl, std::__1::default_delete<LS::AudioChain::AudioChainMain::Impl>> _field1;
};

struct AudioQueueBuffer {
    unsigned int _field1;
    void *_field2;
    unsigned int _field3;
    void *_field4;
    unsigned int _field5;
    struct AudioStreamPacketDescription *_field6;
    unsigned int _field7;
};

struct AudioSessionObserver {
    CDUnknownFunctionPointerType *_field1;
};

struct AudioStreamBasicDescription {
    double mSampleRate;
    unsigned int mFormatID;
    unsigned int mFormatFlags;
    unsigned int mBytesPerPacket;
    unsigned int mFramesPerPacket;
    unsigned int mBytesPerFrame;
    unsigned int mChannelsPerFrame;
    unsigned int mBitsPerChannel;
    unsigned int mReserved;
};

struct AudioStreamPacketDescription {
    long long _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct AuthChallengeInfo {
    long long _field1;
    _Bool _field2;
    struct Origin _field3;
    basic_string_a490aa4c _field4;
    basic_string_a490aa4c _field5;
};

struct AuthCredentials {
    struct basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short>> _field1;
    struct basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short>> _field2;
};

struct BackgroundLayer {
    CDUnknownFunctionPointerType *_field1;
    struct Immutable<mbgl::style::Layer::Impl> _field2;
    struct LayerObserver *_field3;
    struct any _field4;
};

struct BaseExpr<bool>;

struct BindStateBase;

struct Bitmoji3DData {
    basic_string_a490aa4c _field1;
    int _field2;
    struct unordered_map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> _field3;
};

struct Borrowed {
    struct SQLiteConnection *mObjectPtr;
    struct ObjectPool<SQLiteConnection, 63> *mConnectionPoolPtr;
};

struct Builder {
    id _field1;
    id _field2;
    Class _field3;
    unsigned long long _field4;
    struct Borrowed _field5;
};

struct CATransform3D {
    double m11;
    double m12;
    double m13;
    double m14;
    double m21;
    double m22;
    double m23;
    double m24;
    double m31;
    double m32;
    double m33;
    double m34;
    double m41;
    double m42;
    double m43;
    double m44;
};

struct CGAffineTransform {
    double a;
    double b;
    double c;
    double d;
    double tx;
    double ty;
};

struct CGPoint {
    double x;
    double y;
};

struct CGRect {
    struct CGPoint origin;
    struct CGSize size;
};

struct CGSize {
    double width;
    double height;
};

struct CGVector {
    double dx;
    double dy;
};

struct CLLocationCoordinate2D {
    double latitude;
    double longitude;
};

struct CLSMachOFile {
    int fd;
    unsigned long long mappedSize;
    void *mappedFile;
};

struct CLSMachOSlice {
    void *startAddress;
    int cputype;
    int cpusubtype;
};

struct Callback<void (bool, const std::__1::basic_string<base::char16, base::string16_char_traits>&, const std::__1::basic_string<base::char16, base::string16_char_traits>&), base::internal::CopyMode::Copyable, base::internal::RepeatMode::Repeating> {
    struct scoped_refptr<base::internal::BindStateBase> _field1;
};

struct Callback<void (int), base::internal::CopyMode::Copyable, base::internal::RepeatMode::Repeating> {
    struct scoped_refptr<base::internal::BindStateBase> _field1;
};

struct CallingManager;

struct CamIntMat {
    struct Matrix<float, 3, 3, 0, 3, 3> mMat;
    struct Matrix<float, 3, 3, 0, 3, 3> mInvMat;
};

struct CameraInfo {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    int _field3;
    struct Size<int> _field4;
    struct RectTransform _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
};

struct CameraOptions {
    struct optional<mbgl::LatLng> _field1;
    struct EdgeInsets _field2;
    struct optional<mapbox::geometry::point<double>> _field3;
    struct optional<double> _field4;
    struct optional<double> _field5;
    struct optional<double> _field6;
};

struct Candide;

struct CertVerifier;

struct CircleLayer {
    CDUnknownFunctionPointerType *_field1;
    struct Immutable<mbgl::style::Layer::Impl> _field2;
    struct LayerObserver *_field3;
    struct any _field4;
};

struct Color {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct CompassTrackingData {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    _Bool _field3;
    int _field4;
    double _field5;
};

struct CompletionHandler;

struct ComplexEffect;

struct Component {
    int _field1;
    int _field2;
};

struct ConnectTiming {
    struct TimeTicks _field1;
    struct TimeTicks _field2;
    struct TimeTicks _field3;
    struct TimeTicks _field4;
    struct TimeTicks _field5;
    struct TimeTicks _field6;
};

struct Context;

struct CookieStore;

struct CoreManager;

struct CronetEnvironment {
    _Bool _field1;
    _Bool _field2;
    basic_string_a490aa4c _field3;
    basic_string_a490aa4c _field4;
    basic_string_a490aa4c _field5;
    basic_string_a490aa4c _field6;
    int _field7;
    struct list<net::HostPortPair, std::__1::allocator<net::HostPortPair>> _field8;
    struct unique_ptr<base::Thread, std::__1::default_delete<base::Thread>> _field9;
    struct unique_ptr<base::Thread, std::__1::default_delete<base::Thread>> _field10;
    struct unique_ptr<base::Thread, std::__1::default_delete<base::Thread>> _field11;
    struct unique_ptr<base::Thread, std::__1::default_delete<base::Thread>> _field12;
    struct scoped_refptr<base::SequencedTaskRunner> _field13;
    struct unique_ptr<net::CertVerifier, std::__1::default_delete<net::CertVerifier>> _field14;
    struct unique_ptr<net::CookieStore, std::__1::default_delete<net::CookieStore>> _field15;
    struct unique_ptr<net::URLRequestContext, std::__1::default_delete<net::URLRequestContext>> _field16;
    struct scoped_refptr<net::URLRequestContextGetter> _field17;
    basic_string_a490aa4c _field18;
    _Bool _field19;
    struct unique_ptr<net::NetLog, std::__1::default_delete<net::NetLog>> _field20;
    struct unique_ptr<net::WriteToFileNetLogObserver, std::__1::default_delete<net::WriteToFileNetLogObserver>> _field21;
};

struct CustomLayer {
    CDUnknownFunctionPointerType *_field1;
    struct Immutable<mbgl::style::Layer::Impl> _field2;
    struct LayerObserver *_field3;
    struct any _field4;
};

struct DecoderCallback;

struct DefaultFileSource {
    CDUnknownFunctionPointerType *_field1;
    struct shared_ptr<mbgl::FileSource> _field2;
    struct unique_ptr<mbgl::util::Thread<mbgl::DefaultFileSource::Impl>, std::__1::default_delete<mbgl::util::Thread<mbgl::DefaultFileSource::Impl>>> _field3;
    struct mutex _field4;
    basic_string_a490aa4c _field5;
    struct mutex _field6;
    basic_string_a490aa4c _field7;
};

struct Delegate;

struct DenseStorage<float, -1, 2, -1, 0> {
    float *_field1;
    long long _field2;
};

struct DenseStorage<float, 9, 3, 3, 0> {
    struct plain_array<float, 9, 0, 0> m_data;
};

struct DetachedBuffer {
    struct Allocator *allocator_;
    _Bool own_allocator_;
    char *buf_;
    unsigned long long reserved_;
    char *cur_;
    unsigned long long size_;
};

struct DeviceMotionTrackingData {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    _Bool _field3;
    struct matrix3 _field4;
    struct vec3 _field5;
};

struct DiffuseLight {
    _Bool _field1;
    struct vector<glm::tvec3<float, glm::precision::packed_highp>, std::__1::allocator<glm::tvec3<float, glm::precision::packed_highp>>> _field2;
};

struct DirectRendererCallback;

struct DirectionalLight {
    _Bool _field1;
    float _field2;
    struct tvec3<float, glm::precision::packed_highp> _field3;
    struct tvec3<float, glm::precision::packed_highp> _field4;
};

struct ECDH {
    struct ec_key_st *_field1;
};

struct EdgeInsets {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct EncoderCallback;

struct Error {
    int mCode;
    int mQueryType;
    int mOperation;
};

struct Expression;

struct EyewearAuthenticator {
    unsigned char _field1[1280];
    unsigned int _field2;
    unsigned char _field3[20];
};

struct EyewearPairing {
    unsigned char _field1[3];
    unsigned char _field2[32];
    unsigned char _field3[8];
    unsigned char _field4[16];
};

struct Face3DFit;

struct Face3DModel;

struct Face3DTopology;

struct FaceBioGraphics;

struct FaceDetectorData {
    struct vector<LS::Rect<float>, std::__1::allocator<LS::Rect<float>>> _field1;
};

struct FaceExpressions {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct vector<LS::Expression, std::__1::allocator<LS::Expression>> _field3;
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> _field4;
};

struct FaceMesh {
    struct vector<glm::tvec3<float, glm::precision::packed_highp>, std::__1::allocator<glm::tvec3<float, glm::precision::packed_highp>>> _field1;
    struct vector<glm::tvec3<float, glm::precision::packed_highp>, std::__1::allocator<glm::tvec3<float, glm::precision::packed_highp>>> _field2;
    struct shared_ptr<LS::Face3DTopology> _field3;
    struct tmat4x4<float, glm::precision::packed_highp> _field4;
    struct vector<float, std::__1::allocator<float>> _field5;
};

struct FaceMorph;

struct FaceTrackingData {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct FaceDetectorData _field3;
    int _field4;
    _Bool _field5;
    struct vector<std::__1::unique_ptr<LS::ImageObjC, std::__1::default_delete<LS::ImageObjC>>, std::__1::allocator<std::__1::unique_ptr<LS::ImageObjC, std::__1::default_delete<LS::ImageObjC>>>> _field6;
    struct vector<LS::Landmarks, std::__1::allocator<LS::Landmarks>> _field7;
    struct vector<LS::FaceMesh, std::__1::allocator<LS::FaceMesh>> _field8;
    struct vector<std::__1::shared_ptr<LS::ImageObjC>, std::__1::allocator<std::__1::shared_ptr<LS::ImageObjC>>> _field9;
    _Bool _field10;
    struct shared_ptr<LS::Candide> _field11;
    struct FaceExpressions _field12;
};

struct FieldLoc;

struct FileRotatingLogSink;

struct FileSource;

struct FillExtrusionLayer {
    CDUnknownFunctionPointerType *_field1;
    struct Immutable<mbgl::style::Layer::Impl> _field2;
    struct LayerObserver *_field3;
    struct any _field4;
};

struct FillLayer {
    CDUnknownFunctionPointerType *_field1;
    struct Immutable<mbgl::style::Layer::Impl> _field2;
    struct LayerObserver *_field3;
    struct any _field4;
};

struct Filter {
    unsigned long long _field1;
    struct type _field2;
};

struct Flag;

struct FlatBufferBuilder {
    struct vector_downward buf_;
    struct vector<flatbuffers::FlatBufferBuilder::FieldLoc, std::__1::allocator<flatbuffers::FlatBufferBuilder::FieldLoc>> offsetbuf_;
    unsigned short max_voffset_;
    _Bool nested;
    _Bool finished;
    vector_a9c0768e vtables_;
    unsigned long long minalign_;
    _Bool force_defaults_;
    _Bool dedup_vtables_;
    struct set<flatbuffers::Offset<flatbuffers::String>, flatbuffers::FlatBufferBuilder::StringOffsetCompare, std::__1::allocator<flatbuffers::Offset<flatbuffers::String>>> *string_pool;
};

struct FrameBuffer;

struct FunctionDefLibrary;

struct GPBCodedInputStreamState {
    char *bytes;
    unsigned long long bufferSize;
    unsigned long long bufferPos;
    unsigned long long currentLimit;
    int lastTag;
    unsigned long long recursionDepth;
};

struct GPBExtensionDescription {
    CDUnion_88782d86 _field1;
    char *_field2;
    char *_field3;
    char *_field4;
    CDUnknownFunctionPointerType _field5;
    int _field6;
    unsigned char _field7;
    unsigned char _field8;
};

struct GPBExtensionRange {
    unsigned int _field1;
    unsigned int _field2;
};

struct GPBMessageFieldDescription {
    char *_field1;
    union {
        char *_field1;
        CDUnknownFunctionPointerType _field2;
        CDUnknownFunctionPointerType _field3;
    } _field2;
    unsigned int _field3;
    int _field4;
    unsigned int _field5;
    unsigned short _field6;
    unsigned char _field7;
};

struct GPBMessage_Storage {
    unsigned int _field1[0];
};

struct GPBOutputBufferState {
    char *bytes;
    unsigned long long size;
    unsigned long long position;
    NSOutputStream *output;
};

struct GURL {
    basic_string_a490aa4c _field1;
    _Bool _field2;
    struct Parsed _field3;
    struct unique_ptr<GURL, std::__1::default_delete<GURL>> _field4;
};

struct GeoJSONSource {
    CDUnknownFunctionPointerType *_field1;
    struct Immutable<mbgl::style::Source::Impl> _field2;
    struct SourceObserver *_field3;
    _Bool _field4;
    struct any _field5;
    struct optional<std::__1::basic_string<char>> _field6;
    struct unique_ptr<mbgl::AsyncRequest, std::__1::default_delete<mbgl::AsyncRequest>> _field7;
};

struct GeoParserStruct {
    int _field1;
    int _field2;
    char _field3[40];
    char _field4[40];
    char _field5[40];
    char _field6[40];
    char _field7[40];
};

struct GeoTrackingData {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct WeatherTrackingData _field3;
    struct TaxonomyData _field4;
    _Bool _field5;
};

struct GraphDef {
    CDUnknownFunctionPointerType *_vptr$MessageLite;
    struct InternalMetadataWithArena _internal_metadata_;
    _Bool _is_default_instance_;
    struct RepeatedPtrField<tensorflow::NodeDef> node_;
    struct VersionDef *versions_;
    struct FunctionDefLibrary *library_;
    int version_;
    int _cached_size_;
};

struct Handle<std::__1::shared_ptr<addlive::DecoderCallback>, std::__1::shared_ptr<addlive::DecoderCallback>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_5d6e4d93 m_obj;
};

struct Handle<std::__1::shared_ptr<addlive::DirectRendererCallback>, std::__1::shared_ptr<addlive::DirectRendererCallback>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_fe59ffec m_obj;
};

struct Handle<std::__1::shared_ptr<addlive::EncoderCallback>, std::__1::shared_ptr<addlive::EncoderCallback>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_a3542306 m_obj;
};

struct Handle<std::__1::shared_ptr<addlive::NumberResponder>, std::__1::shared_ptr<addlive::NumberResponder>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_b2984fc8 m_obj;
};

struct Handle<std::__1::shared_ptr<addlive::Service>, std::__1::shared_ptr<addlive::Service>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_756dba43 m_obj;
};

struct Handle<std::__1::shared_ptr<addlive::ServiceListener>, std::__1::shared_ptr<addlive::ServiceListener>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_5fdff3df m_obj;
};

struct Handle<std::__1::shared_ptr<addlive::StringDictResponder>, std::__1::shared_ptr<addlive::StringDictResponder>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_13f5941a m_obj;
};

struct Handle<std::__1::shared_ptr<addlive::StringListResponder>, std::__1::shared_ptr<addlive::StringListResponder>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_382e76bc m_obj;
};

struct Handle<std::__1::shared_ptr<addlive::StringResponder>, std::__1::shared_ptr<addlive::StringResponder>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_c924c628 m_obj;
};

struct Handle<std::__1::shared_ptr<addlive::VoidResponder>, std::__1::shared_ptr<addlive::VoidResponder>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_c0f0acb2 m_obj;
};

struct Handle<std::__1::shared_ptr<talkcorev3::AsyncTask>, std::__1::shared_ptr<talkcorev3::AsyncTask>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_8537d7cf m_obj;
};

struct Handle<std::__1::shared_ptr<talkcorev3::CallingManager>, std::__1::shared_ptr<talkcorev3::CallingManager>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_890eee60 m_obj;
};

struct Handle<std::__1::shared_ptr<talkcorev3::CompletionHandler>, std::__1::shared_ptr<talkcorev3::CompletionHandler>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_acde51be m_obj;
};

struct Handle<std::__1::shared_ptr<talkcorev3::Logger>, std::__1::shared_ptr<talkcorev3::Logger>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_c04af217 m_obj;
};

struct Handle<std::__1::shared_ptr<talkcorev3::MetricsMetadataContainer>, std::__1::shared_ptr<talkcorev3::MetricsMetadataContainer>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_e6ea19ac m_obj;
};

struct Handle<std::__1::shared_ptr<talkcorev3::MetricsReporter>, std::__1::shared_ptr<talkcorev3::MetricsReporter>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_ecb86bd5 m_obj;
};

struct Handle<std::__1::shared_ptr<talkcorev3::Session>, std::__1::shared_ptr<talkcorev3::Session>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_785f52f1 m_obj;
};

struct Handle<std::__1::shared_ptr<talkcorev3::SessionDelegate>, std::__1::shared_ptr<talkcorev3::SessionDelegate>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_ba403e89 m_obj;
};

struct Handle<std::__1::shared_ptr<talkcorev3::TalkCore>, std::__1::shared_ptr<talkcorev3::TalkCore>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_6e98dd72 m_obj;
};

struct Handle<std::__1::shared_ptr<talkcorev3::TalkCoreDelegate>, std::__1::shared_ptr<talkcorev3::TalkCoreDelegate>> {
    struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> m_cache;
    shared_ptr_49b51578 m_obj;
};

struct HashValue;

struct HeaderKeyValuePair;

struct Histogram;

struct HistogramData {
    vector_a9c0768e _field1;
    vector_a9c0768e _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    float _field6;
    struct shared_ptr<LS::Histogram> _field7;
};

struct HostPortPair {
    basic_string_a490aa4c _field1;
    unsigned short _field2;
};

struct HourlyWeatherForecast;

struct HttpProtocolHandlerCore {
    CDUnknownFunctionPointerType *_field1;
    long long _field2;
    struct ThreadChecker _field3;
    id _field4;
    struct scoped_refptr<net::IOBuffer> _field5;
    struct scoped_nsobject<NSMutableURLRequest> _field6;
    struct scoped_nsobject<CRWHTTPStreamDelegate> _field7;
    struct vector<std::__1::unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>>, std::__1::allocator<std::__1::unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>>>> _field8;
    struct URLRequest *_field9;
    struct WeakPtr<net::RequestTracker> _field10;
};

struct HttpRequestHeaders {
    struct vector<net::HttpRequestHeaders::HeaderKeyValuePair, std::__1::allocator<net::HttpRequestHeaders::HeaderKeyValuePair>> _field1;
};

struct HttpResponseHeaders;

struct HttpResponseInfo {
    _Bool _field1;
    int _field2;
    _Bool _field3;
    _Bool _field4;
    _Bool _field5;
    _Bool _field6;
    _Bool _field7;
    struct ProxyServer _field8;
    _Bool _field9;
    _Bool _field10;
    struct HostPortPair _field11;
    basic_string_a490aa4c _field12;
    int _field13;
    struct Time _field14;
    struct Time _field15;
    struct scoped_refptr<net::AuthChallengeInfo> _field16;
    struct scoped_refptr<net::SSLCertRequestInfo> _field17;
    struct SSLInfo _field18;
    struct scoped_refptr<net::HttpResponseHeaders> _field19;
    struct HttpVaryData _field20;
    struct scoped_refptr<net::IOBufferWithSize> _field21;
};

struct HttpResult {
    basic_string_a490aa4c body;
    int resultCode;
    struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> headers;
};

struct HttpVaryData {
    struct MD5Digest _field1;
    _Bool _field2;
};

struct HybridClustering {
    int _field1;
    _Bool _field2;
    float _field3;
    float _field4;
    float _field5;
    float _field6;
    float _field7;
    float _field8;
    float _field9;
    float _field10;
    float _field11;
    float _field12;
    float _field13;
    vector_9c221dbc _field14;
    vector_9c221dbc _field15;
    vector_9c221dbc _field16;
    vector_9c221dbc _field17;
    struct vector<std::__1::vector<float, std::__1::allocator<float>>, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float>>>> _field18;
    struct vector<std::__1::vector<float, std::__1::allocator<float>>, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float>>>> _field19;
    int _field20;
    struct Mat _field21;
};

struct IGListSectionEntry;

struct IOBuffer;

struct IOBufferWithSize;

struct Image {
    struct Immutable<mbgl::style::Image::Impl> _field1;
};

struct Image<mbgl::ImageAlphaMode::Premultiplied> {
    struct Size _field1;
    struct unique_ptr<unsigned char [], std::__1::default_delete<unsigned char []>> _field2;
};

struct ImageBase;

struct ImageObjC;

struct ImageSource {
    CDUnknownFunctionPointerType *_field1;
    struct Immutable<mbgl::style::Source::Impl> _field2;
    struct SourceObserver *_field3;
    _Bool _field4;
    struct any _field5;
    struct optional<std::__1::basic_string<char>> _field6;
    struct unique_ptr<mbgl::AsyncRequest, std::__1::default_delete<mbgl::AsyncRequest>> _field7;
};

struct ImageTrackingData {
    _Bool _field1;
    struct shared_ptr<LS::ImageBase> _field2;
};

struct Immutable<mbgl::style::Image::Impl> {
    struct shared_ptr<const mbgl::style::Image::Impl> _field1;
};

struct Immutable<mbgl::style::Layer::Impl> {
    struct shared_ptr<const mbgl::style::Layer::Impl> _field1;
};

struct Immutable<mbgl::style::Light::Impl> {
    struct shared_ptr<const mbgl::style::Light::Impl> _field1;
};

struct Immutable<mbgl::style::Source::Impl> {
    struct shared_ptr<const mbgl::style::Source::Impl> _field1;
};

struct Impl;

struct InternalMetadataWithArena {
    void *ptr_;
};

struct IosCamera {
    CDUnknownFunctionPointerType *_field1;
    struct shared_ptr<adl::media::video::ObjectPoolX<adl::media::video::IosNativeFrame>> _field2;
    struct mutex _field3;
    struct unique_ptr<adl::media::IosCamera::Impl, std::__1::default_delete<adl::media::IosCamera::Impl>> _field4;
    struct mutex _field5;
    struct set<std::__1::shared_ptr<adl::media::FrameReceiver>, std::__1::less<std::__1::shared_ptr<adl::media::FrameReceiver>>, std::__1::allocator<std::__1::shared_ptr<adl::media::FrameReceiver>>> _field6;
    _Bool _field7;
};

struct KnnFaceRecognizer {
    int _field1;
    int _field2;
    int _field3;
    float _field4;
    float _field5;
    struct vector<float, std::__1::allocator<float>> _field6;
    struct vector<int, std::__1::allocator<int>> _field7;
    struct Mat _field8;
    struct unordered_set<int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<int>> _field9;
    struct unordered_map<int, int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, int>>> _field10;
};

struct LSAAnalyticsDelegateWrapper;

struct LSAAudioDelegateWrapper;

struct LSABitmoji3DDelegateWrapper;

struct LSABitmojiEffectDelegateWrapper;

struct LSAClientInterfaceDelegateWrapper;

struct LSACompassTrackerDelegate;

struct LSADebugDelegateWrapper;

struct LSADeviceMotionTrackerDelegate;

struct LSAExpressionsDelegateWrapper;

struct LSAGeoDataDelegateWrapper;

struct LSAHapticFeedbackDelegateWrapper;

struct LSAHintsDelegateWrapper;

struct LSALensAnalyticsDataDelegateWrapper;

struct LSALifeCycleDelegateWrapper;

struct LSALocalizationDelegateWrapper;

struct LSALocationTrackerDelegate;

struct LSAPersistenceDelegateWrapper;

struct LSAPlatformTrackingDelegateWrapper;

struct LSARemoteAssetsDelegateWrapper;

struct LSAScenariumAudioDelegateWrapper;

struct LSASnapRecordingDelegateWrapper;

struct LSASnapcodeDelegateWrapper;

struct LSAUriDelegateWrapper;

struct LSAUserDataDelegateWrapper;

struct LSAVideoCodecFactory;

struct LSDrawTexture {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
};

struct Landmarks;

struct LatLng {
    double lat;
    double lon;
};

struct LatLngBounds {
    struct LatLng sw;
    struct LatLng ne;
};

struct Layer {
    CDUnknownFunctionPointerType *_field1;
    struct Immutable<mbgl::style::Layer::Impl> _field2;
    struct LayerObserver *_field3;
    struct any _field4;
};

struct LayerObserver;

struct LeakTracker<net::URLRequest>;

struct Light {
    struct Immutable<mbgl::style::Light::Impl> _field1;
    struct LightObserver *_field2;
};

struct LightData {
    struct AmbientLight _field1;
    struct DiffuseLight _field2;
    struct DirectionalLight _field3;
};

struct LightObserver;

struct Limit {
    int mLimit;
};

struct LineLayer {
    CDUnknownFunctionPointerType *_field1;
    struct Immutable<mbgl::style::Layer::Impl> _field2;
    struct LayerObserver *_field3;
    struct any _field4;
};

struct LoadTimingInfo {
    _Bool _field1;
    unsigned int _field2;
    struct Time _field3;
    struct TimeTicks _field4;
    struct TimeTicks _field5;
    struct TimeTicks _field6;
    struct ConnectTiming _field7;
    struct TimeTicks _field8;
    struct TimeTicks _field9;
    struct TimeTicks _field10;
    struct TimeTicks _field11;
    struct TimeTicks _field12;
};

struct LocationTrackingData {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    _Bool _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    double _field8;
    double _field9;
    double _field10;
    double _field11;
    basic_string_a490aa4c _field12;
};

struct Logger;

struct MBGLView {
    CDUnknownFunctionPointerType *_field1;
    struct unique_ptr<mbgl::gl::Context, std::__1::default_delete<mbgl::gl::Context>> _field2;
    struct once_flag _field3;
    CDUnknownFunctionPointerType *_field4;
    id _field5;
    unsigned long long _field6;
};

struct MD5Digest {
    unsigned char _field1[16];
};

struct MGLAnnotationContext {
    id _field1;
    id _field2;
    id _field3;
    id _field4;
    id _field5;
};

struct MGLCoordinateBounds {
    struct CLLocationCoordinate2D sw;
    struct CLLocationCoordinate2D ne;
};

struct MGLCoordinateQuad {
    struct CLLocationCoordinate2D _field1;
    struct CLLocationCoordinate2D _field2;
    struct CLLocationCoordinate2D _field3;
    struct CLLocationCoordinate2D _field4;
};

struct MGLCoordinateSpan {
    double _field1;
    double _field2;
};

struct MGLOfflinePackProgress {
    unsigned long long countOfResourcesCompleted;
    unsigned long long countOfBytesCompleted;
    unsigned long long countOfTilesCompleted;
    unsigned long long countOfTileBytesCompleted;
    unsigned long long countOfResourcesExpected;
    unsigned long long maximumResourcesExpected;
};

struct MGLRadianCoordinate2D {
    double _field1;
    double _field2;
};

struct MGLRenderFrontend;

struct MGLRow {
    double distance;
    unsigned long long numberOfBars;
};

struct MGLSphericalPosition {
    double _field1;
    double _field2;
    double _field3;
};

struct MGLStyleLayerDrawingContext {
    struct CGSize _field1;
    struct CLLocationCoordinate2D _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
};

struct MGLTransition {
    double duration;
    double delay;
};

struct ManyTargetTracker;

struct Map {
    struct unique_ptr<mbgl::Map::Impl, std::__1::default_delete<mbgl::Map::Impl>> _field1;
};

struct MapSnapshotter;

struct Mat {
    int flags;
    int dims;
    int rows;
    int cols;
    char *data;
    char *datastart;
    char *dataend;
    char *datalimit;
    struct MatAllocator *allocator;
    struct UMatData *u;
    struct MatSize size;
    struct MatStep step;
};

struct MatAllocator;

struct MatSize {
    int *p;
};

struct MatStep {
    unsigned long long *p;
    unsigned long long buf[2];
};

struct Mat_<float> {
    int flags;
    int dims;
    int rows;
    int cols;
    char *data;
    char *datastart;
    char *dataend;
    char *datalimit;
    struct MatAllocator *allocator;
    struct UMatData *u;
    struct MatSize size;
    struct MatStep step;
};

struct Matrix<float, 3, 3, 0, 3, 3> {
    struct DenseStorage<float, 9, 3, 3, 0> m_storage;
};

struct MessageLite {
    CDUnknownFunctionPointerType *_field1;
};

struct MetricsMetadataContainer;

struct MetricsReporter;

struct NSArray {
    Class _field1;
};

struct NSDictionary {
    Class _field1;
};

struct NSMutableDictionary {
    Class _field1;
};

struct NaturalFeatureModel {
    struct unique_ptr<LS::NaturalFeatureModel::Impl, std::__1::default_delete<LS::NaturalFeatureModel::Impl>> _field1;
};

struct NaturalFeatureTrackingData {
    _Bool _field1;
    _Bool _field2;
    struct matrix4 _field3;
    struct NaturalFeatureModel _field4;
};

struct NetLog;

struct NetLogSource {
    int _field1;
    unsigned int _field2;
};

struct NetLogWithSource {
    struct NetLogSource _field1;
    struct NetLog *_field2;
    int _field3;
};

struct NetworkDelegate;

struct NetworkTrafficAnnotationTag {
    int _field1;
};

struct NumberResponder;

struct OCSPVerifyResult {
    int _field1;
    int _field2;
};

struct ObjectPool<SQLiteConnection, 63>;

struct ObjectPoolX<adl::media::video::IosNativeFrame>;

struct OfflineRegion {
    long long _field1;
    struct OfflineTilePyramidRegionDefinition _field2;
    struct vector<unsigned char, std::__1::allocator<unsigned char>> _field3;
};

struct OfflineRegionStatus {
    int _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
    _Bool _field7;
};

struct OfflineTilePyramidRegionDefinition {
    basic_string_a490aa4c _field1;
    struct LatLngBounds _field2;
    double _field3;
    double _field4;
    float _field5;
};

struct Offset<Snapchat::Canvas>;

struct Offset<Snapchat::Embeddable>;

struct Optional<url::Origin> {
    struct OptionalStorage<url::Origin, false> _field1;
};

struct OptionalStorage<url::Origin, false> {
    _Bool _field1;
    union {
        char _field1;
        struct Origin _field2;
    } _field2;
};

struct Order;

struct OrderBy {
    struct vector<SC::Query::Order, std::__1::allocator<SC::Query::Order>> mOrders;
};

struct Origin {
    struct SchemeHostPort _field1;
    _Bool _field2;
    basic_string_a490aa4c _field3;
};

struct Overlay {
    unsigned char _field1[1];
};

struct POPAnimatorItem;

struct Parsed {
    struct Component _field1;
    struct Component _field2;
    struct Component _field3;
    struct Component _field4;
    struct Component _field5;
    struct Component _field6;
    struct Component _field7;
    struct Component _field8;
    _Bool _field9;
    struct Parsed *_field10;
};

struct Pimpl;

struct Point_<int> {
    int _field1;
    int _field2;
};

struct PropertyValue<mbgl::Color> {
    struct variant<mbgl::style::Undefined, mbgl::Color, mbgl::style::CameraFunction<mbgl::Color>> _field1;
};

struct ProxyServer {
    int _field1;
    struct HostPortPair _field2;
};

struct R1Interval {
    struct Vector2<double> _field1;
};

struct RGB2NV21Convertor;

struct RasterLayer {
    CDUnknownFunctionPointerType *_field1;
    struct Immutable<mbgl::style::Layer::Impl> _field2;
    struct LayerObserver *_field3;
    struct any _field4;
};

struct RasterSource {
    CDUnknownFunctionPointerType *_field1;
    struct Immutable<mbgl::style::Source::Impl> _field2;
    struct SourceObserver *_field3;
    _Bool _field4;
    struct any _field5;
    struct variant<std::__1::basic_string<char>, mbgl::Tileset> _field6;
    struct unique_ptr<mbgl::AsyncRequest, std::__1::default_delete<mbgl::AsyncRequest>> _field7;
};

struct Rect<float>;

struct RectTransform {
    int transformMask_;
};

struct RenderData {
    struct opaqueCMSampleBuffer *sampleBuffer;
    struct __CVBuffer *depthDataMap;
    struct CGPoint *depthBlurPointOfInterest;
};

struct Renderer {
    struct unique_ptr<mbgl::Renderer::Impl, std::__1::default_delete<mbgl::Renderer::Impl>> _field1;
};

struct Rep;

struct Rep64;

struct RepeatedPtrField<tensorflow::NodeDef> {
    struct Arena *arena_;
    int current_size_;
    int total_size_;
    struct Rep *rep_;
};

struct RequestTracker;

struct S1Interval {
    struct Vector2<double> _field1;
};

struct S2CellId {
    unsigned long long id_;
};

struct S2CellUnion {
    CDUnknownFunctionPointerType *_field1;
    struct vector<S2CellId, std::__1::allocator<S2CellId>> _field2;
};

struct S2LatLngRect {
    CDUnknownFunctionPointerType *_field1;
    struct R1Interval _field2;
    struct S1Interval _field3;
};

struct S2Loop;

struct S2Polygon {
    CDUnknownFunctionPointerType *_field1;
    struct vector<S2Loop *, std::__1::allocator<S2Loop *>> _field2;
    struct S2LatLngRect _field3;
    char _field4;
    char _field5;
    int _field6;
};

struct SC1On1AndGroupSyncState {
    _Bool oneOnOneAndGroupSynced;
    _Bool forceResetConversations;
    long long unarchivedInitial1On1Count;
    long long unarchivedPaginated1On1Count;
};

struct SCAspectRatio {
    long long _field1;
    long long _field2;
};

struct SCAudioNoteWaveformAnimationFrame {
    unsigned char _field1[14];
};

struct SCAudioProcessorTapContext {
    unsigned char _field1;
    double _field2;
    double _field3;
    double _field4;
    id _field5;
    id _field6;
};

struct SCBloomFilterCore {
    struct vector<char, std::__1::allocator<char>> _field1;
    int _field2;
    int _field3;
    CDUnknownFunctionPointerType _field4;
    _Bool _field5;
};

struct SCDocObjectClassFunctionPointer {
    CDUnknownFunctionPointerType _field1;
    CDUnknownFunctionPointerType _field2;
};

struct SCFaceCraftAlignImage {
    struct Mat _field1;
    struct Mat _field2;
    struct Mat _field3;
    int _field4;
    int _field5;
    int _field6;
    float _field7;
    float _field8;
    int _field9;
    float _field10;
    float _field11;
    struct Mat _field12;
    float _field13;
    struct Mat _field14;
    struct Mat _field15;
    Size__dedc3bbb _field16;
    Size__dedc3bbb _field17;
    _Bool _field18;
    _Bool _field19;
    vector_777fd472 _field20;
    CDStruct_c979069d _field21;
    CDStruct_c979069d _field22;
    CDStruct_c979069d _field23;
};

struct SCFaceCraftAlignImageOpaque {
    struct SCFaceCraftAlignImage _field1;
};

struct SCMapCarouselViewPadding {
    double peek;
    double spacing;
    double bottom;
};

struct SCMapTouchResponderResult {
    _Bool _field1;
    _Bool _field2;
};

struct SCPreviewContextDnnWrapper {
    struct Scalar_<double> _field1;
    struct unique_ptr<Snapchat::Unlockables::SCPreviewContextDnnWrapper::Impl, std::__1::default_delete<Snapchat::Unlockables::SCPreviewContextDnnWrapper::Impl>> _field2;
};

struct SCTV3PresenceBitmojiState {
    double scale;
    double headOffset;
    double handsOffset;
    double draggingOffset;
};

struct SCXHeatmapFuzzPoint {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
};

struct SCXHeatmapPoint {
    float _field1;
    float _field2;
    float _field3;
};

struct SCXMapBounds {
    struct CLLocationCoordinate2D sw;
    struct CLLocationCoordinate2D ne;
    double zoom;
};

struct SCXTileIndex {
    char _field1;
    int _field2;
    int _field3;
};

struct SHAZAM_SIGX {
    struct unique_ptr<sig_extractor_pipe, std::__1::default_delete<sig_extractor_pipe>> _field1;
};

struct SLAMModel {
    struct unique_ptr<LS::SLAMModel::Impl, std::__1::default_delete<LS::SLAMModel::Impl>> _field1;
};

struct SLAMTrackingData {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    _Bool _field3;
    int _field4;
    float _field5;
    struct matrix4 _field6;
    struct SLAMModel _field7;
};

struct SQLiteConnection {
    struct unordered_map<std::__1::basic_string<char>, sqlite3_stmt *, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, sqlite3_stmt *>>> _field1;
    struct unordered_map<long, sqlite3_stmt *, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, sqlite3_stmt *>>> _field2;
    _Bool _field3;
    struct sqlite3 *_field4;
    struct unordered_map<long, std::__1::unordered_map<const char *, bool, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, bool>>>, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, std::__1::unordered_map<const char *, bool, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, bool>>>>>> _field5;
};

struct SRDelegateAvailableMethods {
    unsigned int didReceiveMessage:1;
    unsigned int didReceiveMessageWithString:1;
    unsigned int didReceiveMessageWithData:1;
    unsigned int didOpen:1;
    unsigned int didFailWithError:1;
    unsigned int didCloseWithCode:1;
    unsigned int didReceivePing:1;
    unsigned int didReceivePong:1;
    unsigned int shouldConvertTextFrameToString:1;
};

struct SSLCertRequestInfo;

struct SSLInfo {
    struct scoped_refptr<net::X509Certificate> _field1;
    struct scoped_refptr<net::X509Certificate> _field2;
    unsigned int _field3;
    int _field4;
    unsigned short _field5;
    int _field6;
    _Bool _field7;
    _Bool _field8;
    _Bool _field9;
    _Bool _field10;
    _Bool _field11;
    int _field12;
    int _field13;
    struct vector<net::HashValue, std::__1::allocator<net::HashValue>> _field14;
    basic_string_a490aa4c _field15;
    struct vector<net::SignedCertificateTimestampAndStatus, std::__1::allocator<net::SignedCertificateTimestampAndStatus>> _field16;
    _Bool _field17;
    int _field18;
    int _field19;
    struct OCSPVerifyResult _field20;
};

struct SSState<POP::Vector4<double>> {
    struct Vector4<double> _field1;
    struct Vector4<double> _field2;
};

struct SampleBufferMetadata {
    int isoSpeedRating;
    float exposureTime;
    float brightness;
};

struct Scalar_<double> {
    double _field1[4];
};

struct SchemeHostPort {
    basic_string_a490aa4c _field1;
    basic_string_a490aa4c _field2;
    unsigned short _field3;
};

struct SequenceChecker;

struct SequencedTaskRunner;

struct Service;

struct ServiceListener;

struct Session;

struct SessionDelegate;

struct SignedCertificateTimestampAndStatus;

struct Size {
    unsigned int _field1;
    unsigned int _field2;
};

struct Size<int> {
    int _width;
    int _height;
};

struct Size_<int> {
    int _field1;
    int _field2;
};

struct SnapCutExt;

struct SnapcodeAnalyzer;

struct SnapcodeScannedData {
    _Bool _field1;
    int _field2;
    int _field3;
    basic_string_a490aa4c _field4;
    struct vector<unsigned char, std::__1::allocator<unsigned char>> _field5;
};

struct SnapcodeTrackingData {
    _Bool _field1;
    _Bool _field2;
    struct matrix4 _field3;
    struct NaturalFeatureModel _field4;
    struct unique_ptr<LS::SnapcodeTrackingDataInternal, std::__1::default_delete<LS::SnapcodeTrackingDataInternal>> _field5;
};

struct SnapcodeTrackingDataInternal;

struct Source {
    CDUnknownFunctionPointerType *_field1;
    struct Immutable<mbgl::style::Source::Impl> _field2;
    struct SourceObserver *_field3;
    _Bool _field4;
    struct any _field5;
};

struct SourceObserver;

struct SpringSolver<POP::Vector4<double>> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    struct SSState<POP::Vector4<double>> _field8;
    struct Vector4<double> _field9;
    _Bool _field10;
};

struct StringDictResponder;

struct StringListResponder;

struct StringResponder;

struct Style {
    struct unique_ptr<mbgl::style::Style::Impl, std::__1::default_delete<mbgl::style::Style::Impl>> _field1;
};

struct SymbolLayer {
    CDUnknownFunctionPointerType *_field1;
    struct Immutable<mbgl::style::Layer::Impl> _field2;
    struct LayerObserver *_field3;
    struct any _field4;
};

struct TalkCore;

struct TalkCoreDelegate;

struct TaxonomyData {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    basic_string_a490aa4c _field3;
    _Bool _field4;
};

struct Tensor {
    struct TensorShape _field1;
    struct TensorBuffer *_field2;
};

struct TensorBuffer;

struct TensorShape {
    union {
        unsigned char _field1[16];
        struct Rep64 *_field2;
    } _field1;
    long long _field2;
};

struct TextureBase;

struct TextureSet {
    unsigned int textures[3];
    unsigned int ytex;
    unsigned int utex;
    unsigned int vtex;
    unsigned int ychn;
    unsigned int uchn;
    unsigned int vchn;
    unsigned int width;
    unsigned int height;
    float yscale;
    float uscale;
    float vscale;
    _Bool texcreated;
};

struct Thread;

struct Thread<mbgl::DefaultFileSource::Impl>;

struct ThreadChecker;

struct ThreadPool;

struct Time {
    long long us_;
};

struct TimeTicks {
    long long _field1;
};

struct Timestamp {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    double _field3;
    _Bool _field4;
};

struct TouchHandlingPromise {
    struct vector<std::__1::pair<LS::Rect<float>, LS::TouchType>, std::__1::allocator<std::__1::pair<LS::Rect<float>, LS::TouchType>>> touchableRects;
};

struct TrackerData {
    struct Mat_<float> depthMap;
    shared_ptr_c46ccacf depthMapTexture;
};

struct TrackerWrapper;

struct TrackingData {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    struct Timestamp _field3;
    struct ImageTrackingData _field4;
    struct HistogramData _field5;
    struct FaceTrackingData _field6;
    struct unique_ptr<LS::Tracking::Depth::TrackerData, std::__1::default_delete<LS::Tracking::Depth::TrackerData>> _field7;
    struct DeviceMotionTrackingData _field8;
    struct NaturalFeatureTrackingData _field9;
    struct SLAMTrackingData _field10;
    struct AudioAnalysisData _field11;
    struct SnapcodeTrackingData _field12;
    struct LocationTrackingData _field13;
    struct CompassTrackingData _field14;
    struct unique_ptr<LS::Tracking::ObjectDetectorTracker::TrackerData, std::__1::default_delete<LS::Tracking::ObjectDetectorTracker::TrackerData>> _field15;
    struct unique_ptr<LS::Tracking::OpticalFlowTracker::TrackerData, std::__1::default_delete<LS::Tracking::OpticalFlowTracker::TrackerData>> _field16;
    struct UserTrackingData _field17;
    struct GeoTrackingData _field18;
    struct unique_ptr<LS::Tracking::Segmentation::TrackerData, std::__1::default_delete<LS::Tracking::Segmentation::TrackerData>> _field19;
    struct unique_ptr<LS::Tracking::SceneRecognition::TrackerData, std::__1::default_delete<LS::Tracking::SceneRecognition::TrackerData>> _field20;
    struct Bitmoji3DData _field21;
    struct LightData _field22;
    struct CameraInfo _field23;
};

struct TrackingSerializer;

struct Transform {
    int _field1;
    int _field2;
};

struct UIEdgeInsets {
    double top;
    double left;
    double bottom;
    double right;
};

struct UIOffset {
    double horizontal;
    double vertical;
};

struct UMatData;

struct URLRequest {
    CDUnknownFunctionPointerType *_field1;
    struct map<const void *, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>, std::__1::less<const void *>, std::__1::allocator<std::__1::pair<const void *const, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>>>> _field2;
    struct SequenceChecker _field3;
    struct URLRequestContext *_field4;
    struct NetworkDelegate *_field5;
    struct NetLogWithSource _field6;
    struct unique_ptr<net::URLRequestJob, std::__1::default_delete<net::URLRequestJob>> _field7;
    struct unique_ptr<net::UploadDataStream, std::__1::default_delete<net::UploadDataStream>> _field8;
    struct vector<GURL, std::__1::allocator<GURL>> _field9;
    struct GURL _field10;
    struct Optional<url::Origin> _field11;
    struct GURL _field12;
    basic_string_a490aa4c _field13;
    basic_string_a490aa4c _field14;
    int _field15;
    basic_string_a490aa4c _field16;
    int _field17;
    struct HttpRequestHeaders _field18;
    int _field19;
    struct Delegate *_field20;
    struct URLRequestStatus _field21;
    struct HttpResponseInfo _field22;
    _Bool _field23;
    _Bool _field24;
    int _field25;
    struct UploadProgress _field26;
    int _field27;
    unsigned long long _field28;
    _Bool _field29;
    basic_string_a490aa4c _field30;
    _Bool _field31;
    struct LeakTracker<net::URLRequest> _field32;
    struct Callback<void (int), base::internal::CopyMode::Copyable, base::internal::RepeatMode::Repeating> _field33;
    _Bool _field34;
    struct AuthCredentials _field35;
    struct scoped_refptr<net::AuthChallengeInfo> _field36;
    long long _field37;
    struct TimeTicks _field38;
    struct LoadTimingInfo _field39;
    struct ProxyServer _field40;
    int _field41;
    struct NetworkTrafficAnnotationTag _field42;
};

struct URLRequestContext;

struct URLRequestContextGetter;

struct URLRequestJob;

struct URLRequestStatus {
    int _field1;
    int _field2;
};

struct UploadDataStream;

struct UploadProgress {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct UserTrackingData {
    unordered_map_6f2773c7 _field1;
    struct unordered_map<std::__1::basic_string<char>, std::__1::unordered_map<std::__1::basic_string<char>, LS::Any, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, LS::Any>>>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unordered_map<std::__1::basic_string<char>, LS::Any, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, LS::Any>>>>>> _field2;
};

struct Vector2<double> {
    double _field1[2];
};

struct Vector4<double> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
};

struct VectorSource {
    CDUnknownFunctionPointerType *_field1;
    struct Immutable<mbgl::style::Source::Impl> _field2;
    struct SourceObserver *_field3;
    _Bool _field4;
    struct any _field5;
    struct variant<std::__1::basic_string<char>, mbgl::Tileset> _field6;
    struct unique_ptr<mbgl::AsyncRequest, std::__1::default_delete<mbgl::AsyncRequest>> _field7;
};

struct VersionDef;

struct VoidResponder;

struct WeakPtr<net::RequestTracker> {
    struct WeakReference _field1;
    struct RequestTracker *_field2;
};

struct WeakReference {
    struct scoped_refptr<const base::internal::WeakReference::Flag> _field1;
};

struct WeatherTrackingData {
    CDUnknownFunctionPointerType *_field1;
    _Bool _field2;
    _Bool _field3;
    basic_string_a490aa4c _field4;
    float _field5;
    float _field6;
    struct vector<LS::HourlyWeatherForecast, std::__1::allocator<LS::HourlyWeatherForecast>> _field7;
};

struct WriteToFileNetLogObserver;

struct X509Certificate;

struct YGValue {
    float _field1;
    int _field2;
};

struct ZZCentralFileHeader {
    unsigned int _field1;
    unsigned char _field2;
    unsigned char _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned short _field6;
    unsigned short _field7;
    unsigned short _field8;
    unsigned int _field9;
    unsigned int _field10;
    unsigned int _field11;
    unsigned short _field12;
    unsigned short _field13;
    unsigned short _field14;
    unsigned short _field15;
    unsigned short _field16;
    unsigned int _field17;
    unsigned int _field18;
};

struct ZZLocalFileHeader {
    unsigned int _field1;
    unsigned short _field2;
    unsigned short _field3;
    unsigned short _field4;
    unsigned short _field5;
    unsigned short _field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned short _field10;
    unsigned short _field11;
};

struct ZZStandardCryptoEngine {
    int keys[3];
};

struct _IplImage {
    int _field1;
    int _field2;
    int _field3;
    int _field4;
    int _field5;
    char _field6[4];
    char _field7[4];
    int _field8;
    int _field9;
    int _field10;
    int _field11;
    int _field12;
    struct _IplROI *_field13;
    struct _IplImage *_field14;
    void *_field15;
    struct _IplTileInfo *_field16;
    int _field17;
    char *_field18;
    int _field19;
    int _field20[4];
    int _field21[4];
    char *_field22;
};

struct _IplROI;

struct _IplTileInfo;

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct _POPAnimationState {
    CDUnknownFunctionPointerType *_field1;
    id _field2;
    int _field3;
    id _field4;
    unsigned long long _field5;
    double _field6;
    double _field7;
    double _field8;
    id _field9;
    CDUnknownBlockType _field10;
    CDUnknownBlockType _field11;
    CDUnknownBlockType _field12;
    CDUnknownBlockType _field13;
    id _field14;
    id _field15;
    double _field16;
    long long _field17;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
    unsigned int :1;
};

struct __compressed_pair<mapbox::geometry::point<double>*, std::__1::allocator<mapbox::geometry::point<double>>> {
    struct point<double> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<LS::TrackingRequirement, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<LS::TrackingRequirement, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<int, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<int, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<long, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<long, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, NSString *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, NSString *>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, sqlite3_stmt *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, sqlite3_stmt *>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, bool, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, bool>>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, bool, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, bool>>>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, unsigned long long>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, unsigned long long>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, LS::Any>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, LS::Any>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_map<std::__1::basic_string<char>, LS::Any, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, LS::Any>>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_map<std::__1::basic_string<char>, LS::Any, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, LS::Any>>>>, void *>*> *_field1;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, void *>*> *__next_;
};

struct __list_node_base<net::HostPortPair, void *> {
    struct __list_node_base<net::HostPortPair, void *> *_field1;
    struct __list_node_base<net::HostPortPair, void *> *_field2;
};

struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> *__prev_;
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> *__next_;
};

struct __raw {
    unsigned long long __words[3];
};

struct __shared_weak_count;

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct _opaque_pthread_mutex_t {
    long long __sig;
    char __opaque[56];
};

struct any {
    union storage_union _field1;
    struct vtable_type *_field2;
};

struct array<float, 2> {
    float _field1[2];
};

struct array<float, 3> {
    float _field1[3];
};

struct array<float, 4> {
    float _field1[4];
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw __r;
            } ;
        } __first_;
    } __r_;
};

struct basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short>> {
    struct __compressed_pair<std::__1::basic_string<unsigned short, base::string16_char_traits, std::__1::allocator<unsigned short>>::__rep, std::__1::allocator<unsigned short>> {
        struct __rep {
            union {
                struct __long {
                    unsigned short *_field1;
                    unsigned long long _field2;
                    unsigned long long _field3;
                } _field1;
                struct __short {
                    unsigned short _field1[11];
                    struct {
                        unsigned char _field1[1];
                        unsigned char _field2;
                    } _field2;
                } _field2;
                struct __raw _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct ec_key_st;

struct function<mapbox::geometry::point<double>(const mbgl::LatLng &)> {
    struct type __buf_;
    struct __base<mapbox::geometry::point<double>(const mbgl::LatLng &)> *__f_;
};

struct function<void (LS::FrameBuffer *)> {
    struct type __buf_;
    struct __base<void (LS::FrameBuffer *)> *__f_;
};

struct function<void (const adl::netio::HttpResult &)> {
    struct type __buf_;
    struct __base<void (const adl::netio::HttpResult &)> *__f_;
};

struct geometry<double> {
    unsigned long long _field1;
    struct type _field2;
};

struct gzFile_s {
    unsigned int _field1;
    char *_field2;
    long long _field3;
};

struct in6_addr {
    union {
        unsigned char _field1[16];
        unsigned short _field2[8];
        unsigned int _field3[4];
    } _field1;
};

struct in_addr {
    unsigned int s_addr;
};

struct internal_state;

struct line_string<double, std::vector> {
    struct point<double> *_field1;
    struct point<double> *_field2;
    struct __compressed_pair<mapbox::geometry::point<double>*, std::__1::allocator<mapbox::geometry::point<double>>> _field3;
};

struct linear_ring<double, std::vector> {
    struct point<double> *_field1;
    struct point<double> *_field2;
    struct __compressed_pair<mapbox::geometry::point<double>*, std::__1::allocator<mapbox::geometry::point<double>>> _field3;
};

struct list<net::HostPortPair, std::__1::allocator<net::HostPortPair>> {
    struct __list_node_base<net::HostPortPair, void *> _field1;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<net::HostPortPair, void *>>> {
        unsigned long long _field1;
    } _field2;
};

struct list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem>>> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
};

struct map<NSString *, __weak id<SCOperaEventListener>, std::__1::less<NSString *>, std::__1::allocator<std::__1::pair<NSString *const, __weak id<SCOperaEventListener>>>>;

struct map<NSString *, std::__1::shared_ptr<std::__1::vector<__weak id<SCOperaEventListener>, std::__1::allocator<__weak id<SCOperaEventListener>>>>, std::__1::less<NSString *>, std::__1::allocator<std::__1::pair<NSString *const, std::__1::shared_ptr<std::__1::vector<__weak id<SCOperaEventListener>, std::__1::allocator<__weak id<SCOperaEventListener>>>>>>>;

struct map<__weak Class, __weak id, std::__1::less<__weak Class>, std::__1::allocator<std::__1::pair<const __weak Class, __weak id>>> {
    struct __tree<std::__1::__value_type<__weak Class, __weak id>, std::__1::__map_value_compare<__weak Class, std::__1::__value_type<__weak Class, __weak id>, std::__1::less<__weak Class>, true>, std::__1::allocator<std::__1::__value_type<__weak Class, __weak id>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<__weak Class, __weak id>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<__weak Class, std::__1::__value_type<__weak Class, __weak id>, std::__1::less<__weak Class>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<__weak Class, std::__1::set<SCScopedAccess *__weak, std::__1::less<SCScopedAccess *__weak>, std::__1::allocator<SCScopedAccess *__weak>>, std::__1::less<__weak Class>, std::__1::allocator<std::__1::pair<const __weak Class, std::__1::set<SCScopedAccess *__weak, std::__1::less<SCScopedAccess *__weak>, std::__1::allocator<SCScopedAccess *__weak>>>>> {
    struct __tree<std::__1::__value_type<__weak Class, std::__1::set<SCScopedAccess *__weak, std::__1::less<SCScopedAccess *__weak>, std::__1::allocator<SCScopedAccess *__weak>>>, std::__1::__map_value_compare<__weak Class, std::__1::__value_type<__weak Class, std::__1::set<SCScopedAccess *__weak, std::__1::less<SCScopedAccess *__weak>, std::__1::allocator<SCScopedAccess *__weak>>>, std::__1::less<__weak Class>, true>, std::__1::allocator<std::__1::__value_type<__weak Class, std::__1::set<SCScopedAccess *__weak, std::__1::less<SCScopedAccess *__weak>, std::__1::allocator<SCScopedAccess *__weak>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<__weak Class, std::__1::set<SCScopedAccess *__weak, std::__1::less<SCScopedAccess *__weak>, std::__1::allocator<SCScopedAccess *__weak>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<__weak Class, std::__1::__value_type<__weak Class, std::__1::set<SCScopedAccess *__weak, std::__1::less<SCScopedAccess *__weak>, std::__1::allocator<SCScopedAccess *__weak>>>, std::__1::less<__weak Class>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<__weak id<SCOperaEventListener>, std::__1::shared_ptr<std::__1::set<NSString *, std::__1::less<NSString *>, std::__1::allocator<NSString *>>>, std::__1::less<__weak id<SCOperaEventListener>>, std::__1::allocator<std::__1::pair<const __weak id<SCOperaEventListener>, std::__1::shared_ptr<std::__1::set<NSString *, std::__1::less<NSString *>, std::__1::allocator<NSString *>>>>>>;

struct map<const void *, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>, std::__1::less<const void *>, std::__1::allocator<std::__1::pair<const void *const, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>>>> {
    struct __tree<std::__1::__value_type<const void *, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>>, std::__1::__map_value_compare<const void *, std::__1::__value_type<const void *, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>>, std::__1::less<const void *>, true>, std::__1::allocator<std::__1::__value_type<const void *, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<const void *, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<const void *, std::__1::__value_type<const void *, std::__1::unique_ptr<base::SupportsUserData::Data, std::__1::default_delete<base::SupportsUserData::Data>>>, std::__1::less<const void *>, true>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct map<double, SOJUGalleryTransform *, std::__1::less<double>, std::__1::allocator<std::__1::pair<const double, SOJUGalleryTransform *>>> {
    struct __tree<std::__1::__value_type<double, SOJUGalleryTransform *>, std::__1::__map_value_compare<double, std::__1::__value_type<double, SOJUGalleryTransform *>, std::__1::less<double>, true>, std::__1::allocator<std::__1::__value_type<double, SOJUGalleryTransform *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<double, SOJUGalleryTransform *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<double, std::__1::__value_type<double, SOJUGalleryTransform *>, std::__1::less<double>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<id<MGLAnnotation>, unsigned int, std::__1::less<id<MGLAnnotation>>, std::__1::allocator<std::__1::pair<const id<MGLAnnotation>, unsigned int>>> {
    struct __tree<std::__1::__value_type<id<MGLAnnotation>, unsigned int>, std::__1::__map_value_compare<id<MGLAnnotation>, std::__1::__value_type<id<MGLAnnotation>, unsigned int>, std::__1::less<id<MGLAnnotation>>, true>, std::__1::allocator<std::__1::__value_type<id<MGLAnnotation>, unsigned int>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<id<MGLAnnotation>, unsigned int>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<id<MGLAnnotation>, std::__1::__value_type<id<MGLAnnotation>, unsigned int>, std::__1::less<id<MGLAnnotation>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::less<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __tree<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __first_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<std::__1::basic_string<char>, std::__1::__value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::less<std::__1::basic_string<char>>, true>> {
            unsigned long long __first_;
        } __pair3_;
    } __tree_;
};

struct matrix3 {
    float _field1[9];
};

struct matrix4 {
    float _field1[16];
};

struct multi_polygon<double, std::vector> {
    polygon_f143bbb5 *_field1;
    polygon_f143bbb5 *_field2;
    struct __compressed_pair<mapbox::geometry::polygon<double, std::vector>*, std::__1::allocator<mapbox::geometry::polygon<double, std::vector>>> {
        polygon_f143bbb5 *_field1;
    } _field3;
};

struct mutex {
    struct _opaque_pthread_mutex_t __m_;
};

struct once_flag {
    unsigned long long _field1;
};

struct opaqueCMSampleBuffer;

struct optional<double> {
    union {
        char _field1;
        double _field2;
    } _field1;
    _Bool _field2;
};

struct optional<mapbox::geometry::point<double>> {
    union {
        char _field1;
        struct point<double> _field2;
    } _field1;
    _Bool _field2;
};

struct optional<mbgl::LatLng> {
    union {
        char _field1;
        struct LatLng _field2;
    } _field1;
    _Bool _field2;
};

struct optional<mbgl::LatLngBounds> {
    union {
        char __null_state_;
        struct LatLngBounds __val_;
    } ;
    _Bool __engaged_;
};

struct optional<std::__1::basic_string<char>> {
    union {
        char _field1;
        basic_string_a490aa4c _field2;
    } _field1;
    _Bool _field2;
};

struct os_unfair_lock_s {
    unsigned int _os_unfair_lock_opaque;
};

struct pair<LS::Rect<float>, LS::TouchType>;

struct plain_array<float, 9, 0, 0> {
    float array[9];
};

struct point<double> {
    double _field1;
    double _field2;
};

struct polygon<double, std::vector> {
    linear_ring_cd7ceeaf *_field1;
    linear_ring_cd7ceeaf *_field2;
    struct __compressed_pair<mapbox::geometry::linear_ring<double, std::vector>*, std::__1::allocator<mapbox::geometry::linear_ring<double, std::vector>>> {
        linear_ring_cd7ceeaf *_field1;
    } _field3;
};

struct scoped_nsobject<CRWHTTPStreamDelegate> {
    id _field1;
};

struct scoped_nsobject<NSArray> {
    NSArray *object_;
};

struct scoped_nsobject<NSMutableArray> {
    NSMutableArray *object_;
};

struct scoped_nsobject<NSMutableURLRequest> {
    id _field1;
};

struct scoped_nsobject<NSString> {
    NSString *object_;
};

struct scoped_nsprotocol<id<CRNHTTPProtocolHandlerProxy>> {
    id object_;
};

struct scoped_refptr<base::SequencedTaskRunner> {
    struct SequencedTaskRunner *_field1;
};

struct scoped_refptr<base::internal::BindStateBase> {
    struct BindStateBase *_field1;
};

struct scoped_refptr<const base::internal::WeakReference::Flag> {
    struct Flag *_field1;
};

struct scoped_refptr<net::AuthChallengeInfo> {
    struct AuthChallengeInfo *_field1;
};

struct scoped_refptr<net::HttpProtocolHandlerCore> {
    struct HttpProtocolHandlerCore *ptr_;
};

struct scoped_refptr<net::HttpResponseHeaders> {
    struct HttpResponseHeaders *_field1;
};

struct scoped_refptr<net::IOBuffer> {
    struct IOBuffer *_field1;
};

struct scoped_refptr<net::IOBufferWithSize> {
    struct IOBufferWithSize *_field1;
};

struct scoped_refptr<net::SSLCertRequestInfo> {
    struct SSLCertRequestInfo *_field1;
};

struct scoped_refptr<net::URLRequestContextGetter> {
    struct URLRequestContextGetter *_field1;
};

struct scoped_refptr<net::X509Certificate> {
    struct X509Certificate *_field1;
};

struct set<flatbuffers::Offset<flatbuffers::String>, flatbuffers::FlatBufferBuilder::StringOffsetCompare, std::__1::allocator<flatbuffers::Offset<flatbuffers::String>>>;

struct set<std::__1::shared_ptr<adl::media::FrameReceiver>, std::__1::less<std::__1::shared_ptr<adl::media::FrameReceiver>>, std::__1::allocator<std::__1::shared_ptr<adl::media::FrameReceiver>>> {
    struct __tree<std::__1::shared_ptr<adl::media::FrameReceiver>, std::__1::less<std::__1::shared_ptr<adl::media::FrameReceiver>>, std::__1::allocator<std::__1::shared_ptr<adl::media::FrameReceiver>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::shared_ptr<adl::media::FrameReceiver>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<std::__1::shared_ptr<adl::media::FrameReceiver>>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

struct shared_ptr<LS::Candide> {
    struct Candide *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<LS::ComplexEffect> {
    struct ComplexEffect *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<LS::CoreManager> {
    struct CoreManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LS::Face3DTopology> {
    struct Face3DTopology *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<LS::Histogram> {
    struct Histogram *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<LS::ImageBase> {
    struct ImageBase *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<LS::ImageObjC>;

struct shared_ptr<LS::SnapcodeAnalyzer> {
    struct SnapcodeAnalyzer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LS::TextureBase> {
    struct TextureBase *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LS::TrackingSerializer> {
    struct TrackingSerializer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSAAnalyticsDelegateWrapper> {
    struct LSAAnalyticsDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSAAudioDelegateWrapper> {
    struct LSAAudioDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSABitmoji3DDelegateWrapper> {
    struct LSABitmoji3DDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSABitmojiEffectDelegateWrapper> {
    struct LSABitmojiEffectDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSAClientInterfaceDelegateWrapper> {
    struct LSAClientInterfaceDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSACompassTrackerDelegate> {
    struct LSACompassTrackerDelegate *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSADebugDelegateWrapper> {
    struct LSADebugDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSADeviceMotionTrackerDelegate> {
    struct LSADeviceMotionTrackerDelegate *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSAExpressionsDelegateWrapper> {
    struct LSAExpressionsDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSAGeoDataDelegateWrapper> {
    struct LSAGeoDataDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSAHapticFeedbackDelegateWrapper> {
    struct LSAHapticFeedbackDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSAHintsDelegateWrapper> {
    struct LSAHintsDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSALensAnalyticsDataDelegateWrapper> {
    struct LSALensAnalyticsDataDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSALifeCycleDelegateWrapper> {
    struct LSALifeCycleDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSALocalizationDelegateWrapper> {
    struct LSALocalizationDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSALocationTrackerDelegate> {
    struct LSALocationTrackerDelegate *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSAPersistenceDelegateWrapper> {
    struct LSAPersistenceDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSAPlatformTrackingDelegateWrapper> {
    struct LSAPlatformTrackingDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSARemoteAssetsDelegateWrapper> {
    struct LSARemoteAssetsDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSAScenariumAudioDelegateWrapper> {
    struct LSAScenariumAudioDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSASnapRecordingDelegateWrapper> {
    struct LSASnapRecordingDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSASnapcodeDelegateWrapper> {
    struct LSASnapcodeDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSAUriDelegateWrapper> {
    struct LSAUriDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSAUserDataDelegateWrapper> {
    struct LSAUserDataDelegateWrapper *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<LSAVideoCodecFactory> {
    struct LSAVideoCodecFactory *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<ManyTargetTracker> {
    struct ManyTargetTracker *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<POPAnimatorItem> {
    struct POPAnimatorItem *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<SC::Query::BaseExpr<bool>> {
    struct BaseExpr<bool> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<addlive::DecoderCallback> {
    struct DecoderCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<addlive::DirectRendererCallback> {
    struct DirectRendererCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<addlive::EncoderCallback> {
    struct EncoderCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<addlive::NumberResponder> {
    struct NumberResponder *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<addlive::Service> {
    struct Service *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<addlive::ServiceListener> {
    struct ServiceListener *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<addlive::StringDictResponder> {
    struct StringDictResponder *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<addlive::StringListResponder> {
    struct StringListResponder *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<addlive::StringResponder> {
    struct StringResponder *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<addlive::VoidResponder> {
    struct VoidResponder *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<adl::media::video::ObjectPoolX<adl::media::video::IosNativeFrame>> {
    struct ObjectPoolX<adl::media::video::IosNativeFrame> *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<const mbgl::style::Image::Impl> {
    struct Impl *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<const mbgl::style::Layer::Impl> {
    struct Impl *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<const mbgl::style::Light::Impl> {
    struct Impl *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<const mbgl::style::Source::Impl> {
    struct Impl *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<djinni::ProxyCache<djinni::CppProxyCacheTraits>::Pimpl> {
    struct Pimpl *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<face::Analyzer> {
    struct Analyzer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<mbgl::FileSource> {
    struct FileSource *_field1;
    struct __shared_weak_count *_field2;
};

struct shared_ptr<mbgl::ThreadPool> {
    struct ThreadPool *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::map<NSString *, __weak id<SCOperaEventListener>, std::__1::less<NSString *>, std::__1::allocator<std::__1::pair<NSString *const, __weak id<SCOperaEventListener>>>>> {
    struct map<NSString *, __weak id<SCOperaEventListener>, std::__1::less<NSString *>, std::__1::allocator<std::__1::pair<NSString *const, __weak id<SCOperaEventListener>>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::map<NSString *, std::__1::shared_ptr<std::__1::vector<__weak id<SCOperaEventListener>, std::__1::allocator<__weak id<SCOperaEventListener>>>>, std::__1::less<NSString *>, std::__1::allocator<std::__1::pair<NSString *const, std::__1::shared_ptr<std::__1::vector<__weak id<SCOperaEventListener>, std::__1::allocator<__weak id<SCOperaEventListener>>>>>>>> {
    struct map<NSString *, std::__1::shared_ptr<std::__1::vector<__weak id<SCOperaEventListener>, std::__1::allocator<__weak id<SCOperaEventListener>>>>, std::__1::less<NSString *>, std::__1::allocator<std::__1::pair<NSString *const, std::__1::shared_ptr<std::__1::vector<__weak id<SCOperaEventListener>, std::__1::allocator<__weak id<SCOperaEventListener>>>>>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::map<__weak id<SCOperaEventListener>, std::__1::shared_ptr<std::__1::set<NSString *, std::__1::less<NSString *>, std::__1::allocator<NSString *>>>, std::__1::less<__weak id<SCOperaEventListener>>, std::__1::allocator<std::__1::pair<const __weak id<SCOperaEventListener>, std::__1::shared_ptr<std::__1::set<NSString *, std::__1::less<NSString *>, std::__1::allocator<NSString *>>>>>>> {
    struct map<__weak id<SCOperaEventListener>, std::__1::shared_ptr<std::__1::set<NSString *, std::__1::less<NSString *>, std::__1::allocator<NSString *>>>, std::__1::less<__weak id<SCOperaEventListener>>, std::__1::allocator<std::__1::pair<const __weak id<SCOperaEventListener>, std::__1::shared_ptr<std::__1::set<NSString *, std::__1::less<NSString *>, std::__1::allocator<NSString *>>>>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<EphemeralMediaDelegate>, std::__1::allocator<__weak id<EphemeralMediaDelegate>>>> {
    struct vector<__weak id<EphemeralMediaDelegate>, std::__1::allocator<__weak id<EphemeralMediaDelegate>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<LSAAnalyticsComponentListener>, std::__1::allocator<__weak id<LSAAnalyticsComponentListener>>>> {
    struct vector<__weak id<LSAAnalyticsComponentListener>, std::__1::allocator<__weak id<LSAAnalyticsComponentListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<LSABitmoji3DComponentListener>, std::__1::allocator<__weak id<LSABitmoji3DComponentListener>>>> {
    struct vector<__weak id<LSABitmoji3DComponentListener>, std::__1::allocator<__weak id<LSABitmoji3DComponentListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<LSABitmojiEffectComponentListener>, std::__1::allocator<__weak id<LSABitmojiEffectComponentListener>>>> {
    struct vector<__weak id<LSABitmojiEffectComponentListener>, std::__1::allocator<__weak id<LSABitmojiEffectComponentListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<LSAComponentListener>, std::__1::allocator<__weak id<LSAComponentListener>>>> {
    struct vector<__weak id<LSAComponentListener>, std::__1::allocator<__weak id<LSAComponentListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<LSADebugComponentListener>, std::__1::allocator<__weak id<LSADebugComponentListener>>>> {
    struct vector<__weak id<LSADebugComponentListener>, std::__1::allocator<__weak id<LSADebugComponentListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<LSAEffectComponentListener>, std::__1::allocator<__weak id<LSAEffectComponentListener>>>> {
    struct vector<__weak id<LSAEffectComponentListener>, std::__1::allocator<__weak id<LSAEffectComponentListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<LSAGeoDataComponentListener>, std::__1::allocator<__weak id<LSAGeoDataComponentListener>>>> {
    struct vector<__weak id<LSAGeoDataComponentListener>, std::__1::allocator<__weak id<LSAGeoDataComponentListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<LSARemoteAssetsComponentListener>, std::__1::allocator<__weak id<LSARemoteAssetsComponentListener>>>> {
    struct vector<__weak id<LSARemoteAssetsComponentListener>, std::__1::allocator<__weak id<LSARemoteAssetsComponentListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<LSASnapRecordingComponentListener>, std::__1::allocator<__weak id<LSASnapRecordingComponentListener>>>> {
    struct vector<__weak id<LSASnapRecordingComponentListener>, std::__1::allocator<__weak id<LSASnapRecordingComponentListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<LSASnapcodeComponentListener>, std::__1::allocator<__weak id<LSASnapcodeComponentListener>>>> {
    struct vector<__weak id<LSASnapcodeComponentListener>, std::__1::allocator<__weak id<LSASnapcodeComponentListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<LSATrackingComponentListener>, std::__1::allocator<__weak id<LSATrackingComponentListener>>>> {
    struct vector<__weak id<LSATrackingComponentListener>, std::__1::allocator<__weak id<LSATrackingComponentListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<LSAUserDataComponentListener>, std::__1::allocator<__weak id<LSAUserDataComponentListener>>>> {
    struct vector<__weak id<LSAUserDataComponentListener>, std::__1::allocator<__weak id<LSAUserDataComponentListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<MediaUpdateListener>, std::__1::allocator<__weak id<MediaUpdateListener>>>> {
    struct vector<__weak id<MediaUpdateListener>, std::__1::allocator<__weak id<MediaUpdateListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCAPIClientListener>, std::__1::allocator<__weak id<SCAPIClientListener>>>> {
    struct vector<__weak id<SCAPIClientListener>, std::__1::allocator<__weak id<SCAPIClientListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCApplicationDataListener>, std::__1::allocator<__weak id<SCApplicationDataListener>>>> {
    struct vector<__weak id<SCApplicationDataListener>, std::__1::allocator<__weak id<SCApplicationDataListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCAudioSessionListener>, std::__1::allocator<__weak id<SCAudioSessionListener>>>> {
    struct vector<__weak id<SCAudioSessionListener>, std::__1::allocator<__weak id<SCAudioSessionListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCBitmojiBuilderListener>, std::__1::allocator<__weak id<SCBitmojiBuilderListener>>>> {
    struct vector<__weak id<SCBitmojiBuilderListener>, std::__1::allocator<__weak id<SCBitmojiBuilderListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCBitmojiDratiniManagerListener>, std::__1::allocator<__weak id<SCBitmojiDratiniManagerListener>>>> {
    struct vector<__weak id<SCBitmojiDratiniManagerListener>, std::__1::allocator<__weak id<SCBitmojiDratiniManagerListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCChatCallingAccessoryListener>, std::__1::allocator<__weak id<SCChatCallingAccessoryListener>>>> {
    struct vector<__weak id<SCChatCallingAccessoryListener>, std::__1::allocator<__weak id<SCChatCallingAccessoryListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCChatConversationStoreListener>, std::__1::allocator<__weak id<SCChatConversationStoreListener>>>> {
    struct vector<__weak id<SCChatConversationStoreListener>, std::__1::allocator<__weak id<SCChatConversationStoreListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCChatConversationUpdaterListener>, std::__1::allocator<__weak id<SCChatConversationUpdaterListener>>>> {
    struct vector<__weak id<SCChatConversationUpdaterListener>, std::__1::allocator<__weak id<SCChatConversationUpdaterListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCChatMessageReceiveListener>, std::__1::allocator<__weak id<SCChatMessageReceiveListener>>>> {
    struct vector<__weak id<SCChatMessageReceiveListener>, std::__1::allocator<__weak id<SCChatMessageReceiveListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCChatSideMenuLifeCycleListener>, std::__1::allocator<__weak id<SCChatSideMenuLifeCycleListener>>>> {
    struct vector<__weak id<SCChatSideMenuLifeCycleListener>, std::__1::allocator<__weak id<SCChatSideMenuLifeCycleListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCChatStickerFuzzySearchListener>, std::__1::allocator<__weak id<SCChatStickerFuzzySearchListener>>>> {
    struct vector<__weak id<SCChatStickerFuzzySearchListener>, std::__1::allocator<__weak id<SCChatStickerFuzzySearchListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCChatStickerManagerListener>, std::__1::allocator<__weak id<SCChatStickerManagerListener>>>> {
    struct vector<__weak id<SCChatStickerManagerListener>, std::__1::allocator<__weak id<SCChatStickerManagerListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCChatViewLifeCycleListener>, std::__1::allocator<__weak id<SCChatViewLifeCycleListener>>>> {
    struct vector<__weak id<SCChatViewLifeCycleListener>, std::__1::allocator<__weak id<SCChatViewLifeCycleListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCChatViewModelListener>, std::__1::allocator<__weak id<SCChatViewModelListener>>>> {
    struct vector<__weak id<SCChatViewModelListener>, std::__1::allocator<__weak id<SCChatViewModelListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCCloudFSDiskUsedListener>, std::__1::allocator<__weak id<SCCloudFSDiskUsedListener>>>> {
    struct vector<__weak id<SCCloudFSDiskUsedListener>, std::__1::allocator<__weak id<SCCloudFSDiskUsedListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCCloudSyncStatusListener>, std::__1::allocator<__weak id<SCCloudSyncStatusListener>>>> {
    struct vector<__weak id<SCCloudSyncStatusListener>, std::__1::allocator<__weak id<SCCloudSyncStatusListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCConnectionClassManagerListener>, std::__1::allocator<__weak id<SCConnectionClassManagerListener>>>> {
    struct vector<__weak id<SCConnectionClassManagerListener>, std::__1::allocator<__weak id<SCConnectionClassManagerListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCCustomStickerManagerListener>, std::__1::allocator<__weak id<SCCustomStickerManagerListener>>>> {
    struct vector<__weak id<SCCustomStickerManagerListener>, std::__1::allocator<__weak id<SCCustomStickerManagerListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCDataCoordinatorListener>, std::__1::allocator<__weak id<SCDataCoordinatorListener>>>> {
    struct vector<__weak id<SCDataCoordinatorListener>, std::__1::allocator<__weak id<SCDataCoordinatorListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCDynamicSectionsModelListener>, std::__1::allocator<__weak id<SCDynamicSectionsModelListener>>>> {
    struct vector<__weak id<SCDynamicSectionsModelListener>, std::__1::allocator<__weak id<SCDynamicSectionsModelListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCFeedManagerListener>, std::__1::allocator<__weak id<SCFeedManagerListener>>>> {
    struct vector<__weak id<SCFeedManagerListener>, std::__1::allocator<__weak id<SCFeedManagerListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCFreeDiskSpaceMonitorListener>, std::__1::allocator<__weak id<SCFreeDiskSpaceMonitorListener>>>> {
    struct vector<__weak id<SCFreeDiskSpaceMonitorListener>, std::__1::allocator<__weak id<SCFreeDiskSpaceMonitorListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCFriendEventListener>, std::__1::allocator<__weak id<SCFriendEventListener>>>> {
    struct vector<__weak id<SCFriendEventListener>, std::__1::allocator<__weak id<SCFriendEventListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCFriendLocationsListener>, std::__1::allocator<__weak id<SCFriendLocationsListener>>>> {
    struct vector<__weak id<SCFriendLocationsListener>, std::__1::allocator<__weak id<SCFriendLocationsListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCGalleryEGOCipherKeyProviderListener>, std::__1::allocator<__weak id<SCGalleryEGOCipherKeyProviderListener>>>> {
    struct vector<__weak id<SCGalleryEGOCipherKeyProviderListener>, std::__1::allocator<__weak id<SCGalleryEGOCipherKeyProviderListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCGalleryFaceInfoIndexerStatusListener>, std::__1::allocator<__weak id<SCGalleryFaceInfoIndexerStatusListener>>>> {
    struct vector<__weak id<SCGalleryFaceInfoIndexerStatusListener>, std::__1::allocator<__weak id<SCGalleryFaceInfoIndexerStatusListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCGalleryLagunaContentListener>, std::__1::allocator<__weak id<SCGalleryLagunaContentListener>>>> {
    struct vector<__weak id<SCGalleryLagunaContentListener>, std::__1::allocator<__weak id<SCGalleryLagunaContentListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCGalleryLagunaWifiControllerEventListener>, std::__1::allocator<__weak id<SCGalleryLagunaWifiControllerEventListener>>>> {
    struct vector<__weak id<SCGalleryLagunaWifiControllerEventListener>, std::__1::allocator<__weak id<SCGalleryLagunaWifiControllerEventListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCGalleryPhotoLibraryFetcherListener>, std::__1::allocator<__weak id<SCGalleryPhotoLibraryFetcherListener>>>> {
    struct vector<__weak id<SCGalleryPhotoLibraryFetcherListener>, std::__1::allocator<__weak id<SCGalleryPhotoLibraryFetcherListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCGalleryPrivateGalleryManagerListener>, std::__1::allocator<__weak id<SCGalleryPrivateGalleryManagerListener>>>> {
    struct vector<__weak id<SCGalleryPrivateGalleryManagerListener>, std::__1::allocator<__weak id<SCGalleryPrivateGalleryManagerListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCGallerySavingLoggerListener>, std::__1::allocator<__weak id<SCGallerySavingLoggerListener>>>> {
    struct vector<__weak id<SCGallerySavingLoggerListener>, std::__1::allocator<__weak id<SCGallerySavingLoggerListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCGallerySearchIndexerStatusListener>, std::__1::allocator<__weak id<SCGallerySearchIndexerStatusListener>>>> {
    struct vector<__weak id<SCGallerySearchIndexerStatusListener>, std::__1::allocator<__weak id<SCGallerySearchIndexerStatusListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCGallerySearchQueryResultsCollectorListener>, std::__1::allocator<__weak id<SCGallerySearchQueryResultsCollectorListener>>>> {
    struct vector<__weak id<SCGallerySearchQueryResultsCollectorListener>, std::__1::allocator<__weak id<SCGallerySearchQueryResultsCollectorListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCGalleryUserDefaultsManagerListener>, std::__1::allocator<__weak id<SCGalleryUserDefaultsManagerListener>>>> {
    struct vector<__weak id<SCGalleryUserDefaultsManagerListener>, std::__1::allocator<__weak id<SCGalleryUserDefaultsManagerListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCGroupManagerListener>, std::__1::allocator<__weak id<SCGroupManagerListener>>>> {
    struct vector<__weak id<SCGroupManagerListener>, std::__1::allocator<__weak id<SCGroupManagerListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCGtqUnlockablesDataSourceListener>, std::__1::allocator<__weak id<SCGtqUnlockablesDataSourceListener>>>> {
    struct vector<__weak id<SCGtqUnlockablesDataSourceListener>, std::__1::allocator<__weak id<SCGtqUnlockablesDataSourceListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCImageProcessColorFilterSessionListener>, std::__1::allocator<__weak id<SCImageProcessColorFilterSessionListener>>>> {
    struct vector<__weak id<SCImageProcessColorFilterSessionListener>, std::__1::allocator<__weak id<SCImageProcessColorFilterSessionListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCImageProcessVideoPlaybackSessionListener>, std::__1::allocator<__weak id<SCImageProcessVideoPlaybackSessionListener>>>> {
    struct vector<__weak id<SCImageProcessVideoPlaybackSessionListener>, std::__1::allocator<__weak id<SCImageProcessVideoPlaybackSessionListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCKeyServiceListener>, std::__1::allocator<__weak id<SCKeyServiceListener>>>> {
    struct vector<__weak id<SCKeyServiceListener>, std::__1::allocator<__weak id<SCKeyServiceListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCLagunaAppStatusListener>, std::__1::allocator<__weak id<SCLagunaAppStatusListener>>>> {
    struct vector<__weak id<SCLagunaAppStatusListener>, std::__1::allocator<__weak id<SCLagunaAppStatusListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCLagunaCBCentralManagerEventListener>, std::__1::allocator<__weak id<SCLagunaCBCentralManagerEventListener>>>> {
    struct vector<__weak id<SCLagunaCBCentralManagerEventListener>, std::__1::allocator<__weak id<SCLagunaCBCentralManagerEventListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCLagunaDeviceEventListener>, std::__1::allocator<__weak id<SCLagunaDeviceEventListener>>>> {
    struct vector<__weak id<SCLagunaDeviceEventListener>, std::__1::allocator<__weak id<SCLagunaDeviceEventListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCLagunaEventListener>, std::__1::allocator<__weak id<SCLagunaEventListener>>>> {
    struct vector<__weak id<SCLagunaEventListener>, std::__1::allocator<__weak id<SCLagunaEventListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCLagunaFirmwareUpdateEventListener>, std::__1::allocator<__weak id<SCLagunaFirmwareUpdateEventListener>>>> {
    struct vector<__weak id<SCLagunaFirmwareUpdateEventListener>, std::__1::allocator<__weak id<SCLagunaFirmwareUpdateEventListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCLagunaHomeWifiManagerEventListener>, std::__1::allocator<__weak id<SCLagunaHomeWifiManagerEventListener>>>> {
    struct vector<__weak id<SCLagunaHomeWifiManagerEventListener>, std::__1::allocator<__weak id<SCLagunaHomeWifiManagerEventListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCLagunaWifiSsidEventListener>, std::__1::allocator<__weak id<SCLagunaWifiSsidEventListener>>>> {
    struct vector<__weak id<SCLagunaWifiSsidEventListener>, std::__1::allocator<__weak id<SCLagunaWifiSsidEventListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCLensDataFetcherListenerV2>, std::__1::allocator<__weak id<SCLensDataFetcherListenerV2>>>> {
    struct vector<__weak id<SCLensDataFetcherListenerV2>, std::__1::allocator<__weak id<SCLensDataFetcherListenerV2>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCLensDataProviderListener>, std::__1::allocator<__weak id<SCLensDataProviderListener>>>> {
    struct vector<__weak id<SCLensDataProviderListener>, std::__1::allocator<__weak id<SCLensDataProviderListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCLensEffectActivatorListener>, std::__1::allocator<__weak id<SCLensEffectActivatorListener>>>> {
    struct vector<__weak id<SCLensEffectActivatorListener>, std::__1::allocator<__weak id<SCLensEffectActivatorListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCLensFrameRateCounterListener>, std::__1::allocator<__weak id<SCLensFrameRateCounterListener>>>> {
    struct vector<__weak id<SCLensFrameRateCounterListener>, std::__1::allocator<__weak id<SCLensFrameRateCounterListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCLensUIUpdateListener>, std::__1::allocator<__weak id<SCLensUIUpdateListener>>>> {
    struct vector<__weak id<SCLensUIUpdateListener>, std::__1::allocator<__weak id<SCLensUIUpdateListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCLocationDataUnlockablesListener>, std::__1::allocator<__weak id<SCLocationDataUnlockablesListener>>>> {
    struct vector<__weak id<SCLocationDataUnlockablesListener>, std::__1::allocator<__weak id<SCLocationDataUnlockablesListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCLocationServicesListener>, std::__1::allocator<__weak id<SCLocationServicesListener>>>> {
    struct vector<__weak id<SCLocationServicesListener>, std::__1::allocator<__weak id<SCLocationServicesListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCManagedAudioDataSourceListener>, std::__1::allocator<__weak id<SCManagedAudioDataSourceListener>>>> {
    struct vector<__weak id<SCManagedAudioDataSourceListener>, std::__1::allocator<__weak id<SCManagedAudioDataSourceListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCManagedCapturerListener>, std::__1::allocator<__weak id<SCManagedCapturerListener>>>> {
    struct vector<__weak id<SCManagedCapturerListener>, std::__1::allocator<__weak id<SCManagedCapturerListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCManagedDeviceCapacityAnalyzerListener>, std::__1::allocator<__weak id<SCManagedDeviceCapacityAnalyzerListener>>>> {
    struct vector<__weak id<SCManagedDeviceCapacityAnalyzerListener>, std::__1::allocator<__weak id<SCManagedDeviceCapacityAnalyzerListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCManagedLensProcessorStateListener>, std::__1::allocator<__weak id<SCManagedLensProcessorStateListener>>>> {
    struct vector<__weak id<SCManagedLensProcessorStateListener>, std::__1::allocator<__weak id<SCManagedLensProcessorStateListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCManagedVideoDataSourceListener>, std::__1::allocator<__weak id<SCManagedVideoDataSourceListener>>>> {
    struct vector<__weak id<SCManagedVideoDataSourceListener>, std::__1::allocator<__weak id<SCManagedVideoDataSourceListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCMapExploreDataStoreListener>, std::__1::allocator<__weak id<SCMapExploreDataStoreListener>>>> {
    struct vector<__weak id<SCMapExploreDataStoreListener>, std::__1::allocator<__weak id<SCMapExploreDataStoreListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCMediaDrawerDataSourceListener>, std::__1::allocator<__weak id<SCMediaDrawerDataSourceListener>>>> {
    struct vector<__weak id<SCMediaDrawerDataSourceListener>, std::__1::allocator<__weak id<SCMediaDrawerDataSourceListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCMediaFileRestorerStatusListener>, std::__1::allocator<__weak id<SCMediaFileRestorerStatusListener>>>> {
    struct vector<__weak id<SCMediaFileRestorerStatusListener>, std::__1::allocator<__weak id<SCMediaFileRestorerStatusListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCMergedGalleryDataSourceListener>, std::__1::allocator<__weak id<SCMergedGalleryDataSourceListener>>>> {
    struct vector<__weak id<SCMergedGalleryDataSourceListener>, std::__1::allocator<__weak id<SCMergedGalleryDataSourceListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCMotionManagerListener>, std::__1::allocator<__weak id<SCMotionManagerListener>>>> {
    struct vector<__weak id<SCMotionManagerListener>, std::__1::allocator<__weak id<SCMotionManagerListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCNetworkActivityListener>, std::__1::allocator<__weak id<SCNetworkActivityListener>>>> {
    struct vector<__weak id<SCNetworkActivityListener>, std::__1::allocator<__weak id<SCNetworkActivityListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCNetworkConnectivityListener>, std::__1::allocator<__weak id<SCNetworkConnectivityListener>>>> {
    struct vector<__weak id<SCNetworkConnectivityListener>, std::__1::allocator<__weak id<SCNetworkConnectivityListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCOnDemandGeofilterDataControllerListener>, std::__1::allocator<__weak id<SCOnDemandGeofilterDataControllerListener>>>> {
    struct vector<__weak id<SCOnDemandGeofilterDataControllerListener>, std::__1::allocator<__weak id<SCOnDemandGeofilterDataControllerListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCOnDemandGeofilterDataControllerNotificationListener>, std::__1::allocator<__weak id<SCOnDemandGeofilterDataControllerNotificationListener>>>> {
    struct vector<__weak id<SCOnDemandGeofilterDataControllerNotificationListener>, std::__1::allocator<__weak id<SCOnDemandGeofilterDataControllerNotificationListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCOnDemandLensAllTimeHitsTemplateDataStoreProtocolListener>, std::__1::allocator<__weak id<SCOnDemandLensAllTimeHitsTemplateDataStoreProtocolListener>>>> {
    struct vector<__weak id<SCOnDemandLensAllTimeHitsTemplateDataStoreProtocolListener>, std::__1::allocator<__weak id<SCOnDemandLensAllTimeHitsTemplateDataStoreProtocolListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCOnDemandLensDataStoreListener>, std::__1::allocator<__weak id<SCOnDemandLensDataStoreListener>>>> {
    struct vector<__weak id<SCOnDemandLensDataStoreListener>, std::__1::allocator<__weak id<SCOnDemandLensDataStoreListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCOperaViewersCellViewModelListener>, std::__1::allocator<__weak id<SCOperaViewersCellViewModelListener>>>> {
    struct vector<__weak id<SCOperaViewersCellViewModelListener>, std::__1::allocator<__weak id<SCOperaViewersCellViewModelListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCOperaWebAppAccessoryEventListener>, std::__1::allocator<__weak id<SCOperaWebAppAccessoryEventListener>>>> {
    struct vector<__weak id<SCOperaWebAppAccessoryEventListener>, std::__1::allocator<__weak id<SCOperaWebAppAccessoryEventListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCPaymentsMethodDidLoadPaymentsMethodListener>, std::__1::allocator<__weak id<SCPaymentsMethodDidLoadPaymentsMethodListener>>>> {
    struct vector<__weak id<SCPaymentsMethodDidLoadPaymentsMethodListener>, std::__1::allocator<__weak id<SCPaymentsMethodDidLoadPaymentsMethodListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCPreloadListener>, std::__1::allocator<__weak id<SCPreloadListener>>>> {
    struct vector<__weak id<SCPreloadListener>, std::__1::allocator<__weak id<SCPreloadListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCRequestSchedulingStateListener>, std::__1::allocator<__weak id<SCRequestSchedulingStateListener>>>> {
    struct vector<__weak id<SCRequestSchedulingStateListener>, std::__1::allocator<__weak id<SCRequestSchedulingStateListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCScreenshotSendListener>, std::__1::allocator<__weak id<SCScreenshotSendListener>>>> {
    struct vector<__weak id<SCScreenshotSendListener>, std::__1::allocator<__weak id<SCScreenshotSendListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCSearchAttachmentsClipboardProviderListener>, std::__1::allocator<__weak id<SCSearchAttachmentsClipboardProviderListener>>>> {
    struct vector<__weak id<SCSearchAttachmentsClipboardProviderListener>, std::__1::allocator<__weak id<SCSearchAttachmentsClipboardProviderListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCSearchAttachmentsDataProviderListener>, std::__1::allocator<__weak id<SCSearchAttachmentsDataProviderListener>>>> {
    struct vector<__weak id<SCSearchAttachmentsDataProviderListener>, std::__1::allocator<__weak id<SCSearchAttachmentsDataProviderListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCSearchEventListener>, std::__1::allocator<__weak id<SCSearchEventListener>>>> {
    struct vector<__weak id<SCSearchEventListener>, std::__1::allocator<__weak id<SCSearchEventListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCSearchFriendsDataProviderListener>, std::__1::allocator<__weak id<SCSearchFriendsDataProviderListener>>>> {
    struct vector<__weak id<SCSearchFriendsDataProviderListener>, std::__1::allocator<__weak id<SCSearchFriendsDataProviderListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCSearchUpdateListener>, std::__1::allocator<__weak id<SCSearchUpdateListener>>>> {
    struct vector<__weak id<SCSearchUpdateListener>, std::__1::allocator<__weak id<SCSearchUpdateListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCServerConfigListener>, std::__1::allocator<__weak id<SCServerConfigListener>>>> {
    struct vector<__weak id<SCServerConfigListener>, std::__1::allocator<__weak id<SCServerConfigListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCSnapLoggerListener>, std::__1::allocator<__weak id<SCSnapLoggerListener>>>> {
    struct vector<__weak id<SCSnapLoggerListener>, std::__1::allocator<__weak id<SCSnapLoggerListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCSnapVideoFilterUpdateListener>, std::__1::allocator<__weak id<SCSnapVideoFilterUpdateListener>>>> {
    struct vector<__weak id<SCSnapVideoFilterUpdateListener>, std::__1::allocator<__weak id<SCSnapVideoFilterUpdateListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCStoriesModelUpdateListener>, std::__1::allocator<__weak id<SCStoriesModelUpdateListener>>>> {
    struct vector<__weak id<SCStoriesModelUpdateListener>, std::__1::allocator<__weak id<SCStoriesModelUpdateListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCStoryLoggerListener>, std::__1::allocator<__weak id<SCStoryLoggerListener>>>> {
    struct vector<__weak id<SCStoryLoggerListener>, std::__1::allocator<__weak id<SCStoryLoggerListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCStoryMediaStateListener>, std::__1::allocator<__weak id<SCStoryMediaStateListener>>>> {
    struct vector<__weak id<SCStoryMediaStateListener>, std::__1::allocator<__weak id<SCStoryMediaStateListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCStudySettingsListener>, std::__1::allocator<__weak id<SCStudySettingsListener>>>> {
    struct vector<__weak id<SCStudySettingsListener>, std::__1::allocator<__weak id<SCStudySettingsListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCTDrawerHeightListener>, std::__1::allocator<__weak id<SCTDrawerHeightListener>>>> {
    struct vector<__weak id<SCTDrawerHeightListener>, std::__1::allocator<__weak id<SCTDrawerHeightListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCTPhoneCallListener>, std::__1::allocator<__weak id<SCTPhoneCallListener>>>> {
    struct vector<__weak id<SCTPhoneCallListener>, std::__1::allocator<__weak id<SCTPhoneCallListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCTV3ActiveConversationsListener>, std::__1::allocator<__weak id<SCTV3ActiveConversationsListener>>>> {
    struct vector<__weak id<SCTV3ActiveConversationsListener>, std::__1::allocator<__weak id<SCTV3ActiveConversationsListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCTV3CallStateListener>, std::__1::allocator<__weak id<SCTV3CallStateListener>>>> {
    struct vector<__weak id<SCTV3CallStateListener>, std::__1::allocator<__weak id<SCTV3CallStateListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCTV3MediaViewMediaChangeListener>, std::__1::allocator<__weak id<SCTV3MediaViewMediaChangeListener>>>> {
    struct vector<__weak id<SCTV3MediaViewMediaChangeListener>, std::__1::allocator<__weak id<SCTV3MediaViewMediaChangeListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCTV3PresenceChangeListener>, std::__1::allocator<__weak id<SCTV3PresenceChangeListener>>>> {
    struct vector<__weak id<SCTV3PresenceChangeListener>, std::__1::allocator<__weak id<SCTV3PresenceChangeListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCTV3SessionWrapperListener>, std::__1::allocator<__weak id<SCTV3SessionWrapperListener>>>> {
    struct vector<__weak id<SCTV3SessionWrapperListener>, std::__1::allocator<__weak id<SCTV3SessionWrapperListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCTV3SpeechActivityListener>, std::__1::allocator<__weak id<SCTV3SpeechActivityListener>>>> {
    struct vector<__weak id<SCTV3SpeechActivityListener>, std::__1::allocator<__weak id<SCTV3SpeechActivityListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCTileDataSourceListener>, std::__1::allocator<__weak id<SCTileDataSourceListener>>>> {
    struct vector<__weak id<SCTileDataSourceListener>, std::__1::allocator<__weak id<SCTileDataSourceListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCTilesListener>, std::__1::allocator<__weak id<SCTilesListener>>>> {
    struct vector<__weak id<SCTilesListener>, std::__1::allocator<__weak id<SCTilesListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCUnlockablesCommonDataStoreListener>, std::__1::allocator<__weak id<SCUnlockablesCommonDataStoreListener>>>> {
    struct vector<__weak id<SCUnlockablesCommonDataStoreListener>, std::__1::allocator<__weak id<SCUnlockablesCommonDataStoreListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCUpdatesResponseListener>, std::__1::allocator<__weak id<SCUpdatesResponseListener>>>> {
    struct vector<__weak id<SCUpdatesResponseListener>, std::__1::allocator<__weak id<SCUpdatesResponseListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<std::__1::vector<__weak id<SCUpdatesResponseListenerAnnouncerChangeListener>, std::__1::allocator<__weak id<SCUpdatesResponseListenerAnnouncerChangeListener>>>> {
    struct vector<__weak id<SCUpdatesResponseListenerAnnouncerChangeListener>, std::__1::allocator<__weak id<SCUpdatesResponseListenerAnnouncerChangeListener>>> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<talkcorev3::AsyncTask> {
    struct AsyncTask *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<talkcorev3::CallingManager> {
    struct CallingManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<talkcorev3::CompletionHandler> {
    struct CompletionHandler *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<talkcorev3::Logger> {
    struct Logger *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<talkcorev3::MetricsMetadataContainer> {
    struct MetricsMetadataContainer *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<talkcorev3::MetricsReporter> {
    struct MetricsReporter *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<talkcorev3::Session> {
    struct Session *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<talkcorev3::SessionDelegate> {
    struct SessionDelegate *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<talkcorev3::TalkCore> {
    struct TalkCore *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct shared_ptr<talkcorev3::TalkCoreDelegate> {
    struct TalkCoreDelegate *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct sig_extractor_pipe;

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct sockaddr_in {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    struct in_addr _field4;
    char _field5[8];
};

struct sockaddr_in6 {
    unsigned char _field1;
    unsigned char _field2;
    unsigned short _field3;
    unsigned int _field4;
    struct in6_addr _field5;
    unsigned int _field6;
};

struct sockaddr_un {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[104];
};

struct sqlite3;

struct stream_engine {
    void *_field1;
    void *_field2;
};

struct tmat4x4<float, glm::precision::packed_highp> {
    struct tvec4<float, glm::precision::packed_highp> _field1[4];
};

struct tuple<std::__1::unique_ptr<LS::ImageObjC, std::__1::default_delete<LS::ImageObjC>>, std::__1::shared_ptr<LS::TextureBase>, std::__1::shared_ptr<LS::TextureBase>, std::__1::shared_ptr<LS::TextureBase>, CGSize> {
    struct __tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4>, std::__1::unique_ptr<LS::ImageObjC, std::__1::default_delete<LS::ImageObjC>>, std::__1::shared_ptr<LS::TextureBase>, std::__1::shared_ptr<LS::TextureBase>, std::__1::shared_ptr<LS::TextureBase>, CGSize> {
        unique_ptr_430f0bd3 _field1;
        shared_ptr_c46ccacf _field2;
        shared_ptr_c46ccacf _field3;
        shared_ptr_c46ccacf _field4;
        struct CGSize _field5;
    } _field1;
};

struct tvec3<float, glm::precision::packed_highp> {
    union {
        CDStruct_869f9c67 _field1;
        CDStruct_869f9c67 _field2;
        CDStruct_869f9c67 _field3;
    } _field1;
};

struct tvec4<float, glm::precision::packed_highp> {
    union {
        CDStruct_818bb265 _field1;
        CDStruct_818bb265 _field2;
        CDStruct_818bb265 _field3;
        struct type _field4;
    } _field1;
};

struct type {
    unsigned char __lx[56];
};

struct unique_ptr<FaceBioGraphics, std::__1::default_delete<FaceBioGraphics>> {
    struct __compressed_pair<FaceBioGraphics *, std::__1::default_delete<FaceBioGraphics>> {
        struct FaceBioGraphics *__first_;
    } __ptr_;
};

struct unique_ptr<GURL, std::__1::default_delete<GURL>> {
    struct __compressed_pair<GURL *, std::__1::default_delete<GURL>> {
        struct GURL *_field1;
    } _field1;
};

struct unique_ptr<LS::AudioChain::AudioChainMain::Impl, std::__1::default_delete<LS::AudioChain::AudioChainMain::Impl>> {
    struct __compressed_pair<LS::AudioChain::AudioChainMain::Impl *, std::__1::default_delete<LS::AudioChain::AudioChainMain::Impl>> {
        struct Impl *_field1;
    } _field1;
};

struct unique_ptr<LS::FrameBuffer, std::__1::function<void (LS::FrameBuffer *)>> {
    struct __compressed_pair<LS::FrameBuffer *, std::__1::function<void (LS::FrameBuffer *)>> {
        struct FrameBuffer *__first_;
        struct function<void (LS::FrameBuffer *)> __second_;
    } __ptr_;
};

struct unique_ptr<LS::ImageObjC, std::__1::default_delete<LS::ImageObjC>> {
    struct __compressed_pair<LS::ImageObjC *, std::__1::default_delete<LS::ImageObjC>> {
        struct ImageObjC *_field1;
    } _field1;
};

struct unique_ptr<LS::NaturalFeatureModel::Impl, std::__1::default_delete<LS::NaturalFeatureModel::Impl>> {
    struct __compressed_pair<LS::NaturalFeatureModel::Impl *, std::__1::default_delete<LS::NaturalFeatureModel::Impl>> {
        struct Impl *_field1;
    } _field1;
};

struct unique_ptr<LS::RGB2NV21Convertor, std::__1::default_delete<LS::RGB2NV21Convertor>> {
    struct __compressed_pair<LS::RGB2NV21Convertor *, std::__1::default_delete<LS::RGB2NV21Convertor>> {
        struct RGB2NV21Convertor *__first_;
    } __ptr_;
};

struct unique_ptr<LS::SLAMModel::Impl, std::__1::default_delete<LS::SLAMModel::Impl>> {
    struct __compressed_pair<LS::SLAMModel::Impl *, std::__1::default_delete<LS::SLAMModel::Impl>> {
        struct Impl *_field1;
    } _field1;
};

struct unique_ptr<LS::SnapcodeTrackingDataInternal, std::__1::default_delete<LS::SnapcodeTrackingDataInternal>> {
    struct __compressed_pair<LS::SnapcodeTrackingDataInternal *, std::__1::default_delete<LS::SnapcodeTrackingDataInternal>> {
        struct SnapcodeTrackingDataInternal *_field1;
    } _field1;
};

struct unique_ptr<LS::Tracking::Depth::TrackerData, std::__1::default_delete<LS::Tracking::Depth::TrackerData>> {
    struct __compressed_pair<LS::Tracking::Depth::TrackerData *, std::__1::default_delete<LS::Tracking::Depth::TrackerData>> {
        struct TrackerData *_field1;
    } _field1;
};

struct unique_ptr<LS::Tracking::Face::TrackerWrapper, std::__1::default_delete<LS::Tracking::Face::TrackerWrapper>> {
    struct __compressed_pair<LS::Tracking::Face::TrackerWrapper *, std::__1::default_delete<LS::Tracking::Face::TrackerWrapper>> {
        struct TrackerWrapper *__first_;
    } __ptr_;
};

struct unique_ptr<LS::Tracking::ObjectDetectorTracker::TrackerData, std::__1::default_delete<LS::Tracking::ObjectDetectorTracker::TrackerData>> {
    struct __compressed_pair<LS::Tracking::ObjectDetectorTracker::TrackerData *, std::__1::default_delete<LS::Tracking::ObjectDetectorTracker::TrackerData>> {
        struct TrackerData *_field1;
    } _field1;
};

struct unique_ptr<LS::Tracking::OpticalFlowTracker::TrackerData, std::__1::default_delete<LS::Tracking::OpticalFlowTracker::TrackerData>> {
    struct __compressed_pair<LS::Tracking::OpticalFlowTracker::TrackerData *, std::__1::default_delete<LS::Tracking::OpticalFlowTracker::TrackerData>> {
        struct TrackerData *_field1;
    } _field1;
};

struct unique_ptr<LS::Tracking::SceneRecognition::TrackerData, std::__1::default_delete<LS::Tracking::SceneRecognition::TrackerData>> {
    struct __compressed_pair<LS::Tracking::SceneRecognition::TrackerData *, std::__1::default_delete<LS::Tracking::SceneRecognition::TrackerData>> {
        struct TrackerData *_field1;
    } _field1;
};

struct unique_ptr<LS::Tracking::Segmentation::TrackerData, std::__1::default_delete<LS::Tracking::Segmentation::TrackerData>> {
    struct __compressed_pair<LS::Tracking::Segmentation::TrackerData *, std::__1::default_delete<LS::Tracking::Segmentation::TrackerData>> {
        struct TrackerData *_field1;
    } _field1;
};

struct unique_ptr<MGLRenderFrontend, std::__1::default_delete<MGLRenderFrontend>> {
    struct __compressed_pair<MGLRenderFrontend *, std::__1::default_delete<MGLRenderFrontend>> {
        struct MGLRenderFrontend *__first_;
    } __ptr_;
};

struct unique_ptr<SC::ObjectPool<SQLiteConnection, 63>, std::__1::default_delete<SC::ObjectPool<SQLiteConnection, 63>>> {
    struct __compressed_pair<SC::ObjectPool<SQLiteConnection, 63>*, std::__1::default_delete<SC::ObjectPool<SQLiteConnection, 63>>> {
        struct ObjectPool<SQLiteConnection, 63> *__first_;
    } __ptr_;
};

struct unique_ptr<SQLiteConnection, std::__1::default_delete<SQLiteConnection>> {
    struct __compressed_pair<SQLiteConnection *, std::__1::default_delete<SQLiteConnection>> {
        struct SQLiteConnection *__first_;
    } __ptr_;
};

struct unique_ptr<SnapCutExt, std::__1::default_delete<SnapCutExt>> {
    struct __compressed_pair<SnapCutExt *, std::__1::default_delete<SnapCutExt>> {
        struct SnapCutExt *__first_;
    } __ptr_;
};

struct unique_ptr<Snapchat::Unlockables::SCPreviewContextDnnWrapper::Impl, std::__1::default_delete<Snapchat::Unlockables::SCPreviewContextDnnWrapper::Impl>> {
    struct __compressed_pair<Snapchat::Unlockables::SCPreviewContextDnnWrapper::Impl *, std::__1::default_delete<Snapchat::Unlockables::SCPreviewContextDnnWrapper::Impl>> {
        struct Impl *_field1;
    } _field1;
};

struct unique_ptr<adl::media::IosCamera::Impl, std::__1::default_delete<adl::media::IosCamera::Impl>> {
    struct __compressed_pair<adl::media::IosCamera::Impl *, std::__1::default_delete<adl::media::IosCamera::Impl>> {
        struct Impl *_field1;
    } _field1;
};

struct unique_ptr<base::Thread, std::__1::default_delete<base::Thread>> {
    struct __compressed_pair<base::Thread *, std::__1::default_delete<base::Thread>> {
        struct Thread *_field1;
    } _field1;
};

struct unique_ptr<face3DTrack::Face3DFit, std::__1::default_delete<face3DTrack::Face3DFit>> {
    struct __compressed_pair<face3DTrack::Face3DFit *, std::__1::default_delete<face3DTrack::Face3DFit>> {
        struct Face3DFit *__first_;
    } __ptr_;
};

struct unique_ptr<face3DTrack::Face3DModel, std::__1::default_delete<face3DTrack::Face3DModel>> {
    struct __compressed_pair<face3DTrack::Face3DModel *, std::__1::default_delete<face3DTrack::Face3DModel>> {
        struct Face3DModel *__first_;
    } __ptr_;
};

struct unique_ptr<face3DTrack::FaceMorph, std::__1::default_delete<face3DTrack::FaceMorph>> {
    struct __compressed_pair<face3DTrack::FaceMorph *, std::__1::default_delete<face3DTrack::FaceMorph>> {
        struct FaceMorph *__first_;
    } __ptr_;
};

struct unique_ptr<mbgl::Actor<mbgl::ResourceTransform>, std::__1::default_delete<mbgl::Actor<mbgl::ResourceTransform>>> {
    struct __compressed_pair<mbgl::Actor<mbgl::ResourceTransform>*, std::__1::default_delete<mbgl::Actor<mbgl::ResourceTransform>>> {
        struct Actor<mbgl::ResourceTransform> *__first_;
    } __ptr_;
};

struct unique_ptr<mbgl::Actor<std::__1::function<void (std::exception_ptr, mbgl::Image<mbgl::ImageAlphaMode::Premultiplied>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, std::__1::function<mapbox::geometry::point<double>(const mbgl::LatLng &)>)>>, std::__1::default_delete<mbgl::Actor<std::__1::function<void (std::exception_ptr, mbgl::Image<mbgl::ImageAlphaMode::Premultiplied>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, std::__1::function<mapbox::geometry::point<double>(const mbgl::LatLng &)>)>>>> {
    struct __compressed_pair<mbgl::Actor<std::__1::function<void (std::exception_ptr, mbgl::Image<mbgl::ImageAlphaMode::Premultiplied>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, std::__1::function<mapbox::geometry::point<double>(const mbgl::LatLng &)>)>>*, std::__1::default_delete<mbgl::Actor<std::__1::function<void (std::exception_ptr, mbgl::Image<mbgl::ImageAlphaMode::Premultiplied>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, std::__1::function<mapbox::geometry::point<double>(const mbgl::LatLng &)>)>>>> {
        struct Actor<std::__1::function<void (std::exception_ptr, mbgl::Image<mbgl::ImageAlphaMode::Premultiplied>, std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, std::__1::function<mapbox::geometry::point<double>(const mbgl::LatLng &)>)>> *__first_;
    } __ptr_;
};

struct unique_ptr<mbgl::AsyncRequest, std::__1::default_delete<mbgl::AsyncRequest>> {
    struct __compressed_pair<mbgl::AsyncRequest *, std::__1::default_delete<mbgl::AsyncRequest>> {
        struct AsyncRequest *_field1;
    } _field1;
};

struct unique_ptr<mbgl::Map::Impl, std::__1::default_delete<mbgl::Map::Impl>> {
    struct __compressed_pair<mbgl::Map::Impl *, std::__1::default_delete<mbgl::Map::Impl>> {
        struct Impl *_field1;
    } _field1;
};

struct unique_ptr<mbgl::MapSnapshotter, std::__1::default_delete<mbgl::MapSnapshotter>> {
    struct __compressed_pair<mbgl::MapSnapshotter *, std::__1::default_delete<mbgl::MapSnapshotter>> {
        struct MapSnapshotter *__first_;
    } __ptr_;
};

struct unique_ptr<mbgl::Renderer::Impl, std::__1::default_delete<mbgl::Renderer::Impl>> {
    struct __compressed_pair<mbgl::Renderer::Impl *, std::__1::default_delete<mbgl::Renderer::Impl>> {
        struct Impl *_field1;
    } _field1;
};

struct unique_ptr<mbgl::gl::Context, std::__1::default_delete<mbgl::gl::Context>> {
    struct __compressed_pair<mbgl::gl::Context *, std::__1::default_delete<mbgl::gl::Context>> {
        struct Context *_field1;
    } _field1;
};

struct unique_ptr<mbgl::style::Image, std::__1::default_delete<mbgl::style::Image>> {
    struct __compressed_pair<mbgl::style::Image *, std::__1::default_delete<mbgl::style::Image>> {
        struct Image *_field1;
    } _field1;
};

struct unique_ptr<mbgl::style::Layer, std::__1::default_delete<mbgl::style::Layer>> {
    struct __compressed_pair<mbgl::style::Layer *, std::__1::default_delete<mbgl::style::Layer>> {
        struct Layer *__first_;
    } __ptr_;
};

struct unique_ptr<mbgl::style::Source, std::__1::default_delete<mbgl::style::Source>> {
    struct __compressed_pair<mbgl::style::Source *, std::__1::default_delete<mbgl::style::Source>> {
        struct Source *__first_;
    } __ptr_;
};

struct unique_ptr<mbgl::style::Style::Impl, std::__1::default_delete<mbgl::style::Style::Impl>> {
    struct __compressed_pair<mbgl::style::Style::Impl *, std::__1::default_delete<mbgl::style::Style::Impl>> {
        struct Impl *_field1;
    } _field1;
};

struct unique_ptr<mbgl::util::Thread<mbgl::DefaultFileSource::Impl>, std::__1::default_delete<mbgl::util::Thread<mbgl::DefaultFileSource::Impl>>> {
    struct __compressed_pair<mbgl::util::Thread<mbgl::DefaultFileSource::Impl>*, std::__1::default_delete<mbgl::util::Thread<mbgl::DefaultFileSource::Impl>>> {
        struct Thread<mbgl::DefaultFileSource::Impl> *_field1;
    } _field1;
};

struct unique_ptr<net::CertVerifier, std::__1::default_delete<net::CertVerifier>> {
    struct __compressed_pair<net::CertVerifier *, std::__1::default_delete<net::CertVerifier>> {
        struct CertVerifier *_field1;
    } _field1;
};

struct unique_ptr<net::CookieStore, std::__1::default_delete<net::CookieStore>> {
    struct __compressed_pair<net::CookieStore *, std::__1::default_delete<net::CookieStore>> {
        struct CookieStore *_field1;
    } _field1;
};

struct unique_ptr<net::NetLog, std::__1::default_delete<net::NetLog>> {
    struct __compressed_pair<net::NetLog *, std::__1::default_delete<net::NetLog>> {
        struct NetLog *_field1;
    } _field1;
};

struct unique_ptr<net::URLRequestContext, std::__1::default_delete<net::URLRequestContext>> {
    struct __compressed_pair<net::URLRequestContext *, std::__1::default_delete<net::URLRequestContext>> {
        struct URLRequestContext *_field1;
    } _field1;
};

struct unique_ptr<net::URLRequestJob, std::__1::default_delete<net::URLRequestJob>> {
    struct __compressed_pair<net::URLRequestJob *, std::__1::default_delete<net::URLRequestJob>> {
        struct URLRequestJob *_field1;
    } _field1;
};

struct unique_ptr<net::UploadDataStream, std::__1::default_delete<net::UploadDataStream>> {
    struct __compressed_pair<net::UploadDataStream *, std::__1::default_delete<net::UploadDataStream>> {
        struct UploadDataStream *_field1;
    } _field1;
};

struct unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>>;

struct unique_ptr<net::WriteToFileNetLogObserver, std::__1::default_delete<net::WriteToFileNetLogObserver>> {
    struct __compressed_pair<net::WriteToFileNetLogObserver *, std::__1::default_delete<net::WriteToFileNetLogObserver>> {
        struct WriteToFileNetLogObserver *_field1;
    } _field1;
};

struct unique_ptr<rtc::FileRotatingLogSink, std::__1::default_delete<rtc::FileRotatingLogSink>> {
    struct __compressed_pair<rtc::FileRotatingLogSink *, std::__1::default_delete<rtc::FileRotatingLogSink>> {
        struct FileRotatingLogSink *__first_;
    } __ptr_;
};

struct unique_ptr<sig_extractor_pipe, std::__1::default_delete<sig_extractor_pipe>> {
    struct __compressed_pair<sig_extractor_pipe *, std::__1::default_delete<sig_extractor_pipe>> {
        struct sig_extractor_pipe *_field1;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<LS::TrackingRequirement, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<LS::TrackingRequirement, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<LS::TrackingRequirement, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<LS::TrackingRequirement, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<LS::TrackingRequirement, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<LS::TrackingRequirement, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<LS::TrackingRequirement, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<int, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<int, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<int, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<int, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<int, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<int, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<int, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<long, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<long, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<long, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<long, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<long, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<long, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<long, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, NSString *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, NSString *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, NSString *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, NSString *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, NSString *>, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, NSString *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, NSString *>, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, sqlite3_stmt *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, sqlite3_stmt *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, sqlite3_stmt *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, sqlite3_stmt *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, sqlite3_stmt *>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, sqlite3_stmt *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, sqlite3_stmt *>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, bool, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, bool>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, bool, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, bool>>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, bool, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, bool>>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, bool, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, bool>>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, bool, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, bool>>>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, bool, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, bool>>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, bool, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, bool>>>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, unsigned long long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, unsigned long long>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, unsigned long long>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, unsigned long long>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, unsigned long long>, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, unsigned long long>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, unsigned long long>, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, LS::Any>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, LS::Any>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, LS::Any>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, LS::Any>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, LS::Any>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, LS::Any>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, LS::Any>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_map<std::__1::basic_string<char>, LS::Any, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, LS::Any>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_map<std::__1::basic_string<char>, LS::Any, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, LS::Any>>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_map<std::__1::basic_string<char>, LS::Any, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, LS::Any>>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_map<std::__1::basic_string<char>, LS::Any, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, LS::Any>>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_map<std::__1::basic_string<char>, LS::Any, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, LS::Any>>>>, void *>*> **_field1;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_map<std::__1::basic_string<char>, LS::Any, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, LS::Any>>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_map<std::__1::basic_string<char>, LS::Any, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, LS::Any>>>>, void *>*>*>> {
                unsigned long long _field1;
            } _field1;
        } _field2;
    } _field1;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, void *>*> **__first_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, void *>*>*>> {
                unsigned long long __first_;
            } __data_;
        } __second_;
    } __ptr_;
};

struct unique_ptr<tensorflow::Session, std::__1::default_delete<tensorflow::Session>> {
    struct __compressed_pair<tensorflow::Session *, std::__1::default_delete<tensorflow::Session>> {
        struct Session *__first_;
    } __ptr_;
};

struct unique_ptr<unsigned char [], std::__1::default_delete<unsigned char []>> {
    struct __compressed_pair<unsigned char *, std::__1::default_delete<unsigned char []>> {
        char *_field1;
    } _field1;
};

struct unordered_map<int, int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, int>>> {
    struct __hash_table<std::__1::__hash_value_type<int, int>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, int>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, int>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, int>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, int>, std::__1::hash<int>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, int>, std::__1::equal_to<int>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<long, IGListMoveIndex *, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, IGListMoveIndex *>>> {
    struct __hash_table<std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::equal_to<long>, true>, std::__1::allocator<std::__1::__hash_value_type<long, IGListMoveIndex *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::hash<long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::equal_to<long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<long, NSString *, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, NSString *>>> {
    struct __hash_table<std::__1::__hash_value_type<long, NSString *>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, NSString *>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, NSString *>, std::__1::equal_to<long>, true>, std::__1::allocator<std::__1::__hash_value_type<long, NSString *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, NSString *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, NSString *>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, NSString *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long, NSString *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, NSString *>, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, NSString *>, std::__1::hash<long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, NSString *>, std::__1::equal_to<long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<long, SCDocObjectClassFunctionPointer, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, SCDocObjectClassFunctionPointer>>> {
    struct __hash_table<std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>, std::__1::equal_to<long>, true>, std::__1::allocator<std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>, std::__1::hash<long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, SCDocObjectClassFunctionPointer>, std::__1::equal_to<long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<long, sqlite3_stmt *, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, sqlite3_stmt *>>> {
    struct __hash_table<std::__1::__hash_value_type<long, sqlite3_stmt *>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, sqlite3_stmt *>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, sqlite3_stmt *>, std::__1::equal_to<long>, true>, std::__1::allocator<std::__1::__hash_value_type<long, sqlite3_stmt *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, sqlite3_stmt *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, sqlite3_stmt *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, sqlite3_stmt *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long, sqlite3_stmt *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, sqlite3_stmt *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, sqlite3_stmt *>, std::__1::hash<long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, sqlite3_stmt *>, std::__1::equal_to<long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<long, std::__1::unordered_map<const char *, bool, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, bool>>>, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, std::__1::unordered_map<const char *, bool, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, bool>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, bool, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, bool>>>>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, bool, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, bool>>>>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, bool, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, bool>>>>, std::__1::equal_to<long>, true>, std::__1::allocator<std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, bool, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, bool>>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, bool, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, bool>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, bool, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, bool>>>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, bool, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, bool>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, bool, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, bool>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, bool, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, bool>>>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, bool, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, bool>>>>, std::__1::hash<long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, std::__1::unordered_map<const char *, bool, std::__1::hash<const char *>, std::__1::equal_to<const char *>, std::__1::allocator<std::__1::pair<const char *const, bool>>>>, std::__1::equal_to<long>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>, std::__1::equal_to<long>, true>, std::__1::allocator<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>, std::__1::hash<long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, std::__1::unordered_map<long long, SCDocObject *, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, SCDocObject *>>>>, std::__1::equal_to<long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>, std::__1::equal_to<long>, true>, std::__1::allocator<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>, std::__1::hash<long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, std::__1::unordered_map<long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>, std::__1::hash<long long>, std::__1::equal_to<long long>, std::__1::allocator<std::__1::pair<const long long, std::__1::unordered_map<unsigned long long, SCObjectObservation, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCObjectObservation>>>>>>>, std::__1::equal_to<long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>, std::__1::equal_to<long>, true>, std::__1::allocator<std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>, std::__1::hash<long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, std::__1::unordered_map<unsigned long long, SCFetchedResultObserver, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, SCFetchedResultObserver>>>>, std::__1::equal_to<long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<long, unsigned long long, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, unsigned long long>>> {
    struct __hash_table<std::__1::__hash_value_type<long, unsigned long long>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, unsigned long long>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, unsigned long long>, std::__1::equal_to<long>, true>, std::__1::allocator<std::__1::__hash_value_type<long, unsigned long long>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, unsigned long long>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, unsigned long long>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, unsigned long long>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long, unsigned long long>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, unsigned long long>, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, unsigned long long>, std::__1::hash<long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, unsigned long long>, std::__1::equal_to<long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<std::__1::basic_string<char>, LS::Any, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, LS::Any>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, LS::Any>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, LS::Any>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, LS::Any>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, LS::Any>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, LS::Any>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, LS::Any>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, LS::Any>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, LS::Any>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, LS::Any>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, LS::Any>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, LS::Any>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<std::__1::basic_string<char>, mapbox::geometry::value, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mapbox::geometry::value>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<std::__1::basic_string<char>, sqlite3_stmt *, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, sqlite3_stmt *>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, sqlite3_stmt *>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<std::__1::basic_string<char>, std::__1::basic_string<char>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<std::__1::basic_string<char>, std::__1::unordered_map<std::__1::basic_string<char>, LS::Any, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, LS::Any>>>, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, std::__1::unordered_map<std::__1::basic_string<char>, LS::Any, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, LS::Any>>>>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_map<std::__1::basic_string<char>, LS::Any, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, LS::Any>>>>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_map<std::__1::basic_string<char>, LS::Any, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, LS::Any>>>>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_map<std::__1::basic_string<char>, LS::Any, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, LS::Any>>>>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_map<std::__1::basic_string<char>, LS::Any, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, LS::Any>>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_map<std::__1::basic_string<char>, LS::Any, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, LS::Any>>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_map<std::__1::basic_string<char>, LS::Any, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, LS::Any>>>>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_map<std::__1::basic_string<char>, LS::Any, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, LS::Any>>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_map<std::__1::basic_string<char>, LS::Any, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, LS::Any>>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_map<std::__1::basic_string<char>, LS::Any, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, LS::Any>>>>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_map<std::__1::basic_string<char>, LS::Any, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, LS::Any>>>>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, std::__1::unordered_map<std::__1::basic_string<char>, LS::Any, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, LS::Any>>>>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float _field1;
        } _field4;
    } _field1;
};

struct unordered_map<unsigned int, MGLAnnotationContext, std::__1::hash<unsigned int>, std::__1::equal_to<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, MGLAnnotationContext>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>, std::__1::hash<unsigned int>, true>, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>, std::__1::equal_to<unsigned int>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned int, std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>, std::__1::hash<unsigned int>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned int, std::__1::__hash_value_type<unsigned int, MGLAnnotationContext>, std::__1::equal_to<unsigned int>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, std::__1::vector<unsigned long long, std::__1::allocator<unsigned long long>>>, std::__1::equal_to<unsigned long long>, true>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_set<LS::TrackingRequirement, std::__1::hash<LS::TrackingRequirement>, std::__1::equal_to<LS::TrackingRequirement>, std::__1::allocator<LS::TrackingRequirement>> {
    struct __hash_table<LS::TrackingRequirement, std::__1::hash<LS::TrackingRequirement>, std::__1::equal_to<LS::TrackingRequirement>, std::__1::allocator<LS::TrackingRequirement>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<LS::TrackingRequirement, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<LS::TrackingRequirement, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<LS::TrackingRequirement, void *>*>, std::__1::allocator<std::__1::__hash_node<LS::TrackingRequirement, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<LS::TrackingRequirement, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<LS::TrackingRequirement>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<LS::TrackingRequirement>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_set<_IGListWorkingRangeHandlerIndexPath, _IGListWorkingRangeHandlerIndexPathHash, std::__1::equal_to<_IGListWorkingRangeHandlerIndexPath>, std::__1::allocator<_IGListWorkingRangeHandlerIndexPath>> {
    struct __hash_table<_IGListWorkingRangeHandlerIndexPath, _IGListWorkingRangeHandlerIndexPathHash, std::__1::equal_to<_IGListWorkingRangeHandlerIndexPath>, std::__1::allocator<_IGListWorkingRangeHandlerIndexPath>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*>, std::__1::allocator<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerIndexPath, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, _IGListWorkingRangeHandlerIndexPathHash> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<_IGListWorkingRangeHandlerIndexPath>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_set<_IGListWorkingRangeHandlerSectionControllerWrapper, _IGListWorkingRangeHashID, std::__1::equal_to<_IGListWorkingRangeHandlerSectionControllerWrapper>, std::__1::allocator<_IGListWorkingRangeHandlerSectionControllerWrapper>> {
    struct __hash_table<_IGListWorkingRangeHandlerSectionControllerWrapper, _IGListWorkingRangeHashID, std::__1::equal_to<_IGListWorkingRangeHandlerSectionControllerWrapper>, std::__1::allocator<_IGListWorkingRangeHandlerSectionControllerWrapper>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*>, std::__1::allocator<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<_IGListWorkingRangeHandlerSectionControllerWrapper, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, _IGListWorkingRangeHashID> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<_IGListWorkingRangeHandlerSectionControllerWrapper>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_set<int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<int>> {
    struct __hash_table<int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<int>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<int, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<int, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<int, void *>*>, std::__1::allocator<std::__1::__hash_node<int, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<int, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<int>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<int>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct unordered_set<long, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<long>> {
    struct __hash_table<long, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<long>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<long, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<long, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<long, void *>*>, std::__1::allocator<std::__1::__hash_node<long, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<long, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<long>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<long>> {
            float __first_;
        } __p3_;
    } __table_;
};

struct value {
    unsigned long long _field1;
    struct type _field2;
};

struct variant<mapbox::geometry::geometry<double>, mapbox::geometry::feature<double>, mapbox::geometry::feature_collection<double, std::vector>> {
    unsigned long long _field1;
    struct type _field2;
};

struct variant<mbgl::SymbolAnnotation, mbgl::LineAnnotation, mbgl::FillAnnotation> {
    unsigned long long _field1;
    struct type _field2;
};

struct variant<mbgl::style::Undefined, mbgl::Color, mbgl::style::CameraFunction<mbgl::Color>> {
    unsigned long long _field1;
    struct type _field2;
};

struct variant<std::__1::basic_string<char>, mbgl::Tileset> {
    unsigned long long _field1;
    struct type _field2;
};

struct variant<unsigned long long, long long, double, std::__1::basic_string<char>> {
    unsigned long long _field1;
    struct type _field2;
};

struct vec3 {
    union {
        float _field1[3];
        CDStruct_869f9c67 _field2;
        CDStruct_869f9c67 _field3;
        CDStruct_869f9c67 _field4;
    } _field1;
};

struct vector<CLLocationCoordinate2D, std::__1::allocator<CLLocationCoordinate2D>> {
    struct CLLocationCoordinate2D *__begin_;
    struct CLLocationCoordinate2D *__end_;
    struct __compressed_pair<CLLocationCoordinate2D *, std::__1::allocator<CLLocationCoordinate2D>> {
        struct CLLocationCoordinate2D *__first_;
    } __end_cap_;
};

struct vector<ConvolutionLayer *, std::__1::allocator<ConvolutionLayer *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<ConvolutionLayer *__strong *, std::__1::allocator<ConvolutionLayer *>> {
        id *__first_;
    } __end_cap_;
};

struct vector<DeconvolutionLayer *, std::__1::allocator<DeconvolutionLayer *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<DeconvolutionLayer *__strong *, std::__1::allocator<DeconvolutionLayer *>> {
        id *__first_;
    } __end_cap_;
};

struct vector<DepthwiseConvolutionLayer *, std::__1::allocator<DepthwiseConvolutionLayer *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<DepthwiseConvolutionLayer *__strong *, std::__1::allocator<DepthwiseConvolutionLayer *>> {
        id *__first_;
    } __end_cap_;
};

struct vector<GURL, std::__1::allocator<GURL>> {
    struct GURL *_field1;
    struct GURL *_field2;
    struct __compressed_pair<GURL *, std::__1::allocator<GURL>> {
        struct GURL *_field1;
    } _field3;
};

struct vector<IGListSectionEntry, std::__1::allocator<IGListSectionEntry>> {
    struct IGListSectionEntry *__begin_;
    struct IGListSectionEntry *__end_;
    struct __compressed_pair<IGListSectionEntry *, std::__1::allocator<IGListSectionEntry>> {
        struct IGListSectionEntry *__first_;
    } __end_cap_;
};

struct vector<InstanceNormLayer *, std::__1::allocator<InstanceNormLayer *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<InstanceNormLayer *__strong *, std::__1::allocator<InstanceNormLayer *>> {
        id *__first_;
    } __end_cap_;
};

struct vector<LS::Expression, std::__1::allocator<LS::Expression>> {
    struct Expression *_field1;
    struct Expression *_field2;
    struct __compressed_pair<LS::Expression *, std::__1::allocator<LS::Expression>> {
        struct Expression *_field1;
    } _field3;
};

struct vector<LS::FaceMesh, std::__1::allocator<LS::FaceMesh>> {
    struct FaceMesh *_field1;
    struct FaceMesh *_field2;
    struct __compressed_pair<LS::FaceMesh *, std::__1::allocator<LS::FaceMesh>> {
        struct FaceMesh *_field1;
    } _field3;
};

struct vector<LS::HourlyWeatherForecast, std::__1::allocator<LS::HourlyWeatherForecast>> {
    struct HourlyWeatherForecast *_field1;
    struct HourlyWeatherForecast *_field2;
    struct __compressed_pair<LS::HourlyWeatherForecast *, std::__1::allocator<LS::HourlyWeatherForecast>> {
        struct HourlyWeatherForecast *_field1;
    } _field3;
};

struct vector<LS::Landmarks, std::__1::allocator<LS::Landmarks>> {
    struct Landmarks *_field1;
    struct Landmarks *_field2;
    struct __compressed_pair<LS::Landmarks *, std::__1::allocator<LS::Landmarks>> {
        struct Landmarks *_field1;
    } _field3;
};

struct vector<LS::Rect<float>, std::__1::allocator<LS::Rect<float>>> {
    struct Rect<float> *_field1;
    struct Rect<float> *_field2;
    struct __compressed_pair<LS::Rect<float>*, std::__1::allocator<LS::Rect<float>>> {
        struct Rect<float> *_field1;
    } _field3;
};

struct vector<MPSImageDescriptor *, std::__1::allocator<MPSImageDescriptor *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<MPSImageDescriptor *__strong *, std::__1::allocator<MPSImageDescriptor *>> {
        id *__first_;
    } __end_cap_;
};

struct vector<S2CellId, std::__1::allocator<S2CellId>> {
    struct S2CellId *_field1;
    struct S2CellId *_field2;
    struct __compressed_pair<S2CellId *, std::__1::allocator<S2CellId>> {
        struct S2CellId *_field1;
    } _field3;
};

struct vector<S2Loop *, std::__1::allocator<S2Loop *>> {
    struct S2Loop **_field1;
    struct S2Loop **_field2;
    struct __compressed_pair<S2Loop **, std::__1::allocator<S2Loop *>> {
        struct S2Loop **_field1;
    } _field3;
};

struct vector<SC::Query::Order, std::__1::allocator<SC::Query::Order>> {
    struct Order *__begin_;
    struct Order *__end_;
    struct __compressed_pair<SC::Query::Order *, std::__1::allocator<SC::Query::Order>> {
        struct Order *__first_;
    } __end_cap_;
};

struct vector<SCDocObject *, std::__1::allocator<SCDocObject *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<SCDocObject *__strong *, std::__1::allocator<SCDocObject *>> {
        id *__first_;
    } __end_cap_;
};

struct vector<__weak id<EphemeralMediaDelegate>, std::__1::allocator<__weak id<EphemeralMediaDelegate>>>;

struct vector<__weak id<LSAAnalyticsComponentListener>, std::__1::allocator<__weak id<LSAAnalyticsComponentListener>>>;

struct vector<__weak id<LSABitmoji3DComponentListener>, std::__1::allocator<__weak id<LSABitmoji3DComponentListener>>>;

struct vector<__weak id<LSABitmojiEffectComponentListener>, std::__1::allocator<__weak id<LSABitmojiEffectComponentListener>>>;

struct vector<__weak id<LSAComponentListener>, std::__1::allocator<__weak id<LSAComponentListener>>>;

struct vector<__weak id<LSADebugComponentListener>, std::__1::allocator<__weak id<LSADebugComponentListener>>>;

struct vector<__weak id<LSAEffectComponentListener>, std::__1::allocator<__weak id<LSAEffectComponentListener>>>;

struct vector<__weak id<LSAGeoDataComponentListener>, std::__1::allocator<__weak id<LSAGeoDataComponentListener>>>;

struct vector<__weak id<LSARemoteAssetsComponentListener>, std::__1::allocator<__weak id<LSARemoteAssetsComponentListener>>>;

struct vector<__weak id<LSASnapRecordingComponentListener>, std::__1::allocator<__weak id<LSASnapRecordingComponentListener>>>;

struct vector<__weak id<LSASnapcodeComponentListener>, std::__1::allocator<__weak id<LSASnapcodeComponentListener>>>;

struct vector<__weak id<LSATrackingComponentListener>, std::__1::allocator<__weak id<LSATrackingComponentListener>>>;

struct vector<__weak id<LSAUserDataComponentListener>, std::__1::allocator<__weak id<LSAUserDataComponentListener>>>;

struct vector<__weak id<MediaUpdateListener>, std::__1::allocator<__weak id<MediaUpdateListener>>>;

struct vector<__weak id<RTCAudioSessionDelegate>, std::__1::allocator<__weak id<RTCAudioSessionDelegate>>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<__weak id<RTCAudioSessionDelegate>*, std::__1::allocator<__weak id<RTCAudioSessionDelegate>>> {
        id *__first_;
    } __end_cap_;
};

struct vector<__weak id<SCAPIClientListener>, std::__1::allocator<__weak id<SCAPIClientListener>>>;

struct vector<__weak id<SCApplicationDataListener>, std::__1::allocator<__weak id<SCApplicationDataListener>>>;

struct vector<__weak id<SCAudioSessionListener>, std::__1::allocator<__weak id<SCAudioSessionListener>>>;

struct vector<__weak id<SCBitmojiBuilderListener>, std::__1::allocator<__weak id<SCBitmojiBuilderListener>>>;

struct vector<__weak id<SCBitmojiDratiniManagerListener>, std::__1::allocator<__weak id<SCBitmojiDratiniManagerListener>>>;

struct vector<__weak id<SCChatCallingAccessoryListener>, std::__1::allocator<__weak id<SCChatCallingAccessoryListener>>>;

struct vector<__weak id<SCChatConversationStoreListener>, std::__1::allocator<__weak id<SCChatConversationStoreListener>>>;

struct vector<__weak id<SCChatConversationUpdaterListener>, std::__1::allocator<__weak id<SCChatConversationUpdaterListener>>>;

struct vector<__weak id<SCChatMessageReceiveListener>, std::__1::allocator<__weak id<SCChatMessageReceiveListener>>>;

struct vector<__weak id<SCChatSideMenuLifeCycleListener>, std::__1::allocator<__weak id<SCChatSideMenuLifeCycleListener>>>;

struct vector<__weak id<SCChatStickerFuzzySearchListener>, std::__1::allocator<__weak id<SCChatStickerFuzzySearchListener>>>;

struct vector<__weak id<SCChatStickerManagerListener>, std::__1::allocator<__weak id<SCChatStickerManagerListener>>>;

struct vector<__weak id<SCChatViewLifeCycleListener>, std::__1::allocator<__weak id<SCChatViewLifeCycleListener>>>;

struct vector<__weak id<SCChatViewModelListener>, std::__1::allocator<__weak id<SCChatViewModelListener>>>;

struct vector<__weak id<SCCloudFSDiskUsedListener>, std::__1::allocator<__weak id<SCCloudFSDiskUsedListener>>>;

struct vector<__weak id<SCCloudSyncStatusListener>, std::__1::allocator<__weak id<SCCloudSyncStatusListener>>>;

struct vector<__weak id<SCConnectionClassManagerListener>, std::__1::allocator<__weak id<SCConnectionClassManagerListener>>>;

struct vector<__weak id<SCCustomStickerManagerListener>, std::__1::allocator<__weak id<SCCustomStickerManagerListener>>>;

struct vector<__weak id<SCDataCoordinatorListener>, std::__1::allocator<__weak id<SCDataCoordinatorListener>>>;

struct vector<__weak id<SCDynamicSectionsModelListener>, std::__1::allocator<__weak id<SCDynamicSectionsModelListener>>>;

struct vector<__weak id<SCFeedManagerListener>, std::__1::allocator<__weak id<SCFeedManagerListener>>>;

struct vector<__weak id<SCFreeDiskSpaceMonitorListener>, std::__1::allocator<__weak id<SCFreeDiskSpaceMonitorListener>>>;

struct vector<__weak id<SCFriendEventListener>, std::__1::allocator<__weak id<SCFriendEventListener>>>;

struct vector<__weak id<SCFriendLocationsListener>, std::__1::allocator<__weak id<SCFriendLocationsListener>>>;

struct vector<__weak id<SCGalleryEGOCipherKeyProviderListener>, std::__1::allocator<__weak id<SCGalleryEGOCipherKeyProviderListener>>>;

struct vector<__weak id<SCGalleryFaceInfoIndexerStatusListener>, std::__1::allocator<__weak id<SCGalleryFaceInfoIndexerStatusListener>>>;

struct vector<__weak id<SCGalleryLagunaContentListener>, std::__1::allocator<__weak id<SCGalleryLagunaContentListener>>>;

struct vector<__weak id<SCGalleryLagunaWifiControllerEventListener>, std::__1::allocator<__weak id<SCGalleryLagunaWifiControllerEventListener>>>;

struct vector<__weak id<SCGalleryPhotoLibraryFetcherListener>, std::__1::allocator<__weak id<SCGalleryPhotoLibraryFetcherListener>>>;

struct vector<__weak id<SCGalleryPrivateGalleryManagerListener>, std::__1::allocator<__weak id<SCGalleryPrivateGalleryManagerListener>>>;

struct vector<__weak id<SCGallerySavingLoggerListener>, std::__1::allocator<__weak id<SCGallerySavingLoggerListener>>>;

struct vector<__weak id<SCGallerySearchIndexerStatusListener>, std::__1::allocator<__weak id<SCGallerySearchIndexerStatusListener>>>;

struct vector<__weak id<SCGallerySearchQueryResultsCollectorListener>, std::__1::allocator<__weak id<SCGallerySearchQueryResultsCollectorListener>>>;

struct vector<__weak id<SCGalleryUserDefaultsManagerListener>, std::__1::allocator<__weak id<SCGalleryUserDefaultsManagerListener>>>;

struct vector<__weak id<SCGroupManagerListener>, std::__1::allocator<__weak id<SCGroupManagerListener>>>;

struct vector<__weak id<SCGtqUnlockablesDataSourceListener>, std::__1::allocator<__weak id<SCGtqUnlockablesDataSourceListener>>>;

struct vector<__weak id<SCImageProcessColorFilterSessionListener>, std::__1::allocator<__weak id<SCImageProcessColorFilterSessionListener>>>;

struct vector<__weak id<SCImageProcessVideoPlaybackSessionListener>, std::__1::allocator<__weak id<SCImageProcessVideoPlaybackSessionListener>>>;

struct vector<__weak id<SCKeyServiceListener>, std::__1::allocator<__weak id<SCKeyServiceListener>>>;

struct vector<__weak id<SCLagunaAppStatusListener>, std::__1::allocator<__weak id<SCLagunaAppStatusListener>>>;

struct vector<__weak id<SCLagunaCBCentralManagerEventListener>, std::__1::allocator<__weak id<SCLagunaCBCentralManagerEventListener>>>;

struct vector<__weak id<SCLagunaDeviceEventListener>, std::__1::allocator<__weak id<SCLagunaDeviceEventListener>>>;

struct vector<__weak id<SCLagunaEventListener>, std::__1::allocator<__weak id<SCLagunaEventListener>>>;

struct vector<__weak id<SCLagunaFirmwareUpdateEventListener>, std::__1::allocator<__weak id<SCLagunaFirmwareUpdateEventListener>>>;

struct vector<__weak id<SCLagunaHomeWifiManagerEventListener>, std::__1::allocator<__weak id<SCLagunaHomeWifiManagerEventListener>>>;

struct vector<__weak id<SCLagunaWifiSsidEventListener>, std::__1::allocator<__weak id<SCLagunaWifiSsidEventListener>>>;

struct vector<__weak id<SCLensDataFetcherListenerV2>, std::__1::allocator<__weak id<SCLensDataFetcherListenerV2>>>;

struct vector<__weak id<SCLensDataProviderListener>, std::__1::allocator<__weak id<SCLensDataProviderListener>>>;

struct vector<__weak id<SCLensEffectActivatorListener>, std::__1::allocator<__weak id<SCLensEffectActivatorListener>>>;

struct vector<__weak id<SCLensFrameRateCounterListener>, std::__1::allocator<__weak id<SCLensFrameRateCounterListener>>>;

struct vector<__weak id<SCLensUIUpdateListener>, std::__1::allocator<__weak id<SCLensUIUpdateListener>>>;

struct vector<__weak id<SCLocationDataUnlockablesListener>, std::__1::allocator<__weak id<SCLocationDataUnlockablesListener>>>;

struct vector<__weak id<SCLocationServicesListener>, std::__1::allocator<__weak id<SCLocationServicesListener>>>;

struct vector<__weak id<SCManagedAudioDataSourceListener>, std::__1::allocator<__weak id<SCManagedAudioDataSourceListener>>>;

struct vector<__weak id<SCManagedCapturerListener>, std::__1::allocator<__weak id<SCManagedCapturerListener>>>;

struct vector<__weak id<SCManagedDeviceCapacityAnalyzerListener>, std::__1::allocator<__weak id<SCManagedDeviceCapacityAnalyzerListener>>>;

struct vector<__weak id<SCManagedLensProcessorStateListener>, std::__1::allocator<__weak id<SCManagedLensProcessorStateListener>>>;

struct vector<__weak id<SCManagedVideoDataSourceListener>, std::__1::allocator<__weak id<SCManagedVideoDataSourceListener>>>;

struct vector<__weak id<SCMapExploreDataStoreListener>, std::__1::allocator<__weak id<SCMapExploreDataStoreListener>>>;

struct vector<__weak id<SCMediaDrawerDataSourceListener>, std::__1::allocator<__weak id<SCMediaDrawerDataSourceListener>>>;

struct vector<__weak id<SCMediaFileRestorerStatusListener>, std::__1::allocator<__weak id<SCMediaFileRestorerStatusListener>>>;

struct vector<__weak id<SCMergedGalleryDataSourceListener>, std::__1::allocator<__weak id<SCMergedGalleryDataSourceListener>>>;

struct vector<__weak id<SCMotionManagerListener>, std::__1::allocator<__weak id<SCMotionManagerListener>>>;

struct vector<__weak id<SCNetworkActivityListener>, std::__1::allocator<__weak id<SCNetworkActivityListener>>>;

struct vector<__weak id<SCNetworkConnectivityListener>, std::__1::allocator<__weak id<SCNetworkConnectivityListener>>>;

struct vector<__weak id<SCOnDemandGeofilterDataControllerListener>, std::__1::allocator<__weak id<SCOnDemandGeofilterDataControllerListener>>>;

struct vector<__weak id<SCOnDemandGeofilterDataControllerNotificationListener>, std::__1::allocator<__weak id<SCOnDemandGeofilterDataControllerNotificationListener>>>;

struct vector<__weak id<SCOnDemandLensAllTimeHitsTemplateDataStoreProtocolListener>, std::__1::allocator<__weak id<SCOnDemandLensAllTimeHitsTemplateDataStoreProtocolListener>>>;

struct vector<__weak id<SCOnDemandLensDataStoreListener>, std::__1::allocator<__weak id<SCOnDemandLensDataStoreListener>>>;

struct vector<__weak id<SCOperaViewersCellViewModelListener>, std::__1::allocator<__weak id<SCOperaViewersCellViewModelListener>>>;

struct vector<__weak id<SCOperaWebAppAccessoryEventListener>, std::__1::allocator<__weak id<SCOperaWebAppAccessoryEventListener>>>;

struct vector<__weak id<SCPaymentsMethodDidLoadPaymentsMethodListener>, std::__1::allocator<__weak id<SCPaymentsMethodDidLoadPaymentsMethodListener>>>;

struct vector<__weak id<SCPreloadListener>, std::__1::allocator<__weak id<SCPreloadListener>>>;

struct vector<__weak id<SCRequestSchedulingStateListener>, std::__1::allocator<__weak id<SCRequestSchedulingStateListener>>>;

struct vector<__weak id<SCScreenshotSendListener>, std::__1::allocator<__weak id<SCScreenshotSendListener>>>;

struct vector<__weak id<SCSearchAttachmentsClipboardProviderListener>, std::__1::allocator<__weak id<SCSearchAttachmentsClipboardProviderListener>>>;

struct vector<__weak id<SCSearchAttachmentsDataProviderListener>, std::__1::allocator<__weak id<SCSearchAttachmentsDataProviderListener>>>;

struct vector<__weak id<SCSearchEventListener>, std::__1::allocator<__weak id<SCSearchEventListener>>>;

struct vector<__weak id<SCSearchFriendsDataProviderListener>, std::__1::allocator<__weak id<SCSearchFriendsDataProviderListener>>>;

struct vector<__weak id<SCSearchUpdateListener>, std::__1::allocator<__weak id<SCSearchUpdateListener>>>;

struct vector<__weak id<SCServerConfigListener>, std::__1::allocator<__weak id<SCServerConfigListener>>>;

struct vector<__weak id<SCSnapLoggerListener>, std::__1::allocator<__weak id<SCSnapLoggerListener>>>;

struct vector<__weak id<SCSnapVideoFilterUpdateListener>, std::__1::allocator<__weak id<SCSnapVideoFilterUpdateListener>>>;

struct vector<__weak id<SCStoriesModelUpdateListener>, std::__1::allocator<__weak id<SCStoriesModelUpdateListener>>>;

struct vector<__weak id<SCStoryLoggerListener>, std::__1::allocator<__weak id<SCStoryLoggerListener>>>;

struct vector<__weak id<SCStoryMediaStateListener>, std::__1::allocator<__weak id<SCStoryMediaStateListener>>>;

struct vector<__weak id<SCStudySettingsListener>, std::__1::allocator<__weak id<SCStudySettingsListener>>>;

struct vector<__weak id<SCTDrawerHeightListener>, std::__1::allocator<__weak id<SCTDrawerHeightListener>>>;

struct vector<__weak id<SCTPhoneCallListener>, std::__1::allocator<__weak id<SCTPhoneCallListener>>>;

struct vector<__weak id<SCTV3ActiveConversationsListener>, std::__1::allocator<__weak id<SCTV3ActiveConversationsListener>>>;

struct vector<__weak id<SCTV3CallStateListener>, std::__1::allocator<__weak id<SCTV3CallStateListener>>>;

struct vector<__weak id<SCTV3MediaViewMediaChangeListener>, std::__1::allocator<__weak id<SCTV3MediaViewMediaChangeListener>>>;

struct vector<__weak id<SCTV3PresenceChangeListener>, std::__1::allocator<__weak id<SCTV3PresenceChangeListener>>>;

struct vector<__weak id<SCTV3SessionWrapperListener>, std::__1::allocator<__weak id<SCTV3SessionWrapperListener>>>;

struct vector<__weak id<SCTV3SpeechActivityListener>, std::__1::allocator<__weak id<SCTV3SpeechActivityListener>>>;

struct vector<__weak id<SCTileDataSourceListener>, std::__1::allocator<__weak id<SCTileDataSourceListener>>>;

struct vector<__weak id<SCTilesListener>, std::__1::allocator<__weak id<SCTilesListener>>>;

struct vector<__weak id<SCUnlockablesCommonDataStoreListener>, std::__1::allocator<__weak id<SCUnlockablesCommonDataStoreListener>>>;

struct vector<__weak id<SCUpdatesResponseListener>, std::__1::allocator<__weak id<SCUpdatesResponseListener>>>;

struct vector<__weak id<SCUpdatesResponseListenerAnnouncerChangeListener>, std::__1::allocator<__weak id<SCUpdatesResponseListenerAnnouncerChangeListener>>>;

struct vector<char, std::__1::allocator<char>> {
    char *_field1;
    char *_field2;
    struct __compressed_pair<char *, std::__1::allocator<char>> {
        char *_field1;
    } _field3;
};

struct vector<const char *, std::__1::allocator<const char *>> {
    char **_field1;
    char **_field2;
    struct __compressed_pair<const char **, std::__1::allocator<const char *>> {
        char **_field1;
    } _field3;
};

struct vector<cv::Point_<int>, std::__1::allocator<cv::Point_<int>>> {
    struct Point_<int> *__begin_;
    struct Point_<int> *__end_;
    struct __compressed_pair<cv::Point_<int>*, std::__1::allocator<cv::Point_<int>>> {
        struct Point_<int> *__first_;
    } __end_cap_;
};

struct vector<flatbuffers::FlatBufferBuilder::FieldLoc, std::__1::allocator<flatbuffers::FlatBufferBuilder::FieldLoc>> {
    struct FieldLoc *__begin_;
    struct FieldLoc *__end_;
    struct __compressed_pair<flatbuffers::FlatBufferBuilder::FieldLoc *, std::__1::allocator<flatbuffers::FlatBufferBuilder::FieldLoc>> {
        struct FieldLoc *__first_;
    } __end_cap_;
};

struct vector<flatbuffers::Offset<Snapchat::Canvas>, std::__1::allocator<flatbuffers::Offset<Snapchat::Canvas>>> {
    struct Offset<Snapchat::Canvas> *_field1;
    struct Offset<Snapchat::Canvas> *_field2;
    struct __compressed_pair<flatbuffers::Offset<Snapchat::Canvas>*, std::__1::allocator<flatbuffers::Offset<Snapchat::Canvas>>> {
        struct Offset<Snapchat::Canvas> *_field1;
    } _field3;
};

struct vector<flatbuffers::Offset<Snapchat::Embeddable>, std::__1::allocator<flatbuffers::Offset<Snapchat::Embeddable>>> {
    struct Offset<Snapchat::Embeddable> *_field1;
    struct Offset<Snapchat::Embeddable> *_field2;
    struct __compressed_pair<flatbuffers::Offset<Snapchat::Embeddable>*, std::__1::allocator<flatbuffers::Offset<Snapchat::Embeddable>>> {
        struct Offset<Snapchat::Embeddable> *_field1;
    } _field3;
};

struct vector<float, std::__1::allocator<float>> {
    float *_field1;
    float *_field2;
    struct __compressed_pair<float *, std::__1::allocator<float>> {
        float *_field1;
    } _field3;
};

struct vector<glm::tvec3<float, glm::precision::packed_highp>, std::__1::allocator<glm::tvec3<float, glm::precision::packed_highp>>> {
    struct tvec3<float, glm::precision::packed_highp> *_field1;
    struct tvec3<float, glm::precision::packed_highp> *_field2;
    struct __compressed_pair<glm::tvec3<float, glm::precision::packed_highp>*, std::__1::allocator<glm::tvec3<float, glm::precision::packed_highp>>> {
        struct tvec3<float, glm::precision::packed_highp> *_field1;
    } _field3;
};

struct vector<int, std::__1::allocator<int>> {
    int *_field1;
    int *_field2;
    struct __compressed_pair<int *, std::__1::allocator<int>> {
        int *_field1;
    } _field3;
};

struct vector<mapbox::geometry::value, std::__1::allocator<mapbox::geometry::value>> {
    struct value *_field1;
    struct value *_field2;
    struct __compressed_pair<mapbox::geometry::value *, std::__1::allocator<mapbox::geometry::value>> {
        struct value *_field1;
    } _field3;
};

struct vector<mapbox::util::variant<unsigned long long, long long, double, std::__1::basic_string<char>>, std::__1::allocator<mapbox::util::variant<unsigned long long, long long, double, std::__1::basic_string<char>>>> {
    variant_fb0212ef *_field1;
    variant_fb0212ef *_field2;
    struct __compressed_pair<mapbox::util::variant<unsigned long long, long long, double, std::__1::basic_string<char>>*, std::__1::allocator<mapbox::util::variant<unsigned long long, long long, double, std::__1::basic_string<char>>>> {
        variant_fb0212ef *_field1;
    } _field3;
};

struct vector<mbgl::FeatureType, std::__1::allocator<mbgl::FeatureType>> {
    unsigned char *_field1;
    unsigned char *_field2;
    struct __compressed_pair<mbgl::FeatureType *, std::__1::allocator<mbgl::FeatureType>> {
        unsigned char *_field1;
    } _field3;
};

struct vector<mbgl::style::Filter, std::__1::allocator<mbgl::style::Filter>> {
    struct Filter *_field1;
    struct Filter *_field2;
    struct __compressed_pair<mbgl::style::Filter *, std::__1::allocator<mbgl::style::Filter>> {
        struct Filter *_field1;
    } _field3;
};

struct vector<net::HashValue, std::__1::allocator<net::HashValue>> {
    struct HashValue *_field1;
    struct HashValue *_field2;
    struct __compressed_pair<net::HashValue *, std::__1::allocator<net::HashValue>> {
        struct HashValue *_field1;
    } _field3;
};

struct vector<net::HttpRequestHeaders::HeaderKeyValuePair, std::__1::allocator<net::HttpRequestHeaders::HeaderKeyValuePair>> {
    struct HeaderKeyValuePair *_field1;
    struct HeaderKeyValuePair *_field2;
    struct __compressed_pair<net::HttpRequestHeaders::HeaderKeyValuePair *, std::__1::allocator<net::HttpRequestHeaders::HeaderKeyValuePair>> {
        struct HeaderKeyValuePair *_field1;
    } _field3;
};

struct vector<net::SignedCertificateTimestampAndStatus, std::__1::allocator<net::SignedCertificateTimestampAndStatus>> {
    struct SignedCertificateTimestampAndStatus *_field1;
    struct SignedCertificateTimestampAndStatus *_field2;
    struct __compressed_pair<net::SignedCertificateTimestampAndStatus *, std::__1::allocator<net::SignedCertificateTimestampAndStatus>> {
        struct SignedCertificateTimestampAndStatus *_field1;
    } _field3;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_a490aa4c *_field1;
    basic_string_a490aa4c *_field2;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_a490aa4c *_field1;
    } _field3;
};

struct vector<std::__1::pair<LS::Rect<float>, LS::TouchType>, std::__1::allocator<std::__1::pair<LS::Rect<float>, LS::TouchType>>> {
    struct pair<LS::Rect<float>, LS::TouchType> *__begin_;
    struct pair<LS::Rect<float>, LS::TouchType> *__end_;
    struct __compressed_pair<std::__1::pair<LS::Rect<float>, LS::TouchType>*, std::__1::allocator<std::__1::pair<LS::Rect<float>, LS::TouchType>>> {
        struct pair<LS::Rect<float>, LS::TouchType> *__first_;
    } __end_cap_;
};

struct vector<std::__1::shared_ptr<LS::ImageObjC>, std::__1::allocator<std::__1::shared_ptr<LS::ImageObjC>>> {
    struct shared_ptr<LS::ImageObjC> *_field1;
    struct shared_ptr<LS::ImageObjC> *_field2;
    struct __compressed_pair<std::__1::shared_ptr<LS::ImageObjC>*, std::__1::allocator<std::__1::shared_ptr<LS::ImageObjC>>> {
        struct shared_ptr<LS::ImageObjC> *_field1;
    } _field3;
};

struct vector<std::__1::unique_ptr<LS::ImageObjC, std::__1::default_delete<LS::ImageObjC>>, std::__1::allocator<std::__1::unique_ptr<LS::ImageObjC, std::__1::default_delete<LS::ImageObjC>>>> {
    unique_ptr_430f0bd3 *_field1;
    unique_ptr_430f0bd3 *_field2;
    struct __compressed_pair<std::__1::unique_ptr<LS::ImageObjC, std::__1::default_delete<LS::ImageObjC>>*, std::__1::allocator<std::__1::unique_ptr<LS::ImageObjC, std::__1::default_delete<LS::ImageObjC>>>> {
        unique_ptr_430f0bd3 *_field1;
    } _field3;
};

struct vector<std::__1::unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>>, std::__1::allocator<std::__1::unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>>>> {
    struct unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>> *_field1;
    struct unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>> *_field2;
    struct __compressed_pair<std::__1::unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>>*, std::__1::allocator<std::__1::unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>>>> {
        struct unique_ptr<net::UploadElementReader, std::__1::default_delete<net::UploadElementReader>> *_field1;
    } _field3;
};

struct vector<std::__1::vector<float, std::__1::allocator<float>>, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float>>>> {
    struct vector<float, std::__1::allocator<float>> *_field1;
    struct vector<float, std::__1::allocator<float>> *_field2;
    struct __compressed_pair<std::__1::vector<float, std::__1::allocator<float>>*, std::__1::allocator<std::__1::vector<float, std::__1::allocator<float>>>> {
        struct vector<float, std::__1::allocator<float>> *_field1;
    } _field3;
};

struct vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>> {
    struct vector<int, std::__1::allocator<int>> *_field1;
    struct vector<int, std::__1::allocator<int>> *_field2;
    struct __compressed_pair<std::__1::vector<int, std::__1::allocator<int>>*, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>> {
        struct vector<int, std::__1::allocator<int>> *_field1;
    } _field3;
};

struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *_field1;
    char *_field2;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *_field1;
    } _field3;
};

struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *__begin_;
    unsigned int *__end_;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *__first_;
    } __end_cap_;
};

struct vector_downward {
    struct Allocator *allocator_;
    _Bool own_allocator_;
    unsigned long long initial_size_;
    unsigned long long reserved_;
    char *buf_;
    char *cur_;
};

struct vtable_type;

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned long long total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned long long total_out;
    char *msg;
    struct internal_state *state;
    CDUnknownFunctionPointerType zalloc;
    CDUnknownFunctionPointerType zfree;
    void *opaque;
    int data_type;
    unsigned long long adler;
    unsigned long long reserved;
};

#pragma mark Typedef'd Structures

typedef struct {
    _Bool _field1;
    unsigned char _field2;
    _Bool _field3;
    unsigned long long _field4;
} CDStruct_6a6a01a4;

typedef struct {
    unsigned int major;
    unsigned int minor;
    unsigned int bugfix;
} CDStruct_e24ffa00;

typedef struct {
    unsigned long long _field1;
    id *_field2;
    unsigned long long *_field3;
    unsigned long long _field4[5];
} CDStruct_70511ce9;

typedef struct {
    unsigned long long _field1;
} CDStruct_69d7cc99;

typedef struct {
    float lastBlobIntensity[187];
    float *blobs[187];
    float *intensity[187];
    int shapeType;
} CDStruct_54ed90eb;

typedef struct {
    unsigned short _field1[7];
} CDStruct_177a585b;

typedef struct {
    unsigned short _field1[8];
} CDStruct_135e654f;

typedef struct {
    char *_field1;
    char *_field2;
    unsigned int _field3;
    unsigned int _field4;
} CDStruct_4355734a;

typedef struct {
    char *_field1;
    void *_field2;
    _Bool _field3;
    void *_field4;
    char *_field5;
    char *_field6;
    char *_field7;
    char *_field8;
    char *_field9;
    unsigned int _field10;
    _Bool _field11;
    _Bool _field12;
    unsigned int _field13;
    unsigned int _field14;
    unsigned int _field15;
    unsigned int _field16;
} CDStruct_1e2a2a70;

typedef struct {
    unsigned int didChangeInsertionPointContext:1;
    unsigned int didChangeValidCashTagRanges:1;
    unsigned int didChangeHighlightedCashTagRanges:1;
    unsigned int didChangeSwipeToSendMarkerEntered:1;
} CDStruct_193cfb47;

typedef struct {
    unsigned int reserved:3;
    unsigned int x:20;
    unsigned int y:20;
    unsigned int z:20;
    unsigned int g:1;
} CDStruct_bac8f6e9;

typedef struct {
    double _field1;
    _Bool _field2;
    long long _field3;
    long long _field4;
    unsigned long long _field5;
    unsigned long long _field6;
} CDStruct_cb8b52ca;

typedef struct {
    double currentValue;
    double targetValue;
    double diffValue;
    double fadingDuration;
    double fadingStartTime;
} CDStruct_b28b1787;

typedef struct {
    double _min;
    double _max;
    double _total;
    int _samples;
} CDStruct_2d9a0da2;

typedef struct {
    float _field1;
    double _field2;
} CDStruct_d6ea8fa7;

typedef struct {
    float _field1;
    float _field2;
    _Bool _field3;
} CDStruct_6fe4de6c;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
    float _field4;
} CDStruct_818bb265;

typedef struct {
    float _field1;
    float _field2;
    float _field3;
} CDStruct_869f9c67;

typedef struct {
    long long _field1;
    unsigned long long _field2;
} CDStruct_1dee9796;

typedef struct {
    long long version;
    void *info;
    CDUnknownFunctionPointerType retain;
    CDUnknownFunctionPointerType release;
    CDUnknownFunctionPointerType copyDescription;
} CDStruct_4210025a;

typedef struct {
    long long value;
    int timescale;
    unsigned int flags;
    long long epoch;
} CDStruct_1b6d18a9;

typedef struct {
    long long _field1;
    long long _field2;
} CDStruct_912cb5d2;

typedef struct CDStruct_183601bc;

typedef struct {
    unsigned long long _field1;
    long long _field2;
    CDStruct_1b6d18a9 _field3;
    double _field4;
    _Bool _field5;
    _Bool _field6;
} CDStruct_d970a516;

typedef struct {
    char _field1[33];
    _Bool _field2;
    CDStruct_e24ffa00 _field3;
    CDStruct_e24ffa00 _field4;
    struct {
        void *_field1;
        unsigned long long _field2;
        void *_field3;
        void *_field4;
        void *_field5;
    } _field5;
    struct CLSMachOSlice _field6;
    long long _field7;
} CDStruct_fad71a87;

typedef struct {
    struct CGPoint pts[5];
} CDStruct_4ff31f5f;

typedef struct {
    CDStruct_1b6d18a9 startTime;
    CDStruct_1b6d18a9 endTime;
    CDStruct_1b6d18a9 duration;
    unsigned int sessionId;
} CDStruct_4565c1ff;

typedef struct {
    CDStruct_1b6d18a9 start;
    CDStruct_1b6d18a9 duration;
} CDStruct_e83c9415;

typedef struct {
    struct CGPoint _field1;
    struct CGPoint _field2;
    struct CGPoint _field3;
    struct CGPoint _field4;
} CDStruct_f9662865;

typedef struct {
    struct CLLocationCoordinate2D center;
    struct {
        double latitudeDelta;
        double longitudeDelta;
    } span;
} CDStruct_b7cb895d;

typedef struct {
    struct CLLocationCoordinate2D _field1;
    struct CLLocationCoordinate2D _field2;
} CDStruct_f2cdc660;

typedef struct {
    Size__dedc3bbb _field1;
    struct Point_<int> _field2;
    Size__dedc3bbb _field3;
} CDStruct_c979069d;

typedef struct {
    id _field1;
    struct CGRect _field2;
} CDStruct_37f6246c;

typedef struct {
    unsigned short _field1;
    union {
        CDStruct_177a585b _field1;
        struct {
            unsigned short _field1[2];
            short _field2;
            float _field3[2];
        } _field2;
        CDStruct_177a585b _field3;
    } _field2;
} CDStruct_5074f54c;

typedef struct {
    CDStruct_e83c9415 _field1;
    CDStruct_e83c9415 _field2;
} CDStruct_3800d160;

// Template types
typedef struct Array<float, 2, -1, 0, 2, -1> {
    struct DenseStorage<float, -1, 2, -1, 0> _field1;
} Array_60b36178;

typedef struct Callback<void (bool, const std::__1::basic_string<base::char16, base::string16_char_traits>&, const std::__1::basic_string<base::char16, base::string16_char_traits>&), base::internal::CopyMode::Copyable, base::internal::RepeatMode::Repeating> {
    struct scoped_refptr<base::internal::BindStateBase> _field1;
} Callback_118ddb70;

typedef struct Image<mbgl::ImageAlphaMode::Premultiplied> {
    struct Size _field1;
    struct unique_ptr<unsigned char [], std::__1::default_delete<unsigned char []>> _field2;
} Image_4008407b;

typedef struct PropertyValue<mbgl::Color> {
    struct variant<mbgl::style::Undefined, mbgl::Color, mbgl::style::CameraFunction<mbgl::Color>> _field1;
} PropertyValue_57078898;

typedef struct Size_<int> {
    int _field1;
    int _field2;
} Size__dedc3bbb;

typedef struct SpringSolver<POP::Vector4<double>> {
    double _field1;
    double _field2;
    double _field3;
    double _field4;
    double _field5;
    double _field6;
    double _field7;
    struct SSState<POP::Vector4<double>> _field8;
    struct Vector4<double> _field9;
    _Bool _field10;
} SpringSolver_fe820e75;

typedef struct array<float, 2> {
    float _field1[2];
} array_9f98b67a;

typedef struct array<float, 3> {
    float _field1[3];
} array_859211e7;

typedef struct array<float, 4> {
    float _field1[4];
} array_4d684532;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *__data_;
                    unsigned long long __size_;
                    unsigned long long __cap_;
                } __l;
                struct __short {
                    char __data_[23];
                    struct {
                        unsigned char __size_;
                    } ;
                } __s;
                struct __raw __r;
            } ;
        } __first_;
    } __r_;
} basic_string_a490aa4c;

typedef struct function<mapbox::geometry::point<double>(const mbgl::LatLng &)> {
    struct type __buf_;
    struct __base<mapbox::geometry::point<double>(const mbgl::LatLng &)> *__f_;
} function_4a3d9bf5;

typedef struct function<void (const adl::netio::HttpResult &)> {
    struct type __buf_;
    struct __base<void (const adl::netio::HttpResult &)> *__f_;
} function_1dcf92b8;

typedef struct geometry<double> {
    unsigned long long _field1;
    struct type _field2;
} geometry_0b6042fd;

typedef struct line_string<double, std::vector> {
    struct point<double> *_field1;
    struct point<double> *_field2;
    struct __compressed_pair<mapbox::geometry::point<double>*, std::__1::allocator<mapbox::geometry::point<double>>> _field3;
} line_string_a102dafb;

typedef struct linear_ring<double, std::vector> {
    struct point<double> *_field1;
    struct point<double> *_field2;
    struct __compressed_pair<mapbox::geometry::point<double>*, std::__1::allocator<mapbox::geometry::point<double>>> _field3;
} linear_ring_cd7ceeaf;

typedef struct list<std::__1::shared_ptr<POPAnimatorItem>, std::__1::allocator<std::__1::shared_ptr<POPAnimatorItem>>> {
    struct __list_node_base<std::__1::shared_ptr<POPAnimatorItem>, void *> __end_;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__list_node<std::__1::shared_ptr<POPAnimatorItem>, void *>>> {
        unsigned long long __first_;
    } __size_alloc_;
} list_670f5810;

typedef struct multi_polygon<double, std::vector> {
    polygon_f143bbb5 *_field1;
    polygon_f143bbb5 *_field2;
    struct __compressed_pair<mapbox::geometry::polygon<double, std::vector>*, std::__1::allocator<mapbox::geometry::polygon<double, std::vector>>> {
        polygon_f143bbb5 *_field1;
    } _field3;
} multi_polygon_951adcca;

typedef struct polygon<double, std::vector> {
    linear_ring_cd7ceeaf *_field1;
    linear_ring_cd7ceeaf *_field2;
    struct __compressed_pair<mapbox::geometry::linear_ring<double, std::vector>*, std::__1::allocator<mapbox::geometry::linear_ring<double, std::vector>>> {
        linear_ring_cd7ceeaf *_field1;
    } _field3;
} polygon_f143bbb5;

typedef struct scoped_refptr<net::HttpProtocolHandlerCore> {
    struct HttpProtocolHandlerCore *ptr_;
} scoped_refptr_81e0d7bb;

typedef struct shared_ptr<LS::ComplexEffect> {
    struct ComplexEffect *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_c23a9965;

typedef struct shared_ptr<LS::CoreManager> {
    struct CoreManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_6e078de4;

typedef struct shared_ptr<LS::TextureBase> {
    struct TextureBase *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_c46ccacf;

typedef struct shared_ptr<POPAnimatorItem> {
    struct POPAnimatorItem *_field1;
    struct __shared_weak_count *_field2;
} shared_ptr_1553c9f8;

typedef struct shared_ptr<SC::Query::BaseExpr<bool>> {
    struct BaseExpr<bool> *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_163b3c25;

typedef struct shared_ptr<addlive::DecoderCallback> {
    struct DecoderCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_5d6e4d93;

typedef struct shared_ptr<addlive::DirectRendererCallback> {
    struct DirectRendererCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_fe59ffec;

typedef struct shared_ptr<addlive::EncoderCallback> {
    struct EncoderCallback *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_a3542306;

typedef struct shared_ptr<addlive::NumberResponder> {
    struct NumberResponder *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_b2984fc8;

typedef struct shared_ptr<addlive::Service> {
    struct Service *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_756dba43;

typedef struct shared_ptr<addlive::ServiceListener> {
    struct ServiceListener *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_5fdff3df;

typedef struct shared_ptr<addlive::StringDictResponder> {
    struct StringDictResponder *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_13f5941a;

typedef struct shared_ptr<addlive::StringListResponder> {
    struct StringListResponder *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_382e76bc;

typedef struct shared_ptr<addlive::StringResponder> {
    struct StringResponder *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_c924c628;

typedef struct shared_ptr<addlive::VoidResponder> {
    struct VoidResponder *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_c0f0acb2;

typedef struct shared_ptr<talkcorev3::AsyncTask> {
    struct AsyncTask *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_8537d7cf;

typedef struct shared_ptr<talkcorev3::CallingManager> {
    struct CallingManager *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_890eee60;

typedef struct shared_ptr<talkcorev3::CompletionHandler> {
    struct CompletionHandler *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_acde51be;

typedef struct shared_ptr<talkcorev3::Logger> {
    struct Logger *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_c04af217;

typedef struct shared_ptr<talkcorev3::MetricsMetadataContainer> {
    struct MetricsMetadataContainer *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_e6ea19ac;

typedef struct shared_ptr<talkcorev3::MetricsReporter> {
    struct MetricsReporter *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_ecb86bd5;

typedef struct shared_ptr<talkcorev3::Session> {
    struct Session *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_785f52f1;

typedef struct shared_ptr<talkcorev3::SessionDelegate> {
    struct SessionDelegate *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_ba403e89;

typedef struct shared_ptr<talkcorev3::TalkCore> {
    struct TalkCore *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_6e98dd72;

typedef struct shared_ptr<talkcorev3::TalkCoreDelegate> {
    struct TalkCoreDelegate *__ptr_;
    struct __shared_weak_count *__cntrl_;
} shared_ptr_49b51578;

typedef struct tuple<std::__1::unique_ptr<LS::ImageObjC, std::__1::default_delete<LS::ImageObjC>>, std::__1::shared_ptr<LS::TextureBase>, std::__1::shared_ptr<LS::TextureBase>, std::__1::shared_ptr<LS::TextureBase>, CGSize> {
    struct __tuple_impl<std::__1::__tuple_indices<0, 1, 2, 3, 4>, std::__1::unique_ptr<LS::ImageObjC, std::__1::default_delete<LS::ImageObjC>>, std::__1::shared_ptr<LS::TextureBase>, std::__1::shared_ptr<LS::TextureBase>, std::__1::shared_ptr<LS::TextureBase>, CGSize> {
        unique_ptr_430f0bd3 _field1;
        shared_ptr_c46ccacf _field2;
        shared_ptr_c46ccacf _field3;
        shared_ptr_c46ccacf _field4;
        struct CGSize _field5;
    } _field1;
} tuple_48339975;

typedef struct unique_ptr<LS::ImageObjC, std::__1::default_delete<LS::ImageObjC>> {
    struct __compressed_pair<LS::ImageObjC *, std::__1::default_delete<LS::ImageObjC>> {
        struct ImageObjC *_field1;
    } _field1;
} unique_ptr_430f0bd3;

typedef struct unique_ptr<mbgl::style::Image, std::__1::default_delete<mbgl::style::Image>> {
    struct __compressed_pair<mbgl::style::Image *, std::__1::default_delete<mbgl::style::Image>> {
        struct Image *_field1;
    } _field1;
} unique_ptr_490301f4;

typedef struct unique_ptr<mbgl::style::Layer, std::__1::default_delete<mbgl::style::Layer>> {
    struct __compressed_pair<mbgl::style::Layer *, std::__1::default_delete<mbgl::style::Layer>> {
        struct Layer *__first_;
    } __ptr_;
} unique_ptr_57121d91;

typedef struct unique_ptr<mbgl::style::Source, std::__1::default_delete<mbgl::style::Source>> {
    struct __compressed_pair<mbgl::style::Source *, std::__1::default_delete<mbgl::style::Source>> {
        struct Source *__first_;
    } __ptr_;
} unique_ptr_75027eea;

typedef struct unordered_map<long, IGListMoveIndex *, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<std::__1::pair<const long, IGListMoveIndex *>>> {
    struct __hash_table<std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::hash<long>, true>, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::equal_to<long>, true>, std::__1::allocator<std::__1::__hash_value_type<long, IGListMoveIndex *>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<long, IGListMoveIndex *>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::hash<long>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<long, std::__1::__hash_value_type<long, IGListMoveIndex *>, std::__1::equal_to<long>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_6fea4092;

typedef struct unordered_map<std::__1::basic_string<char>, LS::Any, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, LS::Any>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, LS::Any>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, LS::Any>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, LS::Any>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, LS::Any>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, LS::Any>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, LS::Any>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, LS::Any>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, LS::Any>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, LS::Any>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, LS::Any>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, LS::Any>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_6f2773c7;

typedef struct unordered_map<std::__1::basic_string<char>, mapbox::geometry::value, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, mapbox::geometry::value>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, void *>*>*>>> _field1;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long _field1;
        } _field3;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, mapbox::geometry::value>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float _field1;
        } _field4;
    } _field1;
} unordered_map_4ddb3e61;

typedef struct unordered_set<long, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<long>> {
    struct __hash_table<long, std::__1::hash<long>, std::__1::equal_to<long>, std::__1::allocator<long>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<long, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<long, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<long, void *>*>, std::__1::allocator<std::__1::__hash_node<long, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<long, void *>*> __first_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::hash<long>> {
            unsigned long long __first_;
        } __p2_;
        struct __compressed_pair<float, std::__1::equal_to<long>> {
            float __first_;
        } __p3_;
    } __table_;
} unordered_set_3e64b720;

typedef struct variant<mapbox::geometry::geometry<double>, mapbox::geometry::feature<double>, mapbox::geometry::feature_collection<double, std::vector>> {
    unsigned long long _field1;
    struct type _field2;
} variant_d69826d0;

typedef struct variant<mbgl::SymbolAnnotation, mbgl::LineAnnotation, mbgl::FillAnnotation> {
    unsigned long long _field1;
    struct type _field2;
} variant_9da3b8f0;

typedef struct variant<unsigned long long, long long, double, std::__1::basic_string<char>> {
    unsigned long long _field1;
    struct type _field2;
} variant_fb0212ef;

typedef struct vector<CLLocationCoordinate2D, std::__1::allocator<CLLocationCoordinate2D>> {
    struct CLLocationCoordinate2D *__begin_;
    struct CLLocationCoordinate2D *__end_;
    struct __compressed_pair<CLLocationCoordinate2D *, std::__1::allocator<CLLocationCoordinate2D>> {
        struct CLLocationCoordinate2D *__first_;
    } __end_cap_;
} vector_1961437c;

typedef struct vector<ConvolutionLayer *, std::__1::allocator<ConvolutionLayer *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<ConvolutionLayer *__strong *, std::__1::allocator<ConvolutionLayer *>> {
        id *__first_;
    } __end_cap_;
} vector_1dfa2d06;

typedef struct vector<DeconvolutionLayer *, std::__1::allocator<DeconvolutionLayer *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<DeconvolutionLayer *__strong *, std::__1::allocator<DeconvolutionLayer *>> {
        id *__first_;
    } __end_cap_;
} vector_5e743034;

typedef struct vector<DepthwiseConvolutionLayer *, std::__1::allocator<DepthwiseConvolutionLayer *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<DepthwiseConvolutionLayer *__strong *, std::__1::allocator<DepthwiseConvolutionLayer *>> {
        id *__first_;
    } __end_cap_;
} vector_cae00c10;

typedef struct vector<InstanceNormLayer *, std::__1::allocator<InstanceNormLayer *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<InstanceNormLayer *__strong *, std::__1::allocator<InstanceNormLayer *>> {
        id *__first_;
    } __end_cap_;
} vector_53930a99;

typedef struct vector<MPSImageDescriptor *, std::__1::allocator<MPSImageDescriptor *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<MPSImageDescriptor *__strong *, std::__1::allocator<MPSImageDescriptor *>> {
        id *__first_;
    } __end_cap_;
} vector_02b805d6;

typedef struct vector<SCDocObject *, std::__1::allocator<SCDocObject *>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<SCDocObject *__strong *, std::__1::allocator<SCDocObject *>> {
        id *__first_;
    } __end_cap_;
} vector_665cc29a;

typedef struct vector<__weak id<RTCAudioSessionDelegate>, std::__1::allocator<__weak id<RTCAudioSessionDelegate>>> {
    id *__begin_;
    id *__end_;
    struct __compressed_pair<__weak id<RTCAudioSessionDelegate>*, std::__1::allocator<__weak id<RTCAudioSessionDelegate>>> {
        id *__first_;
    } __end_cap_;
} vector_ac2cc512;

typedef struct vector<const char *, std::__1::allocator<const char *>> {
    char **_field1;
    char **_field2;
    struct __compressed_pair<const char **, std::__1::allocator<const char *>> {
        char **_field1;
    } _field3;
} vector_f96bb9f1;

typedef struct vector<cv::Point_<int>, std::__1::allocator<cv::Point_<int>>> {
    struct Point_<int> *__begin_;
    struct Point_<int> *__end_;
    struct __compressed_pair<cv::Point_<int>*, std::__1::allocator<cv::Point_<int>>> {
        struct Point_<int> *__first_;
    } __end_cap_;
} vector_777fd472;

typedef struct vector<flatbuffers::Offset<Snapchat::Canvas>, std::__1::allocator<flatbuffers::Offset<Snapchat::Canvas>>> {
    struct Offset<Snapchat::Canvas> *_field1;
    struct Offset<Snapchat::Canvas> *_field2;
    struct __compressed_pair<flatbuffers::Offset<Snapchat::Canvas>*, std::__1::allocator<flatbuffers::Offset<Snapchat::Canvas>>> {
        struct Offset<Snapchat::Canvas> *_field1;
    } _field3;
} vector_3a8de40f;

typedef struct vector<flatbuffers::Offset<Snapchat::Embeddable>, std::__1::allocator<flatbuffers::Offset<Snapchat::Embeddable>>> {
    struct Offset<Snapchat::Embeddable> *_field1;
    struct Offset<Snapchat::Embeddable> *_field2;
    struct __compressed_pair<flatbuffers::Offset<Snapchat::Embeddable>*, std::__1::allocator<flatbuffers::Offset<Snapchat::Embeddable>>> {
        struct Offset<Snapchat::Embeddable> *_field1;
    } _field3;
} vector_1393feb2;

typedef struct vector<mapbox::geometry::value, std::__1::allocator<mapbox::geometry::value>> {
    struct value *_field1;
    struct value *_field2;
    struct __compressed_pair<mapbox::geometry::value *, std::__1::allocator<mapbox::geometry::value>> {
        struct value *_field1;
    } _field3;
} vector_d365565e;

typedef struct vector<mapbox::util::variant<unsigned long long, long long, double, std::__1::basic_string<char>>, std::__1::allocator<mapbox::util::variant<unsigned long long, long long, double, std::__1::basic_string<char>>>> {
    variant_fb0212ef *_field1;
    variant_fb0212ef *_field2;
    struct __compressed_pair<mapbox::util::variant<unsigned long long, long long, double, std::__1::basic_string<char>>*, std::__1::allocator<mapbox::util::variant<unsigned long long, long long, double, std::__1::basic_string<char>>>> {
        variant_fb0212ef *_field1;
    } _field3;
} vector_00c9b367;

typedef struct vector<mbgl::FeatureType, std::__1::allocator<mbgl::FeatureType>> {
    unsigned char *_field1;
    unsigned char *_field2;
    struct __compressed_pair<mbgl::FeatureType *, std::__1::allocator<mbgl::FeatureType>> {
        unsigned char *_field1;
    } _field3;
} vector_ef172a5e;

typedef struct vector<mbgl::style::Filter, std::__1::allocator<mbgl::style::Filter>> {
    struct Filter *_field1;
    struct Filter *_field2;
    struct __compressed_pair<mbgl::style::Filter *, std::__1::allocator<mbgl::style::Filter>> {
        struct Filter *_field1;
    } _field3;
} vector_aee46008;

typedef struct vector<std::__1::vector<int, std::__1::allocator<int>>, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>> {
    struct vector<int, std::__1::allocator<int>> *_field1;
    struct vector<int, std::__1::allocator<int>> *_field2;
    struct __compressed_pair<std::__1::vector<int, std::__1::allocator<int>>*, std::__1::allocator<std::__1::vector<int, std::__1::allocator<int>>>> {
        struct vector<int, std::__1::allocator<int>> *_field1;
    } _field3;
} vector_9c221dbc;

typedef struct vector<unsigned int, std::__1::allocator<unsigned int>> {
    unsigned int *__begin_;
    unsigned int *__end_;
    struct __compressed_pair<unsigned int *, std::__1::allocator<unsigned int>> {
        unsigned int *__first_;
    } __end_cap_;
} vector_a9c0768e;

#pragma mark Named Unions

union storage_union {
    void *_field1;
    struct type _field2;
};

#pragma mark Typedef'd Unions

typedef union {
    _Bool valueBool;
    int valueInt32;
    long long valueInt64;
    unsigned int valueUInt32;
    unsigned long long valueUInt64;
    float valueFloat;
    double valueDouble;
    NSData *valueData;
    NSString *valueString;
    GPBMessage *valueMessage;
    int valueEnum;
} CDUnion_88782d86;


//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "NSCoding-Protocol.h"
#import "SCLocationControllerDelegate-Protocol.h"
#import "SCLocationDataControllerDelegate-Protocol.h"
#import "SCLocationDataFetcherDelegate-Protocol.h"
#import "SCTimeProfilable-Protocol.h"

@class CLLocation, NSDate, NSMutableDictionary, NSMutableSet, NSString, SCLocationAdIdentityController, SCLocationController, SCLocationDataFetcher, SCLocationMobStoriesController, SCLocationServicesListenerAnnouncer, SCLocationSharedStoriesController, SCLocationUnlockablesController, SCLocationWeatherController, SCUnlockablesPreCacheController, SCUserSession;
@protocol SCLocationDataController;

@interface SCLocationServicesDataStore : NSObject <NSCoding, SCLocationDataFetcherDelegate, SCLocationControllerDelegate, SCLocationDataControllerDelegate, SCTimeProfilable>
{
    CLLocation *_lastFetchLocation;
    _Bool _isDebouncing;
    SCUserSession *_userSession;
    _Bool _fetchingLocationData;
    CLLocation *_location;
    SCLocationDataFetcher *_locationDataFetcher;
    long long _state;
    SCLocationController *_locationController;
    id <SCLocationDataController> _venueFilterController;
    SCLocationAdIdentityController *_adIdentityController;
    SCUnlockablesPreCacheController *_unlockablesPreCacheController;
    SCLocationMobStoriesController *_mobStoriesController;
    SCLocationSharedStoriesController *_sharedStoriesController;
    SCLocationWeatherController *_weatherController;
    SCLocationUnlockablesController *_unlockablesController;
    SCLocationServicesListenerAnnouncer *_locationServicesAnnouncer;
    NSMutableDictionary *_datastore;
    CLLocation *_dataLocation;
    NSDate *_lastIpRequestTime;
    NSDate *_updateUntil;
    NSMutableSet *_updateLocationCallers;
}

+ (int)context;
+ (_Bool)_legacyShouldUseNewLocation:(id)arg1 comparedToOldLocation:(id)arg2;
+ (_Bool)_shouldUseNewLocation:(id)arg1 oldLocation:(id)arg2;
+ (id)stringWithLocationDataState:(long long)arg1;
+ (void)removeSavedState;
+ (id)path;
+ (id)sharedInstance;
@property(retain) NSMutableSet *updateLocationCallers; // @synthesize updateLocationCallers=_updateLocationCallers;
@property(retain, nonatomic) NSDate *updateUntil; // @synthesize updateUntil=_updateUntil;
@property(retain, nonatomic) NSDate *lastIpRequestTime; // @synthesize lastIpRequestTime=_lastIpRequestTime;
@property(retain, nonatomic) CLLocation *dataLocation; // @synthesize dataLocation=_dataLocation;
@property(nonatomic) _Bool fetchingLocationData; // @synthesize fetchingLocationData=_fetchingLocationData;
@property(retain, nonatomic) NSMutableDictionary *datastore; // @synthesize datastore=_datastore;
@property(retain, nonatomic) SCLocationServicesListenerAnnouncer *locationServicesAnnouncer; // @synthesize locationServicesAnnouncer=_locationServicesAnnouncer;
@property(retain, nonatomic) SCLocationUnlockablesController *unlockablesController; // @synthesize unlockablesController=_unlockablesController;
@property(retain, nonatomic) SCLocationWeatherController *weatherController; // @synthesize weatherController=_weatherController;
@property(retain, nonatomic) SCLocationSharedStoriesController *sharedStoriesController; // @synthesize sharedStoriesController=_sharedStoriesController;
@property(retain, nonatomic) SCLocationMobStoriesController *mobStoriesController; // @synthesize mobStoriesController=_mobStoriesController;
@property(retain, nonatomic) SCUnlockablesPreCacheController *unlockablesPreCacheController; // @synthesize unlockablesPreCacheController=_unlockablesPreCacheController;
@property(retain, nonatomic) SCLocationAdIdentityController *adIdentityController; // @synthesize adIdentityController=_adIdentityController;
@property(retain, nonatomic) id <SCLocationDataController> venueFilterController; // @synthesize venueFilterController=_venueFilterController;
@property(retain, nonatomic) SCLocationController *locationController; // @synthesize locationController=_locationController;
@property(readonly, nonatomic) long long state; // @synthesize state=_state;
@property(retain, nonatomic) SCLocationDataFetcher *locationDataFetcher; // @synthesize locationDataFetcher=_locationDataFetcher;
@property(retain, nonatomic) CLLocation *location; // @synthesize location=_location;
- (void).cxx_destruct;
- (void)locationController:(id)arg1 didUpdateAltitude:(double)arg2;
- (void)locationController:(id)arg1 didUpdateSpeed:(id)arg2;
- (void)locationController:(id)arg1 didFailWithError:(id)arg2 context:(long long)arg3;
- (void)fetchDataForLocation:(id)arg1 context:(long long)arg2 trigger:(long long)arg3;
- (void)debounceFetchDataWithLatestLocation:(id)arg1 context:(long long)arg2 trigger:(long long)arg3;
- (void)locationController:(id)arg1 didUpdateLocation:(id)arg2 context:(long long)arg3;
- (id)userSession;
- (void)locationDataController:(id)arg1 didUpdateData:(id)arg2 forKey:(id)arg3;
- (void)locationDataFetcherFailedToFetchLocationDataWithError:(id)arg1;
- (_Bool)shouldProcessResponseWithNewLocation:(id)arg1 oldLocation:(id)arg2;
- (void)locationDataFetcherFetchedLocationData:(id)arg1 forLocation:(id)arg2;
- (void)_setObject:(id)arg1 forKey:(id)arg2;
- (void)_setState:(long long)arg1;
- (void)processWhiteListedSharedStoryResponse:(id)arg1;
- (id)sharedStorySponsorForStoryGroupId:(id)arg1;
- (id)objectForKey:(id)arg1;
- (void)_fetchIpBasedLocationDataWithContext:(long long)arg1;
- (void)_prepareLocationDataUpdate;
- (void)_startUpdatingLocationDataWithLocationServices:(_Bool)arg1 context:(long long)arg2 userSession:(id)arg3 caller:(id)arg4;
- (double)currentLocationDataAccuracy;
- (void)_didStopLocationUpdating;
- (void)_didStartLocationUpdatingWithCaller:(id)arg1;
- (void)stopUpdatingLocation;
- (void)stopUpdatingLocationData;
- (void)startUpdatingLocationDataWithContext:(long long)arg1 userSession:(id)arg2 caller:(id)arg3;
- (void)startUpdatingLocationServicesIfNecessaryWithContext:(long long)arg1 userSession:(id)arg2 caller:(id)arg3;
- (void)updateLocationDataOnceWithLocationServices:(_Bool)arg1 context:(long long)arg2 userSession:(id)arg3 caller:(id)arg4;
- (void)updateLocationDataOnceWithContext:(long long)arg1 userSession:(id)arg2 caller:(id)arg3;
- (void)updateLocationDataOnceIfNecessaryWithContext:(long long)arg1 userSession:(id)arg2 caller:(id)arg3;
- (void)_ensureNonNilObjects;
- (void)encodeWithCoder:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)init;
- (void)removeListener:(id)arg1;
- (void)addListener:(id)arg1;
- (void)clear;
- (void)saveState;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


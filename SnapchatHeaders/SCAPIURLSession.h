//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "NSURLSessionDataDelegate-Protocol.h"
#import "NSURLSessionDelegate-Protocol.h"
#import "NSURLSessionDownloadDelegate-Protocol.h"
#import "NSURLSessionTaskDelegate-Protocol.h"

@class NSMutableDictionary, NSString, NSURLSession, NSURLSessionConfiguration, SCAPISessionTaskBookkeeper, SCTimeoutIntervalEstimator, SCTimeoutIntervalForFirstByteStore;
@protocol SCPerforming;

@interface SCAPIURLSession : NSObject <NSURLSessionDelegate, NSURLSessionTaskDelegate, NSURLSessionDataDelegate, NSURLSessionDownloadDelegate>
{
    NSURLSessionConfiguration *_configuration;
    NSURLSession *_session;
    NSMutableDictionary *_requests;
    id <SCPerforming> _taskInfoPerformer;
    id <SCPerforming> _sessionPerformer;
    NSMutableDictionary *_downloadCallbacks;
    NSMutableDictionary *_uploadCallbacks;
    id <SCPerforming> _progressCallbackPerformer;
    NSMutableDictionary *_progressiveDownloadCallbackQueues;
    NSMutableDictionary *_progressiveDownloadCallbacks;
    id <SCPerforming> _progressiveDownloadCallbackPerformer;
    SCTimeoutIntervalEstimator *_timeoutIntervalForFirstByteReceived;
    SCTimeoutIntervalForFirstByteStore *_timeoutForFirstByteReceivedStore;
    SCTimeoutIntervalForFirstByteStore *_networkRTTEstimatorStore;
    SCAPISessionTaskBookkeeper *_bookkeeper;
    double _lastSessionCreationTimeStamp;
    _Bool _isBackgroundUploadSession;
    unsigned long long _sessionSeqNum;
    NSMutableDictionary *_numSucceededWarmupRequestsPerHost;
    NSMutableDictionary *_numOutstandingRequestsPerHost;
    NSMutableDictionary *_numMaxOutstandingRequestsPerHost;
    NSMutableDictionary *_connectionIdleTimestampPerHost;
    _Bool _shouldUseCrNet;
    _Bool _isUsingCrNet;
    NSString *_identifier;
}

+ (id)statusCodeErrorForRequest:(id)arg1 response:(id)arg2 data:(id)arg3;
+ (id)requestKeyForInfo:(id)arg1;
@property _Bool isUsingCrNet; // @synthesize isUsingCrNet=_isUsingCrNet;
@property(nonatomic) _Bool shouldUseCrNet; // @synthesize shouldUseCrNet=_shouldUseCrNet;
@property(readonly, nonatomic) NSString *identifier; // @synthesize identifier=_identifier;
- (void).cxx_destruct;
- (double)timeoutInterval;
- (void)logTaskStarted:(id)arg1;
- (void)startNetworkTimeoutIntervalMonitorIfNeeded;
- (double)_finalTimeoutIntervalFromEstimatedTimeout:(double)arg1;
- (double)adaptiveTimeoutIntervalForUploadSessionWithRequest:(id)arg1;
- (double)adaptiveTimeoutIntervalForNewUploadSession;
- (double)adaptiveTimeoutIntervalWithRequest:(id)arg1;
- (double)timeoutIntervalWithRequest:(id)arg1;
- (double)adaptiveTimeoutIntervalForNewSession;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didFinishDownloadingToURL:(id)arg3;
- (void)URLSession:(id)arg1 downloadTask:(id)arg2 didWriteData:(long long)arg3 totalBytesWritten:(long long)arg4 totalBytesExpectedToWrite:(long long)arg5;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveResponse:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;
- (void)_progressiveUpdateDataTask:(id)arg1 key:(id)arg2 data:(id)arg3 error:(id)arg4 completed:(_Bool)arg5;
- (_Bool)isRedirectAllowed:(id)arg1 from:(id)arg2;
- (void)URLSession:(id)arg1 task:(id)arg2 willPerformHTTPRedirection:(id)arg3 newRequest:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;
- (void)URLSession:(id)arg1 task:(id)arg2 didSendBodyData:(long long)arg3 totalBytesSent:(long long)arg4 totalBytesExpectedToSend:(long long)arg5;
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;
- (void)_updateConnectionRecordsWithFinishedTask:(id)arg1 requestInfo:(id)arg2 error:(id)arg3;
- (_Bool)respondsToSelector:(SEL)arg1;
- (void)URLSession:(id)arg1 task:(id)arg2 didFinishCollectingMetrics:(id)arg3;
- (void)URLSession:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;
- (void)_removeProgressiveDownloadCallbacksForKey:(id)arg1;
- (void)monitorProgressiveDownloadForKey:(id)arg1 queue:(id)arg2 callback:(CDUnknownBlockType)arg3;
- (void)_removeProgressCallbacksForKey:(id)arg1;
- (void)monitorUploadProgressForKey:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)monitorDownloadProgressForKey:(id)arg1 callback:(CDUnknownBlockType)arg2;
- (void)removeInfoForTask:(id)arg1;
- (void)setInfo:(id)arg1 forTask:(id)arg2;
- (id)getInfoForTask:(id)arg1;
- (void)_recordSessionInfoForRequest:(id)arg1 requestInfo:(id)arg2;
- (void)_recordConnectionMetricsWithRequestInfo:(id)arg1 task:(id)arg2;
- (id)uploadTaskWithRequest:(id)arg1 fileURL:(id)arg2 requestInfo:(id)arg3;
- (id)downloadTaskWithResumeData:(id)arg1 requestInfo:(id)arg2;
- (id)downloadTaskWithRequest:(id)arg1 requestInfo:(id)arg2;
- (id)dataTaskWithRequest:(id)arg1 requestInfo:(id)arg2;
- (void)appDidEnterBackground;
- (void)appWillEnterForeground;
- (id)createSessionWithTimeoutValue:(double)arg1;
- (double)_determineTimeoutValueForNewSessionWith:(id)arg1 params:(id)arg2;
- (void)useNewSessionWithReason:(id)arg1 params:(id)arg2;
- (void)useNewSessionWithReason:(id)arg1;
- (void)_createNewSessionConfiguration:(id)arg1;
- (void)_stopUsingCrNetIfNecessary;
- (void)_startUsingCrNetIfNecessary;
- (void)dealloc;
- (id)initWithIdentifier:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end


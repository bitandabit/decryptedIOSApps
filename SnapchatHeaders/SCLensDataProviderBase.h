//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Sep 17 2017 16:24:48).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "SCLensDataFetcherListenerV2-Protocol.h"
#import "SCLensDataProviderProtocol-Protocol.h"
#import "SCTimeProfilable-Protocol.h"

@class NSArray, NSMutableDictionary, NSMutableSet, NSString, SCLens, SCLensDataProviderListenerAnnouncer, SCUserSession;

@interface SCLensDataProviderBase : NSObject <SCLensDataFetcherListenerV2, SCTimeProfilable, SCLensDataProviderProtocol>
{
    SCUserSession *_userSession;
    NSMutableDictionary *_downloadableDataMap;
    SCLens *_selectedLens;
    NSMutableSet *_tokens;
    NSMutableSet *_lensIdsWithInvalidContent;
    NSMutableSet *_lensIdsForLoadingImages;
    NSMutableSet *_lensIdsForLoadingContent;
    NSMutableSet *_lensIdsForLoadingFilterOverlays;
    NSMutableSet *_lensIdsForLoadingAssets;
    NSMutableSet *_lensIdsForLoadedAssets;
    SCLensDataProviderListenerAnnouncer *_announcer;
    NSArray *_downloadableLenses;
}

+ (int)context;
@property(retain, nonatomic) NSArray *downloadableLenses; // @synthesize downloadableLenses=_downloadableLenses;
@property(readonly, nonatomic) SCLensDataProviderListenerAnnouncer *announcer; // @synthesize announcer=_announcer;
- (void).cxx_destruct;
- (void)lensDataFetcher:(id)arg1 didFinishLoadingFilterOverlayImageForLens:(id)arg2 imagePath:(id)arg3 error:(id)arg4;
- (void)lensDataFetcher:(id)arg1 didFinishLoadingContentForAsset:(id)arg2 content:(id)arg3 error:(id)arg4;
- (void)lensDataFetcher:(id)arg1 didFinishLoadingContentForLens:(id)arg2 contentPath:(id)arg3 error:(id)arg4;
- (void)lensDataFetcher:(id)arg1 didFinishLoadingImageForLens:(id)arg2 image:(id)arg3 error:(id)arg4;
- (void)lensDataFetcher:(id)arg1 willStartLoadingFilterOverlayImagePathForLens:(id)arg2;
- (void)lensDataFetcher:(id)arg1 willStartLoadingAsset:(id)arg2;
- (void)lensDataFetcher:(id)arg1 willStartLoadingContentForLens:(id)arg2;
- (void)lensDataFetcher:(id)arg1 willStartLoadingImageForLens:(id)arg2;
- (void)didUpdateContentForLens:(id)arg1;
- (_Bool)isLensWithInvalidContent:(id)arg1;
- (void)updateLenses;
- (void)didStopUpdatingLensData;
- (void)updateDownloadableData;
- (void)fetchDownloadableLenses;
- (id)allDownloadableData;
- (id)downloadableDataForKey:(id)arg1;
- (void)setDownloadableData:(id)arg1 forKey:(id)arg2;
- (void)reachabilityStatusChangedNotification:(id)arg1;
- (id)originalLens;
- (id)applicableContext;
- (_Bool)isNewLens:(id)arg1;
- (_Bool)isRegressorNeeded;
- (_Bool)isFetchingLens:(id)arg1;
- (void)fetchLens:(id)arg1;
- (void)fetchLensesIfNeeded;
- (void)stopUpdatingLensDataWithToken:(id)arg1;
- (id)startUpdatingLensData;
- (void)removeToken:(id)arg1;
- (void)addToken:(id)arg1;
@property(readonly, nonatomic) _Bool updating;
- (id)selectedLens;
- (void)setSelectedLens:(id)arg1;
- (void)removeListener:(id)arg1;
- (void)addListener:(id)arg1;
- (void)dealloc;
- (id)initWithUserSession:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

